<?xml version="1.0" encoding="utf-8"?>
<mdscript name="kuertee_chc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../xsd/md.xsd">
	<cues>
		<cue name="kCHC" namespace="this" version="24">
			<!--
				THIS is the main data holder for ALL crimes: kCHC.$crimesByShips.{[component]}.
				Its contents are set at PopulateCrimesByShipData.
				This is its structure. Remember to update it there all.
				kCHC.$crimesByShips.{[component]} = table[
					$crimes = [],
					$times = [],
					$startTimes = [],
					$victimShipsStations_orig = [],
					$victimShipsStations = [],
					$victimNames = [],
					$victimFactions = [],
					$fines = [],
					$isSelfDefense = [],
					$isCommanderCrime = [],
					$playerCrimeIds = [],
					$totalFines = 0,
					$kCHC_isSanctioned = []
				]
			-->
			<conditions>
				<check_any>
					<event_cue_signalled cue="md.Setup.GameStart" />
					<event_game_loaded />
				</check_any>
				<check_value value="not @player.allmodules.{player.module}.isscenario" />
			</conditions>
			<actions>
				<set_value name="global.$kCHC" exact="this" />
				<debug_text text="'event.name: ' + event.name" />
				<set_value name="$debugChance" exact="100" />
				<set_value name="$isDoDebug1" exact="false" />
				<set_value name="$isDoDebug2" exact="false" />
				<!-- start: fines -->
				<!-- fine levels -->
				<set_value name="kCHC.$userCrimeAttackedOtherFineLevel" exact="level.easy" />
				<set_value name="kCHC.$userCrimeAttackedShipFineLevel" exact="level.easy" />
				<set_value name="kCHC.$userCrimeAttackedStationFineLevel" exact="level.easy" />
				<set_value name="kCHC.$userCrimeDestroyedOtherFineLevel" exact="level.easy" />
				<set_value name="kCHC.$userCrimeBoardedObjectFineLevel" exact="level.easy" />
				<set_value name="kCHC.$userCrimeKilledShipFineLevel" exact="level.easy" />
				<set_value name="kCHC.$userCrimeDestroyedStationFineLevel" exact="level.easy" />
				<set_value name="kCHC.$userCrimeHackingDiscoveredFineLevel" exact="level.easy" />
				<set_value name="kCHC.$userCrimeScanningDiscoveredFineLevel" exact="level.veryeasy" />
				<set_value name="kCHC.$userCrimeIllegalCargoFineLevel" exact="level.veryeasy" />
				<set_value name="kCHC.$userCrimeIllegalPlotFineLevel" exact="level.easy" />
				<!-- fine multipliers -->
				<set_value name="kCHC.$userCrimeAttackedOtherFineMult" exact="0.5" />
				<set_value name="kCHC.$userCrimeAttackedShipFineMult" exact="1.0" />
				<set_value name="kCHC.$userCrimeAttackedStationFineMult" exact="2.0" />
				<set_value name="kCHC.$userCrimeDestroyedOtherFineMult" exact="1.0" />
				<set_value name="kCHC.$userCrimeBoardedObjectFineMult" exact="2.0" />
				<set_value name="kCHC.$userCrimeKilledShipFineMult" exact="3.0" />
				<set_value name="kCHC.$userCrimeDestroyedStationFineMult" exact="4.0" />
				<set_value name="kCHC.$userCrimeHackingDiscoveredFineMult" exact="1.0" />
				<set_value name="kCHC.$userCrimeScanningDiscoveredFineMult" exact="1.0" />
				<set_value name="kCHC.$userCrimeIllegalCargoFineMult" exact="1.0" />
				<set_value name="kCHC.$userCrimeIllegalPlotFineMult" exact="1.0" />
				<!-- other user options -->
				<set_value name="kCHC.$userInLargeOperationFineMult" exact="0.1" />
				<set_value name="kCHC.$userIsImpoundShipOnDock" exact="true" />
				<set_value name="kCHC.$userIsImpoundPlayerShipOnDock" exact="true" />
				<set_value name="kCHC.$userIsImpoundPlayerShipOnDockAnyFine" exact="false" />
				<set_value name="kCHC.$userShipHullPercImpound" exact="10" />
				<set_value name="kCHC.$userIsImpoundPlayerShipOnAttack" exact="true" />
				<set_value name="kCHC.$userIsImpoundPlayerShipOnAttackAnyFine" exact="false" />
				<set_value name="kCHC.$userSeparateWingmanCrimes" exact="false" />
				<set_value name="kCHC.$userIsDetectCrimesOnEnemy" exact="true" />
				<set_value name="kCHC.$userHoursToForfeitImpounds" exact="14" />
				<set_value name="kCHC.$userIsDetectCrimesOnPirate" exact="true" />
				<!-- vars -->
				<!-- getting_a_job: stolenShips variable -->
				<!-- kCHC.$stolenShips.{$ship} = faction.originalowner -->
				<set_value name="kCHC.$stolenShips" exact="table[]" />
				<set_value name="kCHC.$factionFines" exact="table[]" />
				<set_value name="kCHC.$crimesByShips" exact="table[]" />
				<set_value name="kCHC.$crimesBySpacesuit" exact="table[]" />
				<create_group groupname="kCHC.$impoundedShips" />
				<create_group groupname="kCHC.$criminalShips" />
				<set_value name="kCHC.$currentStation" exact="null" />
				<set_value name="kCHC.$attackTimesDefVAtt" exact="table[]" />
				<set_value name="kCHC.$selfDefenseAttackInsideTime" exact="10min" />
				<set_value name="kCHC.$newCrimeEventAfterTime" exact="10min" />
				<set_value name="kCHC.$isImpoundingPlayerShip" exact="false" />
				<create_group groupname="kCHC.$impoundingShips" />
				<set_value name="kCHC.$attacksAwaitingReportByNPCByShips" exact="table[]" />
				<create_group groupname="kCHC.$largeOperationTargets" />
				<set_value name="kCHC.$largeOperationStartTimes" exact="[]" />
				<set_value name="kCHC.$largeOperationLastTimes" exact="[]" />
				<set_value name="kCHC.$savedFactionFines" exact="table[]" />
				<set_value name="kCHC.$savedCrimesByShips" exact="table[]" />
				<set_value name="kCHC.$savedCriminalShips" exact="[]" />
				<create_group groupname="kCHC.$bombTargets" />
				<set_value name="kCHC.$isUpdatedTo7" exact="false" />
				<set_value name="kCHC.$pirateFactions" exact="[]" />
				<set_value name="kCHC.$userIsDetectCrimesOnPirate" exact="true" />
				<set_value name="kCHC.$disabledCrimes" exact="[]" />
				<create_group groupname="kCHC.$empTargets" />
				<!-- crime types for disable/enable functions -->
				<!-- add new types when required -->
				<set_value name="kCHC.$crime_emp_attack" exact="'crime_emp_attack'" />
				<set_value name="kCHC.$crime_bomb_attack" exact="'crime_bomb_attack'" />
				<set_value name="kCHC.$attentionNearbyAndNearer" exact="[attention.nearby, attention.adjacentroom, attention.inroom]" />
				<set_value name="kCHC.$customCrimes" exact="table[]" />
				<set_value name="kCHC.$playerCriminalRecord" exact="[]" />
				<set_value name="kCHC.$userIsAllowAttackCrimesInLowAttention" exact="true" />
				<set_value name="kCHC.$pendingCrimesById" exact="table[]" />
				<create_group groupname="kCHC.$selfDefendingAgainst" />
			</actions>
			<patch sinceversion="2">
				<debug_text text="'patch sinceversion 2, state: ' + this.state" />
				<set_value name="kCHC.$userHoursToForfeitImpounds" exact="14" />
			</patch>
			<patch sinceversion="4">
				<debug_text text="'patch sinceversion 4, state: ' + this.state" />
				<create_group groupname="kCHC.$bombTargets" />
			</patch>
			<patch sinceversion="5">
				<debug_text text="'patch sinceversion 5, state: ' + this.state" />
				<remove_value name="kCHC.$hackedStations" />
			</patch>
			<patch sinceversion="6">
				<debug_text text="'patch sinceversion 6, state: ' + this.state" />
				<create_group groupname="$releaseImpoundedShips" />
				<do_all counter="$i" exact="kCHC.$impoundedShips.count">
					<set_value name="$impoundedShip" exact="kCHC.$impoundedShips.{$i}" />
					<debug_text text="'$impoundedShip: ' + $impoundedShip" />
					<do_if value="$impoundedShip.container">
						<find_ship name="$dockedShips" space="$impoundedShip.container.zone" docked="true" multiple="true" recursive="true" />
					</do_if>
					<do_else>
						<find_ship name="$dockedShips" space="$impoundedShip.zone" docked="true" multiple="true" recursive="true" />
					</do_else>
					<debug_text text="'$dockedShips.count: ' + $dockedShips.count" />
					<do_all counter="$j" exact="$dockedShips.count">
						<set_value name="$dockedShip" exact="$dockedShips.{$j}" />
						<debug_text text="'$dockedShip: ' + $dockedShip + ' (' + $dockedShip.knownname + ', ' + $dockedShip.container.knownname + ') '" />
						<do_if value="$dockedShip != $impoundedShip and $dockedShip.container == $impoundedShip">
							<add_to_group groupname="$releaseImpoundedShips" object="$impoundedShip" />
						</do_if>
					</do_all>
				</do_all>
				<do_all counter="$i" exact="$releaseImpoundedShips.count">
					<set_value name="$impoundedShip" exact="$releaseImpoundedShips.{$i}" />
					<signal_cue_instantly cue="ReleaseShipFromImpound" param="table[$ship = $impoundedShip, $releasedByFaction = kCHC.$crimesByShips.{$impoundedShip}.$impoundedByFaction]" />
				</do_all>
				<remove_value name="$releaseImpoundedShips" />
			</patch>
			<patch sinceversion="7">
				<debug_text text="'patch sinceversion 7, state: ' + this.state" />
				<set_value name="kCHC.$isUpdatedTo7" exact="true" />
				<set_value name="kCHC.$pirateFactions" exact="[]" />
				<set_value name="kCHC.$userIsDetectCrimesOnPirate" exact="true" />
			</patch>
			<patch sinceversion="8">
				<debug_text text="'patch sinceversion 8, state: ' + this.state" />
				<set_value name="kCHC.$disabledCrimes" exact="[]" />
				<set_value name="kCHC.$crime_emp_attack" exact="'crime_emp_attack'" />
			</patch>
			<patch sinceversion="9">
				<debug_text text="'patch sinceversion 9, state: ' + this.state" />
				<create_group groupname="kCHC.$empTargets" />
				<set_value name="kCHC.$crime_bomb_attack" exact="'crime_bomb_attack'" />
				<clear_group group="kCHC.$bombTargets" />
				<reset_cue cue="BombAttacks_OnExplode" />
				<debug_text text="'BombAttacks_OnExplode.state: ' + BombAttacks_OnExplode.state" />
			</patch>
			<patch sinceversion="10">
				<debug_text text="'patch sinceversion 10, state: ' + this.state" />
				<set_value name="kCHC.$attentionNearbyAndNearer" exact="[attention.nearby, attention.adjacentroom, attention.inroom]" />
			</patch>
			<patch sinceversion="11">
				<debug_text text="'patch sinceversion 11, state: ' + this.state" />
				<set_value name="kCHC.$customCrimes" exact="table[]" />
			</patch>
			<patch sinceversion="12">
				<debug_text text="'patch sinceversion 12, state: ' + this.state" />
				<do_for_each name="$ship_inList" in="$crimesByShips.keys.list">
					<set_value name="$crimesByShips.{$ship_inList}.$playerCrimeIds" exact="[]" />
					<do_for_each name="$crime" in="$crimesByShips.{$ship_inList}.$crimes">
						<append_to_list name="$crimesByShips.{$ship_inList}.$playerCrimeIds" exact="false" />
					</do_for_each>
				</do_for_each>
				<set_value name="kCHC.$playerCriminalRecord" exact="[]" />
				<set_value name="$debugChance_saved" exact="$debugChance" />
				<set_value name="$debugChance" exact="100" />
				<do_for_each name="$ship_inList" in="$crimesByShips.keys.list">
					<do_if value="$ship_inList == player.occupiedship">
						<set_value name="$i" exact="0" />
						<do_for_each name="$crime" in="$crimesByShips.{$ship_inList}.$crimes">
							<set_value name="$i" operation="add" exact="1" />
							<run_actions ref="AddPlayerCriminalRecord" result="$playerCrimeId">
								<param name="Time" value="$crimesByShips.{$ship_inList}.$times.{$i}" />
								<param name="CriminalShip" value="$ship_inList" />
								<param name="Crime" value="$crime" />
								<param name="VictimShipStation_orig" value="$crimesByShips.{$ship_inList}.$victimShipsStations_orig.{$i}" />
								<param name="VictimShipStation" value="$crimesByShips.{$ship_inList}.$victimShipsStations.{$i}" />
								<param name="VictimFaction" value="$crimesByShips.{$ship_inList}.$victimFactions.{$i}" />
								<param name="Fines" value="$crimesByShips.{$ship_inList}.$fines.{$i}" />
							</run_actions>
							<set_value name="$crimesByShips.{$ship_inList}.$playerCrimeIds.{$i}" exact="$playerCrimeId" />
						</do_for_each>
					</do_if>
				</do_for_each>
				<set_value name="$debugChance" exact="$debugChance_saved" />
			</patch>
			<patch sinceversion="13">
				<debug_text text="'patch sinceversion 13, state: ' + this.state" />
				<reset_cue cue="K_ArriveAndLeaveStations" />
			</patch>
			<patch sinceversion="14">
				<debug_text text="'patch sinceversion 14, state: ' + this.state" />
				<!-- <append_to_list name="$playerCriminalRecord" exact="table[
					$time = $Time,
					$shipName = $shipName,
					$crime = $Crime,
					$victimName = $victimName,
					$victimFaction = $VictimFaction,
					$fines = $Fines,
					$isPaid = false
				]" /> -->
				<do_for_each name="$criminalRecord" in="kCHC.$playerCriminalRecord">
					<set_value name="$criminalRecord.$isPaid" exact="true" />
					<!-- <do_if value="not $criminalRecord.$isPaid">
						<do_if value="not kCHC.$factionFines.{$victimFaction}">
						</do_if>
					</do_if> -->
				</do_for_each>
				<!-- <do_for_each name="$ship_inList" in="kCHC.$criminalShips.keys.list">
				</do_for_each> -->
			</patch>
			<patch sinceversion="15">
				<debug_text text="'patch sinceversion 15, state: ' + this.state" />
				<remove_value name="kCHC.$droneShipTypes" />
			</patch>
			<patch sinceversion="16">
				<debug_text text="'patch sinceversion 16, state: ' + this.state" />
				<set_value name="kCHC.$userIsAllowAttackCrimesInLowAttention" exact="true" />
			</patch>
			<patch sinceversion="17">
				<debug_text text="'patch sinceversion 17, state: ' + this.state" />
				<remove_value name="player.entity.$kCHC_sanctionedAttacks" />
			</patch>
			<patch sinceversion="18">
				<debug_text text="'patch sinceversion 18, state: ' + this.state" />
				<remove_value name="$isDoDebug1" />
				<remove_value name="$isDoDebug2" />
				<remove_value name="$isDoDebug3" />
				<remove_value name="$isDoDebug4" />
			</patch>
			<patch sinceversion="19">
				<debug_text text="'patch sinceversion 19, state: ' + this.state" />
				<set_value name="$isDoDebug1" exact="false" />
				<set_value name="$isDoDebug2" exact="false" />
			</patch>
			<patch sinceversion="20">
				<set_value name="$affectedFactions" exact="[]" />
				<do_for_each name="$crimeData" in="kCHC.$playerCriminalRecord">
					<do_if value="not $crimeData.$isPaid">
						<do_if value="not @kCHC.$factionFines.{$crimeData.$victimFaction}">
							<set_value name="$crimeData.$isPaid" exact="true" />
							<debug_text text="'$crimeData: ' + $crimeData" />
							<do_if value="not $affectedFactions.indexof.{$crimeData.$victimFaction}">
								<append_to_list name="$affectedFactions" exact="$crimeData.$victimFaction" />
							</do_if>
						</do_if>
					</do_if>
				</do_for_each>
				<do_if value="@md.kuertee_ssac.kSSaC.exists">
					<set_value name="$debugChance_old" exact="md.kuertee_ssac.UserSettings.$debugChance" />
					<set_value name="md.kuertee_ssac.UserSettings.$debugChance" exact="100" />
					<do_for_each name="$affectedFaction" in="$affectedFactions">
						<run_actions ref="md.kuertee_ssac.GetCitizenshipType">
							<param name="Faction" value="$affectedFaction" />
							<param name="IsCalculate" value="true" />
							<param name="IsSilent" value="true" />
							<param name="FromId" value="'kCHC patch sinceversion 20'" />
						</run_actions>
					</do_for_each>
					<set_value name="md.kuertee_ssac.UserSettings.$debugChance" exact="$debugChance_old" />
				</do_if>
				<remove_value name="$affectedFactions" />
				<remove_value name="$crimeData" />
				<remove_value name="$debugChance_old" />
				<remove_value name="$affectedFaction" />
			</patch>
			<patch sinceversion="21">
				<set_value name="kCHC.$isUse2024CrimeDetection" exact="true" />
				<set_value name="kCHC.$attackTimesDefVAtt" exact="table[]" />
				<reset_cue cue="SetAttackTimesDefVAtt" />
				<reset_cue cue="AttackTimesDefVAttCleaner" />
			</patch>
			<patch sinceversion="22">
				<debug_text text="'patch sinceversion 22, state: ' + this.state" />
				<set_value name="kCHC.$isUse2024CrimeDetection" exact="true" />
				<set_value name="global.$kCHC" exact="kCHC" />
				<set_value name="kCHC.$pendingCrimesById" exact="table[]" />
				<create_group groupname="kCHC.$selfDefendingAgainst" />
			</patch>
			<patch sinceversion="24">
				<create_group groupname="kCHC.$selfDefendingAgainst" />
				<remove_value name="kCHC.$isUse2024CrimeDetection" />
				<remove_value name="kCHC.$attackTimesDefVAtt" />
			</patch>
			<cues>
				<cue name="Init">
					<conditions>
						<check_any>
							<event_cue_signalled />
							<event_game_loaded />
						</check_any>
						<check_value value="not @player.allmodules.{player.module}.isscenario" />
					</conditions>
					<actions>
						<do_if value="not $debugChance?">
							<set_value name="$debugChance" exact="0" />
						</do_if>
						<debug_text text="'$debugChance: ' + $debugChance" />
						<set_value name="$debugChanceExtra" exact="0" />
						<get_factions_by_tag result="kCHC.$validFactions" tag="tag.economic" />
						<get_factions_by_tag result="$validFactions2" tag="tag.plunder" />
						<do_all counter="$i" exact="$validFactions2.count">
							<do_if value="not $validFactions.indexof.{$validFactions2.{$i}}">
								<append_to_list name="$validFactions" exact="$validFactions2.{$i}" />
							</do_if>
						</do_all>
						<remove_value name="$validFactions2" />
						<remove_from_list name="$validFactions" exact="faction.player" />
						<debug_text text="'$validFactions: ' + $validFactions" chance="kCHC.$debugChance" />
						<do_if value="FindPirateFactions.state == cuestate.waiting">
							<signal_cue cue="FindPirateFactions" />
						</do_if>
						<set_value name="kCHC.$timePilotCutsceneCrimeNotification" exact="0" />
						<debug_text text="'player.hasemergencyeject: ' + player.hasemergencyeject" />
						<debug_text text="'player.isemergencyejectactive: ' + player.isemergencyejectactive" />
						<set_emergency_eject_active active="false" />
						<debug_text text="'player.hasemergencyeject (post): ' + player.hasemergencyeject" />
						<debug_text text="'player.isemergencyejectactive (post): ' + player.isemergencyejectactive" />
					</actions>
					<cues>
						<cue name="Init2" checktime="player.age + 1s">
							<actions>
								<!-- <set_value name="$debugChance_savedAtInit" exact="kCHC.$debugChance" />
								<set_value name="kCHC.$debugChance" exact="100" /> -->
								<!-- <debug_text text="'kCHC.$crimesByShips: ' + kCHC.$crimesByShips" /> -->
								<run_actions ref="CustomCrimes_Init" />
								<signal_cue_instantly cue="EnsureValidShipCrimeData" />
								<!-- <set_value name="kCHC.$debugChance" exact="$debugChance_savedAtInit" /> -->
								<reset_cue cue="parent" />
								<cancel_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<library name="DisableCrime" purpose="run_actions">
					<params>
						<param name="Crime" />
					</params>
					<actions>
						<do_if value="kCHC.$disabledCrimes?">
							<append_to_list name="kCHC.$disabledCrimes" exact="$Crime" />
						</do_if>
					</actions>
				</library>
				<library name="EnableCrime" purpose="run_actions">
					<params>
						<param name="Crime" />
					</params>
					<actions>
						<remove_from_list name="kCHC.$disabledCrimes" exact="$Crime" />
					</actions>
				</library>
				<cue name="CustomCrimes" namespace="this">
					<cues>
						<library name="CustomCrimes_Init" purpose="run_actions">
							<actions>
								<debug_text text="''" chance="md.kuertee_chc.kCHC.$debugChance" />
								<run_actions ref="CustomCrimes_Clean" />
								<set_value name="kCHC.$uiCrimeTexts" exact="table[]" />
								<set_value name="kCHC.$uiCrimeTexts.{relationchangereason.attackedobject}" exact="{11383, 1008}" />
								<set_value name="kCHC.$uiCrimeTexts.{relationchangereason.boardedobject}" exact="{11383, 1009}" />
								<set_value name="kCHC.$uiCrimeTexts.{relationchangereason.killedobject}" exact="{11383, 1010}" />
								<set_value name="kCHC.$uiCrimeTexts.{relationchangereason.hackingdiscovered}" exact="{11383, 1011}" />
								<set_value name="kCHC.$uiCrimeTexts.{relationchangereason.scanningdiscovered}" exact="{11383, 1012}" />
								<set_value name="kCHC.$uiCrimeTexts.{relationchangereason.illegalcargo}" exact="{11383, 1013}" />
								<set_value name="kCHC.$uiCrimeTexts.{relationchangereason.illegalplot}" exact="{11383, 1014}" />
								<do_for_each name="$crimeId_inList" in="kCHC.$customCrimes.keys.list">
									<set_value name="kCHC.$uiCrimeTexts.{$crimeId_inList}" exact="kCHC.$customCrimes.{$crimeId_inList}.$name" />
								</do_for_each>
							</actions>
						</library>
						<library name="CustomCrimes_Clean" purpose="run_actions">
							<actions>
								<set_value name="$invalids" exact="[]" />
								<do_all counter="$i" exact="@kCHC.$customCrimes.keys.count">
									<set_value name="$id" exact="kCHC.$customCrimes.keys.{$i}" />
									<do_if value="not kCHC.$customCrimes.{$id}.$cue.exists">
										<do_if value="not $invalids.indexof.{$id}">
											<debug_text text="'$id: ' + $id + ' $customCrimes.{$id}: ' + kCHC.$customCrimes.{$id}" chance="md.kuertee_chc.kCHC.$debugChance" />
											<append_to_list name="$invalids" exact="$id" />
										</do_if>
									</do_if>
								</do_all>
								<debug_text text="'$invalids: ' + $invalids" />
								<do_all counter="$i" exact="$invalids.count">
									<set_value name="$crimeId" exact="$invalids.{$i}" />
									<debug_text text="'$crimeId: ' + $crimeId + ' $customCrimes.{$crimeId}: ' + kCHC.$customCrimes.{$crimeId}" chance="md.kuertee_chc.kCHC.$debugChance" />
									<do_all counter="$shipI" exact="kCHC.$crimesByShips.keys.count">
										<set_value name="$ship" exact="kCHC.$crimesByShips.keys.{$shipI}" />
										<set_value name="$crimeI" exact="kCHC.$crimesByShips.{$ship}.$crimes.indexof.{$crimeId}" />
										<debug_text text="'$crimeI: ' + $crimeI + ' $crimes.{$crimeI}: ' + kCHC.$crimesByShips.{$ship}.$crimes.{$crimeI}" chance="md.kuertee_chc.kCHC.$debugChance" />
										<do_while value="$crimeI">
											<remove_value name="kCHC.$crimesByShips.{$ship}.$crimes.{$crimeI}" />
											<remove_value name="kCHC.$crimesByShips.{$ship}.$times.{$crimeI}" />
											<remove_value name="kCHC.$crimesByShips.{$ship}.$startTimes.{$crimeI}" />
											<remove_value name="kCHC.$crimesByShips.{$ship}.$victimShipsStations_orig.{$crimeI}" />
											<remove_value name="kCHC.$crimesByShips.{$ship}.$victimShipsStations.{$crimeI}" />
											<remove_value name="kCHC.$crimesByShips.{$ship}.$victimNames.{$crimeI}" />
											<remove_value name="kCHC.$crimesByShips.{$ship}.$victimFactions.{$crimeI}" />
											<remove_value name="kCHC.$crimesByShips.{$ship}.$fines.{$crimeI}" />
											<remove_value name="kCHC.$crimesByShips.{$ship}.$isSelfDefense.{$crimeI}" />
											<do_if value="kCHC.$crimesByShips.{$ship}.$kCHC_isSanctioned?">
												<remove_value name="kCHC.$crimesByShips.{$ship}.$kCHC_isSanctioned.{$crimeI}" />
											</do_if>
											<remove_value name="kCHC.$crimesByShips.{$ship}.$isCommanderCrime.{$crimeI}" />
											<set_value name="$crimeI" exact="kCHC.$crimesByShips.{$ship}.$crimes.indexof.{$crimeId}" />
										</do_while>
									</do_all>
									<remove_value name="kCHC.$customCrimes.{$id}" />
								</do_all>
							</actions>
						</library>
						<library name="CustomCrimes_Add" purpose="run_actions">
							<params>
								<param name="Cue" />
								<param name="Name" />
								<param name="FineLevel" default="level.easy" />
								<param name="FineMult" default="1" />
							</params>
							<actions>
								<set_value name="$id" exact="kCHC.$customCrimes.keys.count + 1" />
								<debug_text text="'$id: ' + $id" chance="md.kuertee_chc.kCHC.$debugChance" />
								<set_value name="kCHC.$customCrimes.{$id}" exact="table[
									$id = $id,
									$cue = $Cue,
									$name = $Name,
									$fineLevel = $FineLevel,
									$fineMult = $FineMult
								]" />
								<set_value name="kCHC.$uiCrimeTexts.{$id}" exact="$Name" />
								<debug_text text="'kCHC.$customCrimes: ' + kCHC.$customCrimes" chance="md.kuertee_chc.kCHC.$debugChance" />
								<debug_text text="'kCHC.$customCrimes.{$id}: ' + kCHC.$customCrimes.{$id}" chance="md.kuertee_chc.kCHC.$debugChance" />
								<debug_text text="'kCHC.$uiCrimeTexts.{$id}: ' + kCHC.$uiCrimeTexts.{$id}" chance="md.kuertee_chc.kCHC.$debugChance" />
								<return value="kCHC.$customCrimes.{$id}" />
							</actions>
						</library>
						<library name="CustomCrimes_GetFineLevel" purpose="run_actions">
							<params>
								<param name="CrimeId" />
							</params>
							<actions>
								<set_value name="$fineLevelAndMult" exact="table[
									$fineLevel = level.easy,
									$fineMult = 1
								]" />
								<do_if value="kCHC.$customCrimes.{$CrimeId}">
									<set_value name="$fineLevelAndMult.$fineLevel" exact="kCHC.$customCrimes.{$CrimeId}.$fineLevel" />
									<set_value name="$fineLevelAndMult.$fineMult" exact="kCHC.$customCrimes.{$CrimeId}.$fineMult" />
								</do_if>
								<return value="$fineLevelAndMult" />
							</actions>
						</library>
					</cues>
				</cue>
				<library name="GetCommanderOrDefensible" purpose="run_actions">
					<params>
						<param name="Object" />
					</params>
					<actions>
						<set_value name="$Object_final" exact="$Object" />
						<do_if value="@$Object_final.defensible">
							<set_value name="$Object_final" exact="$Object_final.defensible" />
						</do_if>
						<do_if value="
							(
								(not md.kuertee_chc.kCHC.$userSeparateWingmanCrimes) or
								@$Object_final.isunit or
								@$Object_final.islasertower
							) and
							@$Object_final.toplevelcommander.isclass.ship
						">
							<set_value name="$Object_final" exact="$Object_final.toplevelcommander" />
						</do_if>
						<return value="$Object_final" />
					</actions>
				</library>
				<!--
					
					                                                       ,,
					         mm     mm                  `7MM        mm     db
					         MM     MM                    MM        MM
					 ,6"Yb.mmMMmm mmMMmm  ,6"Yb.  ,p6"bo  MM  ,MP'mmMMmm `7MM  `7MMpMMMb.pMMMb.  .gP"Ya  ,pP"Ybd
					8)   MM  MM     MM   8)   MM 6M'  OO  MM ;Y     MM     MM    MM    MM    MM ,M'   Yb 8I   `"
					 ,pm9MM  MM     MM    ,pm9MM 8M       MM;Mm     MM     MM    MM    MM    MM 8M"""""" `YMMMa.
					8M   MM  MM     MM   8M   MM YM.    , MM `Mb.   MM     MM    MM    MM    MM YM.    , L.   I8
					`Moo9^Yo.`Mbmo  `Mbmo`Moo9^Yo.YMbmd'.JMML. YA.  `Mbmo.JMML..JMML  JMML  JMML.`Mbmmd' M9mmmP'
					
					
				 -->
				<cue name="LargeOperationStarted" instantiate="true">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<debug_text text="'event.param.$target: ' + event.param.$target.knownname + ' (' + event.param.$target.idcode + ')'" chance="kCHC.$debugChance" />
						<add_to_group groupname="kCHC.$largeOperationTargets" object="event.param.$target" />
						<!-- fill start times up to the number of targets -->
						<do_while value="kCHC.$largeOperationStartTimes.count lt kCHC.$largeOperationTargets.count">
							<append_to_list name="kCHC.$largeOperationStartTimes" exact="player.age" />
							<append_to_list name="kCHC.$largeOperationLastTimes" exact="player.age" />
						</do_while>
						<do_if value="LargeOperationTargetsCleaner.state == cuestate.waiting">
							<signal_cue cue="LargeOperationTargetsCleaner" />
						</do_if>
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<cue name="LargeOperationContinued" instantiate="true">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<!-- <debug_text text="'event.param.$target: ' + event.param.$target.knownname + ' (' + event.param.$target.idcode + ')'" chance="kCHC.$debugChance" /> -->
						<set_value name="$i" exact="kCHC.$largeOperationTargets.indexof.{event.param.$target}" />
						<do_if value="$i">
							<set_value name="kCHC.$largeOperationLastTimes.{$i}" exact="player.age" />
						</do_if>
						<remove_value name="$i" />
						<do_if value="LargeOperationTargetsCleaner.state == cuestate.waiting">
							<signal_cue cue="LargeOperationTargetsCleaner" />
						</do_if>
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<cue name="LargeOperationFinished" instantiate="true">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<debug_text text="'event.param.$target: ' + event.param.$target.knownname + ' (' + event.param.$target.idcode + ')'" chance="kCHC.$debugChance" />
						<set_value name="$i" exact="kCHC.$largeOperationTargets.indexof.{event.param.$target}" />
						<do_if value="$i">
							<set_value name="kCHC.$largeOperationLastTimes.{$i}" exact="player.age" />
						</do_if>
						<remove_value name="$i" />
						<do_if value="LargeOperationTargetsCleaner.state == cuestate.waiting">
							<signal_cue cue="LargeOperationTargetsCleaner" />
						</do_if>
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<cue name="OnLargeOperationTargetDestroyed" instantiate="true">
					<conditions>
						<event_object_destroyed group="kCHC.$largeOperationTargets" />
					</conditions>
					<actions>
						<set_value name="$target" exact="event.object" />
						<debug_text text="'$target: ' + $target.knownname + ' (' + $target.idcode + ')'" chance="kCHC.$debugChance" />
						<set_value name="$i" exact="kCHC.$largeOperationTargets.indexof.{$target}" />
						<do_if value="$i">
							<signal_cue_instantly cue="LargeOperationFinished" param="table[$target = $target]" />
						</do_if>
						<remove_value name="$target" />
						<remove_value name="$i" />
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<cue name="LargeOperationTargetsCleaner" namespace="this">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<cues>
						<cue name="LargeOperationTargetsCleanerLoop" instantiate="true" checkinterval="1min">
							<actions>
								<debug_text text="''" chance="@md.$kuertee_interval" />
								<set_value name="$timeNow" exact="player.age" />
								<set_value name="$i" exact="1" />
								<set_value name="$removeds" exact="[]" />
								<do_while value="$i le kCHC.$largeOperationTargets.count">
									<do_if value="$timeNow - kCHC.$largeOperationLastTimes.{$i} gt kCHC.$newCrimeEventAfterTime">
										<debug_text text="'kCHC.$largeOperationTargets.{$i}: ' + kCHC.$largeOperationTargets.{$i}.knownname + ' (' + kCHC.$largeOperationTargets.{$i}.idcode + ')'" chance="kCHC.$debugChance" />
										<append_to_list name="$removeds" exact="kCHC.$largeOperationTargets.{$i}" />
										<remove_from_group group="kCHC.$largeOperationTargets" object="kCHC.$largeOperationTargets.{$i}" />
										<remove_value name="kCHC.$largeOperationStartTimes.{$i}" />
										<remove_value name="kCHC.$largeOperationLastTimes.{$i}" />
									</do_if>
									<do_else>
										<set_value name="$i" exact="$i + 1" />
									</do_else>
								</do_while>
								<do_if value="$removeds.count">
									<debug_text text="'$removeds: ' + $removeds.count + ': ' + $removeds" chance="kCHC.$debugChance" />
								</do_if>
								<remove_value name="$timeNow" />
								<remove_value name="$i" />
								<remove_value name="$removeds" />
								<do_if value="not kCHC.$largeOperationTargets.count">
									<reset_cue cue="parent" />
									<cancel_cue cue="this" />
								</do_if>
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="BombAttacks_OnAttach">
					<conditions>
						<event_player_bomb_attached />
					</conditions>
					<actions>
						<set_value name="$bomb" exact="event.param" />
						<debug_text text="'$bomb: ' + $bomb" chance="kCHC.$debugChance" />
						<set_value name="$target" exact="$bomb.station" />
						<do_if value="$target">
							<do_while value="$target.station">
								<set_value name="$target" exact="$target.station" />
							</do_while>
						</do_if>
						<do_else>
							<set_value name="$target" exact="$bomb.ship" />
							<do_while value="$target.ship">
								<set_value name="$target" exact="$target.ship" />
							</do_while>
						</do_else>
						<debug_text text="'$target: ' + $target + ' (' + $target.knownname+ ')'" chance="kCHC.$debugChance" />
						<do_if value="[macro.bomb_player_limpet_emp_01_mk1_macro].indexof.{$bomb.macro}">
							<add_to_group groupname="kCHC.$empTargets" object="$target" />
						</do_if>
						<do_else>
							<add_to_group groupname="kCHC.$bombTargets" object="$target" />
						</do_else>
						<debug_text text="'kCHC.$empTargets: ' + kCHC.$empTargets" chance="kCHC.$debugChance" />
						<debug_text text="'kCHC.$bombTargets: ' + kCHC.$bombTargets" chance="kCHC.$debugChance" />
						<remove_value name="$target" />
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="BombAttacks_OnExplode" instantiate="true">
					<conditions>
						<check_any>
							<event_object_attacked group="kCHC.$bombTargets" />
							<event_object_attacked group="kCHC.$empTargets" />
						</check_any>
					</conditions>
					<actions>
						<set_value name="$empOrBombTarget" exact="event.object" />
						<debug_text text="'$empOrBombTarget: ' + $empOrBombTarget" />
						<reset_cue cue="EMPAndBombTargetsCleaner" />
					</actions>
					<cues>
						<cue name="BombAttacks_OnExplode2" checktime="player.age + kCHC.$newCrimeEventAfterTime">
							<actions>
								<debug_text text="'kCHC.$empTargets: ' + kCHC.$empTargets" chance="kCHC.$debugChance" />
								<debug_text text="'kCHC.$bombTargets: ' + kCHC.$bombTargets" chance="kCHC.$debugChance" />
								<remove_from_group group="kCHC.$empTargets" object="$empOrBombTarget" />
								<remove_from_group group="kCHC.$bombTargets" object="$empOrBombTarget" />
								<debug_text text="'kCHC.$empTargets (post): ' + kCHC.$empTargets" chance="kCHC.$debugChance" />
								<debug_text text="'kCHC.$bombTargets (post): ' + kCHC.$bombTargets" chance="kCHC.$debugChance" />
								<do_if value="EMPAndBombTargetsCleaner.state == cuestate.waiting">
									<signal_cue cue="EMPAndBombTargetsCleaner" />
								</do_if>
								<cancel_cue cue="parent" />
								<cancel_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="EMPAndBombTargetsCleaner" namespace="this">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<cues>
						<cue name="EMPAndBombTargetsCleaner_interval" instantiate="true" checktime="player.age + 10min" checkinterval="10min">
							<actions>
								<debug_text text="''" chance="@md.$kuertee_interval" />
								<clear_group group="kCHC.$empTargets" />
								<clear_group group="kCHC.$bombTargets" />
								<debug_text text="'kCHC.$empTargets (cleaned): ' + kCHC.$empTargets" chance="kCHC.$debugChance" />
								<debug_text text="'kCHC.$bombTargets (cleaned): ' + kCHC.$bombTargets" chance="kCHC.$debugChance" />
								<reset_cue cue="parent" />
								<cancel_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="Sanctions" namespace="this" version="3">
					<actions>
						<set_value name="$idCodes" exact="[]" />
						<create_group groupname="$scanTargets" />
					</actions>
					<patch sinceversion="2">
						<set_value name="$idCodes" exact="[]" />
					</patch>
					<patch sinceversion="3">
						<create_group groupname="$scanTargets" />
					</patch>
					<cues>
						<cue name="Sanctions_SanctionAttacks" namespace="this" instantiate="true">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<set_value name="$ship" exact="event.param.$ship" />
								<append_to_list name="Sanctions.$idCodes" exact="$ship.idcode" />
								<debug_text text="'$ship: ' + $ship.knownname + ', ' + $ship.idcode + ', Sanctions.$idCodes.indexof.{$ship.idcode}: ' + @Sanctions.$idCodes.indexof.{$ship.idcode}" chance="kCHC.$debugChance" />
							</actions>
							<cues>
								<cue name="Sanctions_SanctionAttacks_CleanUp">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<event_object_destroyed object="$ship" />
										</check_any>
									</conditions>
									<actions>
										<remove_from_list name="Sanctions.$idCodes" exact="$ship.idcode" />
										<debug_text text="'$ship: ' + @$ship.knownname + ', ' + @$ship.idcode + ', Sanctions.$idCodes.indexof.{$ship.idcode} (removed_from_list): ' + @Sanctions.$idCodes.indexof.{$ship.idcode}" chance="kCHC.$debugChance" />
										<cancel_cue cue="parent" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Sanctions_SanctionAttacks_TimeOut" checktime="player.age + 3h">
									<actions>
										<signal_cue cue="Sanctions_SanctionAttacks_CleanUp" />
										<cancel_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
						<cue name="Sanctions_SanctionScan" namespace="this" instantiate="true">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<add_to_group groupname="Sanctions.$scanTargets" object="event.param.$scanTarget" />
								<cancel_cue cue="Sanctions_SanctionScans" />
							</actions>
						</cue>
						<cue name="Sanctions_UnsanctionScan" namespace="this" instantiate="true">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<remove_from_group group="$scanTargets" object="event.param.$scanTarget" />
								<cancel_cue cue="Sanctions_UnsanctionScans" />
							</actions>
						</cue>
					</cues>
				</cue>
				<library name="Sanctions_GetIsIdCodeSanctioned" purpose="run_actions">
					<params>
						<param name="IdCode" />
					</params>
					<actions>
						<return value="Sanctions.$idCodes.indexof.{$IdCode}" />
					</actions>
				</library>
				<library name="Sanctions_GetIsScanSanctioned" purpose="run_actions">
					<params>
						<param name="ScanTarget" />
					</params>
					<actions>
						<set_value name="$isSanctioned" exact="[
							@md.Scenario_Tutorials.Tutorial_Scan_Ship_ScanFinished.namespace.$ScanShip,
							@md.Story_Paranid.Ch6_Gride_AtMonument_Scanned.namespace.$GrideShip,
							@md.Story_Yaki.Ch13_2_Scan_Successful.namespace.$DamagedTrader,
						].indexof.{$ScanTarget} gt 0 or
						Sanctions.$scanTargets.indexof.{$ScanTarget}" />
						<return value="$isSanctioned" />
					</actions>
				</library>
				<!--
					
					
					         mm     mm                  `7MM
					         MM     MM                    MM
					 ,6"Yb.mmMMmm mmMMmm  ,6"Yb.  ,p6"bo  MM  ,MP'
					8)   MM  MM     MM   8)   MM 6M'  OO  MM ;Y
					 ,pm9MM  MM     MM    ,pm9MM 8M       MM;Mm
					8M   MM  MM     MM   8M   MM YM.    , MM `Mb.
					`Moo9^Yo.`Mbmo  `Mbmo`Moo9^Yo.YMbmd'.JMML. YA.
					
					
				 -->
				<cue name="CrimeAttack" instantiate="true" namespace="this">
					<conditions>
						<event_cue_signalled />
						<check_value value="event.param.$criminalShip.isrealclass.ship or event.param.$criminalShip.isrealclass.spacesuit" />
						<check_value value="not event.param.$criminalShip.islasertower" />
						<check_value value="event.param.$criminalShip.isplayerowned" />
						<check_value value="not @event.param.$victimShipStation.isrealclass.[class.mine, class.missile]" />
						<check_value value="kCHC.$validFactions.indexof.{@event.param.$victimShipStation.owner}" />
						<check_value value="kCHC.$userIsDetectCrimesOnPirate or (not kCHC.$pirateFactions.indexof.{@event.param.$victimShipStation.owner})" />
						<!-- attack is not waiting to get reported -->
						<check_value value="not @kCHC.$attacksAwaitingReportByNPCByShips.{event.param.$criminalShip}.indexof.{event.param.$victimShipStation}" />
						<check_any>
							<check_value value="kCHC.$userIsAllowAttackCrimesInLowAttention" />
							<check_value value="event.param.$criminalShip.attention ge attention.adjacentzone" />
						</check_any>
					</conditions>
					<actions>
						<debug_text text="'event.name: ' + event.name" chance="kCHC.$debugChance" />
						<set_value name="$isBombAttack" exact="false" />
						<do_if value="event.name == 'event_cue_signalled'">
							<set_value name="$criminalShip" exact="event.param.$criminalShip" />
							<set_value name="$victimShipStation" exact="event.param.$victimShipStation" />
							<set_value name="$isBombAttack" exact="@event.param.$isBombAttack" />
							<set_value name="$crimeTime" exact="@event.param.$crimeTime" />
						</do_if>
						<do_elseif value="event.name == 'event_player_owned_attacked_object'">
							<set_value name="$criminalShip" exact="event.param" />
							<set_value name="$victimShipStation" exact="event.param2" />
							<set_value name="$isBombAttack" exact="event.param3 == killmethod.hitbybomb or (event.param3 == killmethod.hitbyareadamage and $criminalShip.isrealclass.spacesuit)" />
						</do_elseif>
						<set_value name="$reportedByName" exact="@event.param.$reportedByName" />
						<set_value name="$reportedAt" exact="@event.param.$reportedAtName" />
						<run_actions ref="GetCommanderOrDefensible" result="$criminalShip">
							<param name="Object" value="$criminalShip" />
						</run_actions>
						<set_value name="$victimShipStation_orig" exact="$victimShipStation" />
						<run_actions ref="GetCommanderOrDefensible" result="$victimShipStation">
							<param name="Object" value="$victimShipStation_orig" />
						</run_actions>
						<set_value name="$victimFaction" exact="$victimShipStation.owner" />
						<do_if value="$victimFaction != $victimShipStation.trueowner">
							<!-- <property name="scannedlevel" result="Scanned level of component (-1 if not scanned by player)" type="integer" />
						    <property name="maxlegalscanlevel.{$component}" result="Max legal scan level when component scans other component (takes licences into account)" type="integer" />
						    <property name="maxlegalscanlevel.{$faction}" result="Max legal scan level when scanning object of faction (takes licences into account)" type="integer" />
						    <property name="secrecylevel" result="Secrecy level of component" type="integer" /> -->
							<do_if value="$victimShipStation.scannedlevel ge $victimShipStation.secrecylevel">
								<set_value name="$victimFaction" exact="$victimShipStation.trueowner" />
							</do_if>
						</do_if>
						<set_value name="$isCancelNow" exact="$victimShipStation.isunit" />
						<do_if value="not $isCancelNow">
							<run_actions ref="Sanctions_GetIsIdCodeSanctioned" result="$kCHC_isSanctioned">
								<param name="IdCode" value="$victimShipStation.idcode" />
							</run_actions>
							<debug_text text="'$kCHC_isSanctioned: ' + $kCHC_isSanctioned" chance="kCHC.$debugChance" />
							<do_if value="@$kCHC_isSanctioned">
								<set_value name="$isCancelNow" exact="true" />
							</do_if>
						</do_if>
						<set_value name="$kCHC_isSanctioned" exact="@$victimShipStation.assignedaipilot.$kCHC_isSanctioned or @$victimShipStation.defencenpc.$kCHC_isSanctioned" />
						<do_if value="$criminalShip == player.ship or $criminalShip == player.entity or $isBombAttack">
							<debug_text text="'event.name: ' + event.name + ' $isCancelNow: ' + $isCancelNow" chance="kCHC.$debugChance" />
							<debug_text text="'$criminalShip: ' + $criminalShip + ' (' + $criminalShip.knownname + ') class: ' + $criminalShip.class + ' $criminalShip.isrealclass.spacesuit: ' + $criminalShip.isrealclass.spacesuit" chance="kCHC.$debugChance" />
							<debug_text text="'$victimShipStation: ' + $victimShipStation + ' (' + $victimShipStation.knownname + ') class: ' + $victimShipStation.class + ' $victimShipStation.isrealclass.spacesuit: ' + $victimShipStation.isrealclass.spacesuit" chance="kCHC.$debugChance" />
							<debug_text text="'$isBombAttack: ' + $isBombAttack + ' $isunit: ' + @$victimShipStation.isunit + ' $kCHC_isSanctioned: ' + @$kCHC_isSanctioned" chance="kCHC.$debugChance" />
						</do_if>
						<do_if value="not $isCancelNow">
							<set_value name="$isSelfDefense" exact="@event.crime.$isSelfDefense" />
							<set_value name="$isBombAttackACrime" exact="false" />
							<do_if value="not $isBombAttack">
								<set_value name="$defender" exact="$criminalShip" />
								<set_value name="$attacker" exact="$victimShipStation" />
								<do_if value="not $isSelfDefense">
									<do_if value="@kCHC.$attackTimesDefVAtt.{$defender}.{$attacker}">
										<do_if value="@kCHC.$attackTimesDefVAtt.{$attacker}.{$defender}">
											<set_value name="$isSelfDefense" exact="kCHC.$attackTimesDefVAtt.{$defender}.{$attacker} lt kCHC.$attackTimesDefVAtt.{$attacker}.{$defender}" />
										</do_if>
										<do_else>
											<set_value name="$isSelfDefense" exact="true" />
										</do_else>
										<do_if value="$attacker == player.ship or $attacker.isclass.spacesuit or $isBombAttack">
											<debug_text text="'player.ship $attacker: ' + $attacker.knownname + ' (' + $attacker.idcode + ')'" chance="kCHC.$debugChanceExtra" />
											<debug_text text="'$defender: ' + $defender.knownname + ' (' + $defender.idcode + ')'" chance="kCHC.$debugChanceExtra" />
											<debug_text text="'kCHC.$attackTimesDefVAtt.{$defender}.{$attacker}: ' + @kCHC.$attackTimesDefVAtt.{$defender}.{$attacker}" chance="kCHC.$debugChanceExtra" />
											<debug_text text="'kCHC.$attackTimesDefVAtt.{$attacker}.{$defender}: ' + @kCHC.$attackTimesDefVAtt.{$attacker}.{$defender}" chance="kCHC.$debugChanceExtra" />
											<debug_text text="'$isSelfDefense: ' + $isSelfDefense" chance="kCHC.$debugChanceExtra" />
											<debug_text text="'$kCHC_isSanctioned: ' + @$kCHC_isSanctioned" chance="kCHC.$debugChanceExtra" />
										</do_if>
									</do_if>
								</do_if>
								<remove_value name="$defender" />
								<remove_value name="$attacker" />
							</do_if>
							<do_else>
								<set_value name="$isBombAttackACrime" exact="true" />
								<debug_text text="'kCHC.$disabledCrimes ' + kCHC.$disabledCrimes" chance="kCHC.$debugChance" />
								<debug_text text="'kCHC.$disabledCrimes.indexof.{kCHC.$crime_emp_attack} ' + kCHC.$disabledCrimes.indexof.{kCHC.$crime_emp_attack}" chance="kCHC.$debugChance" />
								<debug_text text="'kCHC.$disabledCrimes.indexof.{kCHC.$crime_bomb_attack} ' + kCHC.$disabledCrimes.indexof.{kCHC.$crime_bomb_attack}" chance="kCHC.$debugChance" />
								<debug_text text="'kCHC.$empTargets: ' + kCHC.$empTargets + ' indexof: ' + kCHC.$empTargets.indexof.{$victimShipStation}" chance="kCHC.$debugChance" />
								<debug_text text="'kCHC.$bombTargets: ' + kCHC.$bombTargets + ' indexof: ' + kCHC.$bombTargets.indexof.{$victimShipStation}" chance="kCHC.$debugChance" />
								<!-- this weird if required because there's no method to determine which bomb was used in the attack -->
								<do_if value="kCHC.$disabledCrimes.indexof.{kCHC.$crime_emp_attack} and (not kCHC.$disabledCrimes.indexof.{kCHC.$crime_bomb_attack})">
									<!-- emp is not a crime, but bomb is a crime -->
									<do_if value="kCHC.$empTargets.indexof.{$victimShipStation} and (not kCHC.$bombTargets.indexof.{$victimShipStation})">
										<!-- disabled crime: target is in emp targets list but not in bomb targets list -->
										<set_value name="$isBombAttackACrime" exact="false" />
									</do_if>
								</do_if>
								<do_elseif value="kCHC.$disabledCrimes.indexof.{kCHC.$crime_bomb_attack} and (not kCHC.$disabledCrimes.indexof.{kCHC.$crime_emp_attack})">
									<!-- bomb is not a crime, but emp is a crime -->
									<do_if value="kCHC.$bombTargets.indexof.{$victimShipStation} and (not kCHC.$empTargets.indexof.{$victimShipStation})">
										<!-- disabled crime: target is in bomb targets list but not in emp targets list -->
										<set_value name="$isBombAttackACrime" exact="false" />
									</do_if>
								</do_elseif>
								<do_else>
									<!-- both emp and bombs are not a crime -->
									<set_value name="$isBombAttackACrime" exact="false" />
								</do_else>
								<debug_text text="'$isBombAttackACrime: ' + $isBombAttackACrime" chance="kCHC.$debugChance" />
							</do_else>
							<do_if value="
								($criminalShip != player.ship and (not @player.ship.subordinates.indexof.{$criminalShip})) or
								($isBombAttack and $isBombAttackACrime) or
								$victimShipStation.hasrelation.enemy.{$criminalShip}
							">
								<signal_cue_instantly cue="CrimeConfirm" param="table[
									$crime = relationchangereason.attackedobject,
									$crimeTime = @$crimeTime,
									$criminalShip = $criminalShip,
									$victimShipStation = $victimShipStation,
									$victimShipStation_orig = $victimShipStation_orig,
									$victimFaction = $victimFaction,
									$isSelfDefense = $isSelfDefense,
									$kCHC_isSanctioned = @$kCHC_isSanctioned,
									$fromCue = namespace,
									$reportedByName = @$reportedByName,
									$reportedAtName = @$reportedAtName,
								]" />
								<set_value name="$isCancelNow" exact="true" />
							</do_if>
							<do_else>
								<do_if value="$isBombAttack">
									<!-- bomb attacks don't need confirmations. they are either a crime, or not. -->
									<set_value name="$isCancelNow" exact="true" />
								</do_if>
								<do_else>
									<do_if value="not @kCHC.$attacksAwaitingReportByNPCByShips.{$criminalShip}">
										<create_group groupname="kCHC.$attacksAwaitingReportByNPCByShips.{$criminalShip}" />
									</do_if>
									<do_if value="not kCHC.$attacksAwaitingReportByNPCByShips.{$criminalShip}.indexof.{$victimShipStation}">
										<add_to_group groupname="kCHC.$attacksAwaitingReportByNPCByShips.{$criminalShip}" object="$victimShipStation" />
									</do_if>
									<do_else>
										<set_value name="$isCancelNow" exact="true" />
									</do_else>
								</do_else>
							</do_else>
						</do_if>
						<do_if value="$isCancelNow">
							<remove_value name="$isBombAttack" />
							<remove_value name="$criminalShip" />
							<remove_value name="$victimShipStation" />
							<remove_value name="$victimFaction" />
							<remove_value name="$isSelfDefense" />
							<do_if value="$kCHC_isSanctioned?">
								<remove_value name="$kCHC_isSanctioned" />
							</do_if>
							<cancel_cue cue="this" />
						</do_if>
						<remove_value name="$isCancelNow" />
					</actions>
					<cues>
						<cue name="CrimeAttack_Reported">
							<conditions>
								<event_player_relation_changed reason="relationchangereason.attackedobject" />
								<check_value value="@event.object.owner == $victimFaction" />
							</conditions>
							<actions>
								<do_if value="@kCHC.$attacksAwaitingReportByNPCByShips.{$criminalShip} and kCHC.$attacksAwaitingReportByNPCByShips.{$criminalShip}.indexof.{$victimShipStation}">
									<remove_from_group group="kCHC.$attacksAwaitingReportByNPCByShips.{$criminalShip}" object="$victimShipStation" />
								</do_if>
								<do_if value="not kCHC.$attacksAwaitingReportByNPCByShips.{$criminalShip}.count">
									<remove_value name="kCHC.$attacksAwaitingReportByNPCByShips.{$criminalShip}" />
								</do_if>
								<run_actions ref="Sanctions_GetIsIdCodeSanctioned" result="$kCHC_isSanctioned">
									<param name="IdCode" value="$victimShipStation.idcode" />
								</run_actions>
								<signal_cue_instantly cue="CrimeConfirm" param="table[
									$crime = relationchangereason.attackedobject,
									$criminalShip = $criminalShip,
									$victimShipStation = $victimShipStation,
									$victimFaction = $victimFaction,
									$isSelfDefense = $isSelfDefense,
									$kCHC_isSanctioned = @$kCHC_isSanctioned,
									$fromCue = namespace,
									$reportedByName = @$reportedByName,
									$reportedAtName = @$reportedAtName,
								]" />
								<remove_value name="$isBombAttack" />
								<remove_value name="$criminalShip" />
								<remove_value name="$victimShipStation" />
								<remove_value name="$victimFaction" />
								<remove_value name="$isSelfDefense" />
								<do_if value="$kCHC_isSanctioned?">
									<remove_value name="$kCHC_isSanctioned" />
								</do_if>
								<cancel_cue cue="parent" />
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="CrimeAttack_NotReported">
							<delay exact="kCHC.$newCrimeEventAfterTime" />
							<actions>
								<do_if value="typeof kCHC.$attacksAwaitingReportByNPCByShips.{$criminalShip} == datatype.group">
									<do_if value="@kCHC.$attacksAwaitingReportByNPCByShips.{$criminalShip}.indexof.{$victimShipStation}">
										<remove_from_group group="kCHC.$attacksAwaitingReportByNPCByShips.{$criminalShip}" object="$victimShipStation" />
									</do_if>
								</do_if>
								<do_if value="not @kCHC.$attacksAwaitingReportByNPCByShips.{$criminalShip}.count">
									<remove_value name="kCHC.$attacksAwaitingReportByNPCByShips.{$criminalShip}" />
								</do_if>
								<debug_text text="'$criminalShip: ' + $criminalShip.knownname + ' (' + @$criminalShip.idcode + ')'" chance="kCHC.$debugChance" />
								<debug_text text="'$victimShipStation: ' + $victimShipStation.knownname + ' (' + @$victimShipStation.idcode + ')'" chance="kCHC.$debugChance" />
								<debug_text text="'$victimFaction: ' + $victimFaction" chance="kCHC.$debugChance" />
								<remove_value name="$isBombAttack" />
								<remove_value name="$criminalShip" />
								<remove_value name="$victimShipStation" />
								<remove_value name="$victimFaction" />
								<remove_value name="$isSelfDefense" />
								<do_if value="$kCHC_isSanctioned?">
									<remove_value name="$kCHC_isSanctioned" />
								</do_if>
								<cancel_cue cue="parent" />
								<cancel_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<!--
					
					            ,,    ,,    ,,
					`7MM        db  `7MM  `7MM
					  MM              MM    MM
					  MM  ,MP'`7MM    MM    MM
					  MM ;Y     MM    MM    MM
					  MM;Mm     MM    MM    MM
					  MM `Mb.   MM    MM    MM
					.JMML. YA..JMML..JMML..JMML.
					
					
				 -->
				<cue name="CrimeKill" instantiate="true" namespace="this">
					<conditions>
						<event_cue_signalled />
						<check_value value="event.param.$criminalShip.isrealclass.ship" />
						<check_value value="not event.param.$criminalShip.islasertower" />
						<check_value value="event.param.$criminalShip.isplayerowned" />
						<check_value value="not @event.param.$victimShipStation.isrealclass.[class.mine, class.missile]" />
						<check_value value="kCHC.$validFactions.indexof.{@event.param.$victimShipStation.owner}" />
						<check_value value="not kCHC.$pirateFactions.indexof.{@event.param.$victimShipStation.owner}" />
						<check_value value="not event.param.$victimShipStation.isunit" />
						<check_any>
							<check_value value="kCHC.$userIsAllowAttackCrimesInLowAttention" />
							<check_value value="event.param.$criminalShip.attention ge attention.adjacentzone" />
						</check_any>
					</conditions>
					<actions>
						<do_if value="event.name == 'event_cue_signalled'">
							<set_value name="$criminalShip" exact="event.param.$criminalShip" />
							<set_value name="$victimShipStation" exact="event.param.$victimShipStation" />
							<set_value name="$crimeTime" exact="@event.param.$crimeTime" />
						</do_if>
						<do_elseif value="event.name == 'event_player_owned_killed_object'">
							<set_value name="$criminalShip" exact="event.param" />
							<set_value name="$victimShipStation" exact="event.param2" />
						</do_elseif>
						<set_value name="$isShipSubElement" exact="false" />
						<do_if value="@$victimShipStation.defensible.isclass.ship">
							<set_value name="$isShipSubElement" exact="true" />
						</do_if>
						<run_actions ref="GetCommanderOrDefensible" result="$criminalShip">
							<param name="Object" value="$criminalShip" />
						</run_actions>
						<set_value name="$victimShipStation_orig" exact="$victimShipStation" />
						<run_actions ref="GetCommanderOrDefensible" result="$victimShipStation">
							<param name="Object" value="$victimShipStation_orig" />
						</run_actions>
						<do_if value="(not $isShipSubElement) and (not $victimShipStation.isunit)">
							<debug_text text="$victimShipStation + ' event.name: ' + event.name" chance="kCHC.$debugChance" />
							<set_value name="$isSelfDefense" exact="false" />
							<!-- getting var from assignedaipilot or from defencenpc doesn't work on kill, because those two objects would be dead/invalid at this time -->
							<!-- <set_value name="$kCHC_isSanctioned" exact="@$victimShipStation.assignedaipilot.$kCHC_isSanctioned or @$victimShipStation.defencenpc.$kCHC_isSanctioned" /> -->
							<run_actions ref="Sanctions_GetIsIdCodeSanctioned" result="$kCHC_isSanctioned">
								<param name="IdCode" value="$victimShipStation.idcode" />
							</run_actions>
							<debug_text text="$victimShipStation + '(' + $victimShipStation.knownname + ', ' + $victimShipStation.idcode + ') $kCHC_isSanctioned: ' + $kCHC_isSanctioned" chance="kCHC.$debugChanceExtra" />
							<debug_text text="'$kCHC_isSanctioned: ' + @$kCHC_isSanctioned" chance="kCHC.$debugChance" />
							<do_if value="not $kCHC_isSanctioned">
								<set_value name="$defender" exact="$criminalShip" />
								<set_value name="$attacker" exact="$victimShipStation" />
								<do_if value="@kCHC.$attackTimesDefVAtt.{$defender}.{$attacker}">
									<do_if value="@kCHC.$attackTimesDefVAtt.{$attacker}.{$defender}">
										<set_value name="$isSelfDefense" exact="kCHC.$attackTimesDefVAtt.{$defender}.{$attacker} lt kCHC.$attackTimesDefVAtt.{$attacker}.{$defender}" />
									</do_if>
									<do_else>
										<set_value name="$isSelfDefense" exact="true" />
									</do_else>
									<do_if value="$attacker == player.ship">
										<debug_text text="'player.ship $attacker: ' + $attacker.knownname + ' (' + $attacker.idcode + ')'" chance="kCHC.$debugChanceExtra" />
										<debug_text text="'$defender: ' + $defender.knownname + ' (' + $defender.idcode + ')'" chance="kCHC.$debugChanceExtra" />
										<debug_text text="'kCHC.$attackTimesDefVAtt.{$defender}.{$attacker}: ' + @kCHC.$attackTimesDefVAtt.{$defender}.{$attacker}" chance="kCHC.$debugChanceExtra" />
										<debug_text text="'kCHC.$attackTimesDefVAtt.{$attacker}.{$defender}: ' + @kCHC.$attackTimesDefVAtt.{$attacker}.{$defender}" chance="kCHC.$debugChanceExtra" />
										<debug_text text="'$isSelfDefense: ' + $isSelfDefense" chance="kCHC.$debugChanceExtra" />
										<debug_text text="'$kCHC_isSanctioned: ' + @$kCHC_isSanctioned" chance="kCHC.$debugChanceExtra" />
									</do_if>
								</do_if>
								<remove_value name="$defender" />
								<remove_value name="$attacker" />
								<set_value name="$victimFaction" exact="$victimShipStation.owner" />
								<do_if value="$victimFaction != $victimShipStation.trueowner">
									<do_if value="$victimShipStation.scannedlevel ge $victimShipStation.secrecylevel">
										<set_value name="$victimFaction" exact="$victimShipStation.trueowner" />
									</do_if>
								</do_if>
								<signal_cue_instantly cue="CrimeConfirm" param="table[
									$crime = relationchangereason.killedobject,
									$crimeTime = @$crimeTime,
									$criminalShip = $criminalShip,
									$victimShipStation = $victimShipStation,
									$victimShipStation_orig = $victimShipStation_orig,
									$victimFaction = $victimFaction,
									$isSelfDefense = $isSelfDefense,
									$kCHC_isSanctioned = @$kCHC_isSanctioned,
									$fromCue = namespace,
									$reportedByName = @event.param.$reportedByName,
									$reportedAtName = @event.param.$reportedAtName,
								]" />
								<remove_value name="$criminalShip" />
								<remove_value name="$victimShipStation" />
								<remove_value name="$victimFaction" />
								<remove_value name="$isSelfDefense" />
								<do_if value="$kCHC_isSanctioned?">
									<remove_value name="$kCHC_isSanctioned" />
								</do_if>
							</do_if>
						</do_if>
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<!--
					
					                                  ,,
					          mm                    `7MM
					          MM                      MM
					,pP"Ybd mmMMmm .gP"Ya   ,6"Yb.    MM
					8I   `"   MM  ,M'   Yb 8)   MM    MM
					`YMMMa.   MM  8M""""""  ,pm9MM    MM
					L.   I8   MM  YM.    , 8M   MM    MM
					M9mmmP'   `Mbmo`Mbmmd' `Moo9^Yo..JMML.
					
					
				 -->
				<cue name="CrimeBoarding" instantiate="true" namespace="this">
					<conditions>
						<event_cue_signalled />
						<check_value value="event.param.$criminalShip.isrealclass.ship" />
					</conditions>
					<actions>
						<set_value name="$criminalShip" exact="event.param.$criminalShip" />
						<run_actions ref="GetCommanderOrDefensible" result="$criminalShip">
							<param name="Object" value="$criminalShip" />
						</run_actions>
						<set_value name="$victimShipStation_orig" exact="event.param.$victimShipStation" />
						<run_actions ref="GetCommanderOrDefensible" result="$victimShipStation">
							<param name="Object" value="$victimShipStation_orig" />
						</run_actions>
						<set_value name="$victimFaction" exact="$victimShipStation.owner" />
						<do_if value="$victimFaction != $victimShipStation.trueowner">
							<do_if value="$victimShipStation.scannedlevel ge $victimShipStation.secrecylevel">
								<set_value name="$victimFaction" exact="$victimShipStation.trueowner" />
							</do_if>
						</do_if>
						<debug_text text="'$criminalShip: ' + $criminalShip.knownname + ' (' + @$criminalShip.idcode + ')'" chance="kCHC.$debugChanceExtra" />
						<debug_text text="'$victimShipStation: ' + $victimShipStation.knownname + ' (' + @$victimShipStation.idcode + ')'" chance="kCHC.$debugChanceExtra" />
						<run_actions ref="Sanctions_GetIsIdCodeSanctioned" result="$kCHC_isSanctioned">
							<param name="IdCode" value="$victimShipStation.idcode" />
						</run_actions>
						<debug_text text="$victimShipStation + '(' + $victimShipStation.knownname + ', ' + $victimShipStation.idcode + ') $kCHC_isSanctioned: ' + $kCHC_isSanctioned" chance="kCHC.$debugChanceExtra" />
						<debug_text text="'$kCHC_isSanctioned: ' + @$kCHC_isSanctioned" chance="kCHC.$debugChance" />
						<do_if value="not $kCHC_isSanctioned">
							<debug_text text="'$victimFaction: ' + $victimFaction" chance="kCHC.$debugChanceExtra" />
							<signal_cue_instantly cue="CrimeConfirm" param="table[
								$crime = relationchangereason.boardedobject,
								$crimeTime = @event.param.$crimeTime,
								$criminalShip = $criminalShip,
								$victimShipStation = $victimShipStation,
								$victimShipStation_orig = $victimShipStation_orig,
								$victimFaction = $victimFaction,
								$kCHC_isSanctioned = @$kCHC_isSanctioned,
								$fromCue = namespace,
								$reportedByName = @event.param.$reportedByName,
								$reportedAtName = @event.param.$reportedAtName,
							]" />
							<remove_value name="$criminalShip" />
							<remove_value name="$victimShipStation" />
							<remove_value name="$victimFaction" />
						</do_if>
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<cue name="CrimeClaimShip" instantiate="true" namespace="this">
					<conditions>
						<check_any>
							<event_object_signalled object="player.galaxy" param="'kuertee_chc_crime_claim_ship'" />
							<check_all>
								<event_player_signal_unlock_finished />
								<check_value value="@event.param.type == signalleaktype.claim" />
								<check_value value="@event.param2.isclass.ship" />
							</check_all>
						</check_any>
					</conditions>
					<actions>
						<do_if value="event.name == 'event_object_signalled'">
							<set_value name="$criminalShip" exact="event.param2.$criminalShip" />
							<set_value name="$victimShipStation" exact="event.param2.$victimShipStation" />
						</do_if>
						<do_if value="event.name == 'event_player_signal_unlock_finished'">
							<set_value name="$criminalShip" exact="player.ship" />
							<set_value name="$victimShipStation" exact="event.param2" />
							<run_actions ref="Step1_GetCriminalShip" result="$criminalShip">
								<param name="kCHC_criminalShip" value="$criminalShip" />
							</run_actions>
							<run_actions ref="Step1_GetVictimShipStation" result="$victimShipStation">
								<param name="kCHC_victimShipStation" value="$victimShipStation" />
							</run_actions>
							<run_actions ref="Step3_RecordCrime">
								<param name="kCHC_criminalShip" value="$criminalShip" />
								<param name="kCHC_victimShipStation" value="$victimShipStation" />
								<param name="kCHC_crime" value="relationchangereason.boardedobject" />
								<param name="kCHC_isSelfDefense" value="false" />
							</run_actions>
						</do_if>
						<do_else>
							<run_actions ref="GetCommanderOrDefensible" result="$criminalShip">
								<param name="Object" value="$criminalShip" />
							</run_actions>
							<set_value name="$victimShipStation_orig" exact="$victimShipStation" />
							<run_actions ref="GetCommanderOrDefensible" result="$victimShipStation">
								<param name="Object" value="$victimShipStation_orig" />
							</run_actions>
							<debug_text text="'$criminalShip: ' + $criminalShip.knownname + ' (' + $criminalShip.idcode + ')'" chance="kCHC.$debugChanceExtra" />
							<debug_text text="'$victimShipStation: ' + $victimShipStation.knownname + ' (' + $victimShipStation.idcode + ')'" chance="kCHC.$debugChanceExtra" />
							<run_actions ref="Sanctions_GetIsIdCodeSanctioned" result="$kCHC_isSanctioned">
								<param name="IdCode" value="$victimShipStation.idcode" />
							</run_actions>
							<debug_text text="$victimShipStation + '(' + $victimShipStation.knownname + ', ' + $victimShipStation.idcode + ') $kCHC_isSanctioned: ' + $kCHC_isSanctioned" chance="kCHC.$debugChanceExtra" />
							<debug_text text="'$kCHC_isSanctioned: ' + @$kCHC_isSanctioned" chance="kCHC.$debugChance" />
							<do_if value="not $kCHC_isSanctioned">
								<set_value name="$victimFaction" exact="null" />
								<do_all counter="$i" exact="kCHC.$crimesByShips.keys.count">
									<set_value name="$ship" exact="kCHC.$crimesByShips.keys.{$i}" />
									<set_value name="$j" exact="kCHC.$crimesByShips.{$ship}.$victimShipsStations.indexof.{$victimShipStation}" />
									<do_if value="$j">
										<set_value name="$victimFaction" exact="kCHC.$crimesByShips.{$ship}.$victimFactions.{$j}" />
										<break />
									</do_if>
								</do_all>
								<debug_text text="'$victimFaction: ' + $victimFaction" chance="kCHC.$debugChanceExtra" />
								<do_if value="$victimFaction">
									<signal_cue_instantly cue="CrimeConfirm" param="table[
										$crime = relationchangereason.boardedobject,
										$criminalShip = $criminalShip,
										$victimShipStation = $victimShipStation,
										$victimShipStation_orig = $victimShipStation_orig,
										$victimFaction = $victimFaction,
										$kCHC_isSanctioned = @$kCHC_isSanctioned,
										$fromCue = namespace,
										$reportedByName = @event.param2.$reportedByName,
										$reportedAtName = @event.param2.$reportedAtName,
									]" />
								</do_if>
								<remove_value name="$victimShipStation" />
								<remove_value name="$victimFaction" />
							</do_if>
						</do_else>
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<!--
					
					
					
					
					,pP"Ybd  ,p6"bo   ,6"Yb.  `7MMpMMMb.
					8I   `" 6M'  OO  8)   MM    MM    MM
					`YMMMa. 8M        ,pm9MM    MM    MM
					L.   I8 YM.    , 8M   MM    MM    MM
					M9mmmP'  YMbmd'  `Moo9^Yo..JMML  JMML.
					
					
				 -->
				<cue name="CrimeIllegalScan" instantiate="true" namespace="this">
					<conditions>
						<check_any>
							<event_cue_signalled />
							<event_scan_finished scanner="global.$PlayerContainerGroup" />
						</check_any>
					</conditions>
					<actions>
						<do_if value="event.name == 'event_cue_signalled'">
							<set_value name="$criminalShip" exact="event.param.$criminalShip" />
							<set_value name="$victimShipStation" exact="event.param.$victimShipStation" />
						</do_if>
						<do_else>
							<set_value name="$criminalShip" exact="player.ship" />
							<set_value name="$victimShipStation" exact="event.param" />
						</do_else>
						<set_value name="$victimFaction" exact="$victimShipStation.trueowner" />
						<run_actions ref="GetCommanderOrDefensible" result="$criminalShip">
							<param name="Object" value="$criminalShip" />
						</run_actions>
						<set_value name="$victimShipStation_orig" exact="$victimShipStation" />
						<run_actions ref="GetCommanderOrDefensible" result="$victimShipStation">
							<param name="Object" value="$victimShipStation_orig" />
						</run_actions>
						<set_value name="$isIllegalScan" exact="false" />
						<!-- <do_if value="not [@player.zone.policefaction, @player.sector.owner].indexof.{faction.player}"> -->
						<do_if value="
							(not [faction.ownerless, null].indexof.{@player.sector.owner}) and
							(not [@player.zone.policefaction, @player.sector.owner].indexof.{faction.player}) and
							(not faction.player.haslicence.police.{player.sector.owner})
						">
							<!-- condition 1: sector has an owner -->
							<!-- condition 2: player is not the sector's or zone's owner or police faction -->
							<!-- condition 3: player doesn't have a police licence with the sector's owner -->
							<do_if value="$victimShipStation.scannedlevel gt $criminalShip.maxlegalscanlevel.{$victimShipStation}">
								<set_value name="$isIllegalScan" exact="true" />
							</do_if>
						</do_if>
						<do_if value="$isIllegalScan">
							<run_actions ref="Sanctions_GetIsScanSanctioned" result="$kCHC_isSanctioned">
								<param name="ScanTarget" value="$victimShipStation" />
							</run_actions>
							<do_if value="not $kCHC_isSanctioned">
								<run_actions ref="Sanctions_GetIsIdCodeSanctioned" result="$kCHC_isSanctioned">
									<param name="IdCode" value="$victimShipStation.idcode" />
								</run_actions>
							</do_if>
							<do_if value="$kCHC_isSanctioned">
								<set_value name="$isIllegalScan" exact="false" />
							</do_if>
						</do_if>
						<do_if value="$isIllegalScan">
							<debug_text text="'$criminalShip: ' + $criminalShip.knownname + ' (' + @$criminalShip.idcode + ')'" chance="kCHC.$debugChanceExtra" />
							<debug_text text="'$victimShipStation: ' + $victimShipStation.knownname + ' (' + @$victimShipStation.idcode + ')'" chance="kCHC.$debugChanceExtra" />
							<debug_text text="'$victimFaction: ' + $victimFaction" chance="kCHC.$debugChanceExtra" />
							<signal_cue_instantly cue="CrimeConfirm" param="table[
								$crime = relationchangereason.scanningdiscovered,
								$crimeTime = @event.param.$crimeTime,
								$criminalShip = $criminalShip,
								$victimShipStation = $victimShipStation,
								$victimShipStation_orig = $victimShipStation_orig,
								$victimFaction = $victimFaction,
								$kCHC_isSanctioned = @$kCHC_isSanctioned,
								$fromCue = namespace,
								$reportedByName = @event.param.$reportedByName,
								$reportedAtName = @event.param.$reportedAtName,
							]" />
						</do_if>
						<remove_value name="$isIllegalScan" />
						<remove_value name="$criminalShip" />
						<remove_value name="$victimShipStation" />
						<remove_value name="$victimFaction" />
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<!--
					
					                                                        ,,
					                                                      `7MM
					                                                        MM
					,pP"Ybd `7MMpMMMb.pMMMb.`7MM  `7MM  .P"Ybmmm  .P"Ybmmm  MM  .gP"Ya
					8I   `"   MM    MM    MM  MM    MM :MI  I8   :MI  I8    MM ,M'   Yb
					`YMMMa.   MM    MM    MM  MM    MM  WmmmP"    WmmmP"    MM 8M""""""
					L.   I8   MM    MM    MM  MM    MM 8M        8M         MM YM.    ,
					M9mmmP' .JMML  JMML  JMML.`Mbod"YML.YMMMMMb   YMMMMMb .JMML.`Mbmmd'
					                                   6'     dP 6'     dP
					                                   Ybmmmd'   Ybmmmd'
				 -->
				<cue name="CrimeIllegalCargo" instantiate="true" namespace="this">
					<conditions>
						<check_any>
							<event_cue_signalled />
							<event_object_signalled object="player.galaxy" param="'kuertee_chc_crime_illegal_cargo'" />
						</check_any>
					</conditions>
					<actions>
						<do_if value="event.name == 'event_cue_signalled'">
							<set_value name="$criminalShip" exact="event.param.$criminalShip" />
							<set_value name="$victimShipStation" exact="event.param.$victimShipStation" />
						</do_if>
						<do_elseif value="event.name == 'event_object_signalled'">
							<set_value name="$criminalShip" exact="event.param2.$criminalShip" />
							<set_value name="$victimShipStation" exact="event.param2.$victimShipStation" />
						</do_elseif>
						<do_if value="not $criminalShip.isrealclass.[class.ship, class.station]">
							<do_if value="$criminalShip.ship">
								<do_if value="$criminalShip" exact="$criminalShip.ship" />
							</do_if>
							<do_elseif value="$criminalShip.station">
								<do_if value="$criminalShip" exact="$criminalShip.station" />
							</do_elseif>
						</do_if>
						<do_if value="(not $victimShipStation.isrealclass.ship) and (not $victimShipStation.isrealclass.station)">
							<do_if value="$victimShipStation.ship">
								<set_value name="$victimShipStation" exact="$victimShipStation.ship" />
							</do_if>
							<do_elseif value="$victimShipStation.station">
								<set_value name="$victimShipStation" exact="$victimShipStation.station" />
							</do_elseif>
						</do_if>
						<run_actions ref="GetCommanderOrDefensible" result="$criminalShip">
							<param name="Object" value="$criminalShip" />
						</run_actions>
						<set_value name="$victimShipStation_orig" exact="$victimShipStation" />
						<run_actions ref="GetCommanderOrDefensible" result="$victimShipStation">
							<param name="Object" value="$victimShipStation_orig" />
						</run_actions>
						<set_value name="$victimFaction" exact="$victimShipStation.owner" />
						<do_if value="$victimFaction != $victimShipStation.trueowner">
							<do_if value="$victimShipStation.scannedlevel ge $victimShipStation.secrecylevel">
								<set_value name="$victimFaction" exact="$victimShipStation.trueowner" />
							</do_if>
						</do_if>
						<debug_text text="'$criminalShip: ' + $criminalShip.knownname + ' (' + @$criminalShip.idcode + ')'" chance="kCHC.$debugChance" />
						<debug_text text="'$victimShipStation: ' + $victimShipStation.knownname + ' (' + @$victimShipStation.idcode + ')'" chance="kCHC.$debugChance" />
						<debug_text text="'$victimFaction: ' + $victimFaction" chance="kCHC.$debugChance" />
						<signal_cue_instantly cue="CrimeConfirm" param="table[
							$crime = relationchangereason.illegalcargo,
							$crimeTime = @event.param.$crimeTime,
							$criminalShip = $criminalShip,
							$victimShipStation = $victimShipStation,
							$victimShipStation_orig = $victimShipStation_orig,
							$victimFaction = $victimFaction,
							$fromCue = namespace,
							$reportedByName = @event.param.$reportedByName,
							$reportedAtName = @event.param.$reportedAtName,
						]" />
						<remove_value name="$criminalShip" />
						<remove_value name="$victimShipStation" />
						<remove_value name="$victimFaction" />
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<!--
					
					
					                                      mm
					                                      MM
					,pP"Ybd  ,dW"Yvd `7MM  `7MM   ,6"Yb.mmMMmm
					8I   `" ,W'   MM   MM    MM  8)   MM  MM
					`YMMMa. 8M    MM   MM    MM   ,pm9MM  MM
					L.   I8 YA.   MM   MM    MM  8M   MM  MM
					M9mmmP'  `MbmdMM   `Mbod"YML.`Moo9^Yo.`Mbmo
					              MM
					            .JMML.
				 -->
				<cue name="CrimeIllegalPlot" instantiate="true" namespace="this">
					<conditions>
						<check_any>
							<event_cue_signalled />
							<check_all>
								<event_player_relation_changed />
								<check_value value="event.param3 == relationchangereason.illegalplot" />
							</check_all>
						</check_any>
					</conditions>
					<actions>
						<do_if value="event.name == 'event_cue_signalled'">
							<set_value name="$victimShipStation_orig" exact="event.param.$victimShipStation" />
							<run_actions ref="GetCommanderOrDefensible" result="$victimShipStation">
								<param name="Object" value="$victimShipStation_orig" />
							</run_actions>
							<signal_cue_instantly cue="CrimeConfirm" param="table[
								$crime = @event.param.$crime,
								$crimeTime = @event.param.$crimeTime,
								$criminalShip = @event.param.$criminalShip,
								$victimShipStation = $victimShipStation,
								$victimShipStation_orig = $victimShipStation_orig,
								$victimFaction = @event.param.$victimShipStation.owner,
								$fromCue = namespace,
								$reportedByName = @event.param.$reportedByName,
								$reportedAtName = @event.param.$reportedAtName,
							]" />
						</do_if>
						<do_elseif value="event.name == 'event_player_relation_changed'">
							<set_value name="$crime" exact="event.param3" />
							<set_value name="$criminalShip" exact="player.entity" />
							<run_actions ref="Step1_GetCriminalShip" result="$criminalShip">
								<param name="kCHC_criminalShip" value="$criminalShip" />
							</run_actions>
							<set_value name="$victimShipStation" exact="event.object" />
							<run_actions ref="Step1_GetVictimShipStation" result="$victimShipStation">
								<param name="kCHC_victimShipStation" value="$victimShipStation" />
							</run_actions>
							<run_actions ref="Step3_RecordCrime">
								<param name="kCHC_criminalShip" value="$criminalShip" />
								<param name="kCHC_victimShipStation" value="$victimShipStation" />
								<param name="kCHC_crime" value="$crime" />
								<param name="kCHC_isSelfDefense" value="false" />
							</run_actions>
						</do_elseif>
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<library name="SetFines">
					<actions>
						<set_value name="$victim_forFinesCalculation" exact="$victimShipStation_orig" />
						<do_if value="not $victim_forFinesCalculation">
							<set_value name="$victim_forFinesCalculation" exact="$victimShipStation" />
						</do_if>
						<set_value name="$fineLevel" exact="null" />
						<do_if value="$crime == relationchangereason.attackedobject">
							<do_if value="$victim_forFinesCalculation.isrealclass.station">
								<set_value name="$fineLevel" exact="kCHC.$userCrimeAttackedStationFineLevel" />
								<set_value name="$fineMult" exact="kCHC.$userCrimeAttackedStationFineMult" />
							</do_if>
							<do_elseif value="$victim_forFinesCalculation.isrealclass.ship and (not $victim_forFinesCalculation.isunit) and (not $victim_forFinesCalculation.islasertower)">
								<set_value name="$fineLevel" exact="kCHC.$userCrimeAttackedShipFineLevel" />
								<set_value name="$fineMult" exact="kCHC.$userCrimeAttackedShipFineMult" />
							</do_elseif>
							<do_else>
								<set_value name="$fineLevel" exact="kCHC.$userCrimeAttackedOtherFineLevel" />
								<set_value name="$fineMult" exact="kCHC.$userCrimeAttackedOtherFineMult" />
							</do_else>
						</do_if>
						<do_elseif value="$crime == relationchangereason.boardedobject">
							<set_value name="$fineLevel" exact="kCHC.$userCrimeBoardedObjectFineLevel" />
							<set_value name="$fineMult" exact="kCHC.$userCrimeBoardedObjectFineMult" />
						</do_elseif>
						<do_elseif value="$crime == relationchangereason.killedobject">
							<do_if value="$victim_forFinesCalculation.isrealclass.station">
								<set_value name="$fineLevel" exact="kCHC.$userCrimeDestroyedStationFineLevel" />
								<set_value name="$fineMult" exact="kCHC.$userCrimeDestroyedStationFineMult" />
							</do_if>
							<do_elseif value="$victim_forFinesCalculation.isrealclass.ship and (not $victim_forFinesCalculation.isunit) and (not $victim_forFinesCalculation.islasertower)">
								<set_value name="$fineLevel" exact="kCHC.$userCrimeKilledShipFineLevel" />
								<set_value name="$fineMult" exact="kCHC.$userCrimeKilledShipFineMult" />
							</do_elseif>
							<do_else>
								<set_value name="$fineLevel" exact="kCHC.$userCrimeDestroyedOtherFineLevel" />
								<set_value name="$fineMult" exact="kCHC.$userCrimeDestroyedOtherFineMult" />
							</do_else>
						</do_elseif>
						<do_elseif value="$crime == relationchangereason.hackingdiscovered">
							<set_value name="$fineLevel" exact="kCHC.$userCrimeHackingDiscoveredFineLevel" />
							<set_value name="$fineMult" exact="kCHC.$userCrimeHackingDiscoveredFineMult" />
						</do_elseif>
						<do_elseif value="$crime == relationchangereason.scanningdiscovered">
							<set_value name="$fineLevel" exact="kCHC.$userCrimeScanningDiscoveredFineLevel" />
							<set_value name="$fineMult" exact="kCHC.$userCrimeScanningDiscoveredFineMult" />
						</do_elseif>
						<do_elseif value="$crime == relationchangereason.illegalcargo">
							<set_value name="$fineLevel" exact="kCHC.$userCrimeIllegalCargoFineLevel" />
							<set_value name="$fineMult" exact="kCHC.$userCrimeIllegalCargoFineMult" />
						</do_elseif>
						<do_elseif value="$crime == relationchangereason.illegalplot">
							<set_value name="$fineLevel" exact="kCHC.$userCrimeIllegalPlotFineLevel" />
							<set_value name="$fineMult" exact="kCHC.$userCrimeIllegalPlotFineMult" />
						</do_elseif>
						<do_else>
							<run_actions ref="CustomCrimes_GetFineLevel" result="$fineLevelAndMult">
								<param name="CrimeId" value="$crime" />
							</run_actions>
							<set_value name="$fineLevel" exact="$fineLevelAndMult.$fineLevel" />
							<set_value name="$fineMult" exact="$fineLevelAndMult.$fineMult" />
						</do_else>
						<!-- start: get fine -->
						<set_value name="$fines" exact="0" />
						<set_value name="$MissionThread" exact="null" />
						<set_value name="$OfferType" exact="null" />
						<signal_cue_instantly cue="md.LIB_Reward_Balancing.Reward_Money" param="[namespace, $fineLevel, 1, $victimFaction]" comment="basic reward credits" />
						<include_actions ref="md.LIB_Reward_Balancing.Apply_RewardMultiplier" comment="signal leak and mission thread bonus" />
						<set_value name="$fines" exact="$Reward_Money__Result_Multiplied" />
						<!-- end: get fine -->
						<set_value name="$fines" exact="($fines)f * $fineMult * 1ct" />
						<remove_value name="$fineLevel" />
						<remove_value name="$fineMult" />
						<remove_value name="$MissionThread" />
						<remove_value name="$OfferType" />
						<remove_value name="$Reward_Money__Result_Multiplied" />
					</actions>
				</library>
				<library name="NotificationFines">
					<actions>
						<!-- <xs:enumeration value="relationchangereason.attackedobject" />
						<xs:enumeration value="relationchangereason.boardedobject" />
						<xs:enumeration value="relationchangereason.killedobject" />
						<xs:enumeration value="relationchangereason.hackingdiscovered" />
						<xs:enumeration value="relationchangereason.scanningdiscovered" />
						<xs:enumeration value="relationchangereason.illegalcargo" />
						<xs:enumeration value="relationchangereason.illegalplot" /> -->
						<set_value name="$line" exact="null" />
						<set_value name="$caption" exact="''" />
						<set_value name="$caption2" exact="''" />
						<set_value name="$logbook" exact="''" />
						<run_actions ref="GetObjectName" result="$criminalShipName">
							<param name="Object" value="$criminalShip" />
						</run_actions>
						<run_actions ref="GetObjectName" result="$victimShipStationName">
							<param name="Object" value="$victimShipStation" />
						</run_actions>
						<do_if value="$crime == relationchangereason.attackedobject">
							<set_value name="$line" exact="2010" />
							<set_value name="$caption" exact="readtext.{11383}.{$line}.[$criminalShipName, $fines.formatted.{'%s %Cr'}, $victimShipStationName] + '\n'" comment="You were fined %1(Cr) for attacking %2(ship or station)." />
							<do_if value="$criminalShip.isrealclass.spacesuit or $criminalShip == player.entity">
								<set_value name="$line" exact="2024" />
								<set_value name="$caption" exact="readtext.{11383}.{$line}.[$fines.formatted.{'%s %Cr'}, $victimShipStationName, $criminalShipName] + '\n'" comment="You (spacesuit) were fined %1(Cr)\nfor attacking %3(ship or station)." />
							</do_if>
							<do_else>
								<set_value name="$line" exact="2000" />
								<set_value name="$caption2" exact="readtext.{11383}.{$line}.[$fines.formatted.{'%s %Cr'}, $victimShipStationName, $criminalShipName] + '\n'" comment="We were fined %1(Cr) for attacking %2(ship or station)." />
							</do_else>
							<do_if value="not @$reportedAtName">
								<set_value name="$logbook" exact="{11383, 2100}.[$criminalShipName, $victimShipStationName, $fines.formatted.{'%s %Cr'}, $reportedByName]" />
							</do_if>
							<do_else>
								<set_value name="$logbook" exact="{11383, 2200}.[$criminalShipName, $victimShipStationName, $fines.formatted.{'%s %Cr'}, $reportedByName, $reportedAtName]" />
							</do_else>
						</do_if>
						<do_elseif value="$crime == relationchangereason.boardedobject">
							<set_value name="$line" exact="2011" />
							<set_value name="$caption" exact="readtext.{11383}.{$line}.[$criminalShipName, $fines.formatted.{'%s %Cr'}, $victimShipStationName] + '\n'" comment="You were fined %1(Cr) for boarding %2(ship or station)." />
							<do_if value="$criminalShip.isrealclass.spacesuit or $criminalShip == player.entity">
								<set_value name="$line" exact="2025" />
								<set_value name="$caption" exact="readtext.{11383}.{$line}.[$fines.formatted.{'%s %Cr'}, $victimShipStationName, $criminalShipName] + '\n'" comment="You (spacesuit) were fined %1(Cr)\nfor boarding %3(ship or station)." />
							</do_if>
							<do_else>
								<set_value name="$line" exact="2001" />
								<set_value name="$caption2" exact="readtext.{11383}.{$line}.[$fines.formatted.{'%s %Cr'}, $victimShipStationName, $criminalShipName] + '\n'" comment="We were fined %1(Cr) for boarding %2(ship or station)." />
							</do_else>
							<do_if value="not @$reportedAtName">
								<set_value name="$logbook" exact="{11383, 2101}.[$criminalShipName, $victimShipStationName, $fines.formatted.{'%s %Cr'}, $reportedByName]" />
							</do_if>
							<do_else>
								<set_value name="$logbook" exact="{11383, 2201}.[$criminalShipName, $victimShipStationName, $fines.formatted.{'%s %Cr'}, $reportedByName, $reportedAtName]" />
							</do_else>
						</do_elseif>
						<do_elseif value="$crime == relationchangereason.killedobject">
							<set_value name="$line" exact="2012" />
							<set_value name="$caption" exact="readtext.{11383}.{$line}.[$criminalShipName, $fines.formatted.{'%s %Cr'}, $victimShipStationName] + '\n'" comment="You were fined %1(Cr) for destroying %2(ship or station)." />
							<do_if value="$criminalShip.isrealclass.spacesuit or $criminalShip == player.entity">
								<set_value name="$line" exact="2026" />
								<set_value name="$caption" exact="readtext.{11383}.{$line}.[$fines.formatted.{'%s %Cr'}, $victimShipStationName, $criminalShipName] + '\n'" comment="You (spacesuit) were fined %1(Cr)\nfor destroying %3(ship or station)." />
							</do_if>
							<do_else>
								<set_value name="$line" exact="2002" />
								<set_value name="$caption2" exact="readtext.{11383}.{$line}.[$fines.formatted.{'%s %Cr'}, $victimShipStationName, $criminalShipName] + '\n'" comment="We were fined %1(Cr) for destroying %2(ship or station)." />
							</do_else>
							<do_if value="not @$reportedAtName">
								<set_value name="$logbook" exact="{11383, 2102}.[$criminalShipName, $victimShipStationName, $fines.formatted.{'%s %Cr'}, $reportedByName]" />
							</do_if>
							<do_else>
								<set_value name="$logbook" exact="{11383, 2202}.[$criminalShipName, $victimShipStationName, $fines.formatted.{'%s %Cr'}, $reportedByName, $reportedAtName]" />
							</do_else>
						</do_elseif>
						<do_elseif value="$crime == relationchangereason.hackingdiscovered">
							<set_value name="$line" exact="2013" />
							<set_value name="$caption" exact="readtext.{11383}.{$line}.[$criminalShipName, $fines.formatted.{'%s %Cr'}, $victimShipStationName] + '\n'" comment="You were fined %1(Cr) for hacking %2(ship or station)." />
							<do_if value="$criminalShip.isrealclass.spacesuit or $criminalShip == player.entity">
								<set_value name="$line" exact="2027" />
								<set_value name="$caption" exact="readtext.{11383}.{$line}.[$fines.formatted.{'%s %Cr'}, $victimShipStationName, $criminalShipName] + '\n'" comment="You (spacesuit) were fined %1(Cr)\nfor hacking %3(ship or station)." />
							</do_if>
							<do_else>
								<set_value name="$line" exact="2003" />
								<set_value name="$caption2" exact="readtext.{11383}.{$line}.[$fines.formatted.{'%s %Cr'}, $victimShipStationName, $criminalShipName] + '\n'" comment="We were fined %1(Cr) for hacking %2(ship or station)." />
							</do_else>
							<do_if value="not @$reportedAtName">
								<set_value name="$logbook" exact="{11383, 2103}.[$criminalShipName, $victimShipStationName, $fines.formatted.{'%s %Cr'}, $reportedByName]" />
							</do_if>
							<do_else>
								<set_value name="$logbook" exact="{11383, 2203}.[$criminalShipName, $victimShipStationName, $fines.formatted.{'%s %Cr'}, $reportedByName, $reportedAtName]" />
							</do_else>
						</do_elseif>
						<do_elseif value="$crime == relationchangereason.scanningdiscovered">
							<set_value name="$line" exact="2014" />
							<set_value name="$caption" exact="readtext.{11383}.{$line}.[$criminalShipName, $fines.formatted.{'%s %Cr'}, $victimShipStationName] + '\n'" comment="You were fined %1(Cr) for scanning %2(ship or station)." />
							<do_if value="$criminalShip.isrealclass.spacesuit or $criminalShip == player.entity">
								<set_value name="$line" exact="2028" />
								<set_value name="$caption" exact="readtext.{11383}.{$line}.[$fines.formatted.{'%s %Cr'}, $victimShipStationName, $criminalShipName] + '\n'" comment="You (spacesuit) were fined %1(Cr)\nfor scanning %3(ship or station)." />
							</do_if>
							<do_else>
								<set_value name="$line" exact="2004" />
								<set_value name="$caption2" exact="readtext.{11383}.{$line}.[$fines.formatted.{'%s %Cr'}, $victimShipStationName, $criminalShipName] + '\n'" comment="We were fined %1(Cr) for scanning %2(ship or station)." />
							</do_else>
							<do_if value="not @$reportedAtName">
								<set_value name="$logbook" exact="{11383, 2104}.[$criminalShipName, $victimShipStationName, $fines.formatted.{'%s %Cr'}, $reportedByName]" />
							</do_if>
							<do_else>
								<set_value name="$logbook" exact="{11383, 2204}.[$criminalShipName, $victimShipStationName, $fines.formatted.{'%s %Cr'}, $reportedByName, $reportedAtName]" />
							</do_else>
						</do_elseif>
						<do_elseif value="$crime == relationchangereason.illegalcargo">
							<set_value name="$line" exact="2015" />
							<set_value name="$caption" exact="readtext.{11383}.{$line}.[$criminalShipName, $fines.formatted.{'%s %Cr'}] + '\n'" comment="You were fined %1(Cr) for having contraband." />
							<do_if value="$criminalShip.isrealclass.spacesuit or $criminalShip == player.entity">
								<set_value name="$line" exact="2029" />
								<set_value name="$caption" exact="readtext.{11383}.{$line}.[$fines.formatted.{'%s %Cr'}] + '\n'" comment="You (spacesuit) were fined %1(Cr)\nfor having contraband." />
							</do_if>
							<do_else>
								<set_value name="$line" exact="2005" />
								<set_value name="$caption2" exact="readtext.{11383}.{$line}.[$fines.formatted.{'%s %Cr'}] + '\n'" comment="We were fined %1(Cr) for having contraband." />
							</do_else>
							<do_if value="not @$reportedAtName">
								<set_value name="$logbook" exact="{11383, 2105}.[$criminalShipName, $victimFaction, $fines.formatted.{'%s %Cr'}, $reportedByName]" />
							</do_if>
							<do_else>
								<set_value name="$logbook" exact="{11383, 2205}.[$criminalShipName, $victimFaction, $fines.formatted.{'%s %Cr'}, $reportedByName, $reportedAtName]" />
							</do_else>
						</do_elseif>
						<do_elseif value="$crime == relationchangereason.illegalplot">
							<set_value name="$line" exact="2016" />
							<set_value name="$caption" exact="readtext.{11383}.{$line}.[$criminalShipName, $fines.formatted.{'%s %Cr'}] + '\n'" comment="You were fined %1(Cr) for claiming space without a license." />
							<do_if value="$criminalShip.isrealclass.spacesuit or $criminalShip == player.entity">
								<set_value name="$line" exact="2030" />
								<set_value name="$caption" exact="readtext.{11383}.{$line}.[$fines.formatted.{'%s %Cr'}] + '\n'" comment="You (spacesuit) were fined %1(Cr)\nfor claiming space without a license." />
							</do_if>
							<do_else>
								<set_value name="$line" exact="2006" />
								<set_value name="$caption2" exact="readtext.{11383}.{$line}.[$fines.formatted.{'%s %Cr'}] + '\n'" comment="We were fined %1(Cr) for claiming space without a license." />
							</do_else>
							<do_if value="not @$reportedAtName">
								<set_value name="$logbook" exact="{11383, 2106}.[$criminalShipName, $victimFaction, $fines.formatted.{'%s %Cr'}, $reportedByName]" />
							</do_if>
							<do_else>
								<set_value name="$logbook" exact="{11383, 2206}.[$criminalShipName, $victimFaction, $fines.formatted.{'%s %Cr'}, $reportedByName, $reportedAtName]" />
							</do_else>
						</do_elseif>
						<do_if value="$criminalShip == player.ship or $criminalShip.isrealclass.spacesuit or $criminalShip == player.entity">
							<show_notification text="$caption" />
						</do_if>
						<do_else>
							<set_value name="$timeNow" exact="player.age" />
							<do_if value="((not @$largeOperationTarget) or player.container.distanceto.{@$largeOperationTarget} gt 25km) and
									$timeNow - kCHC.$timePilotCutsceneCrimeNotification gt 10min">
								<set_value name="kCHC.$timePilotCutsceneCrimeNotification" exact="$timeNow" />
								<signal_cue_instantly cue="PilotCutscenePlay" param="table[
									$caption = $caption2,
									$npc = if @$criminalShip.assignedaipilot.isclass.npc then $criminalShip.assignedaipilot else player.computer
								]" />
							</do_if>
							<do_else>
								<show_notification text="$caption" />
							</do_else>
						</do_else>
						<write_to_logbook category="general" title="{11383, 1000}" text="$logbook" object="$criminalShip" interaction="showonmap" money="($fines)f * -1ct" />
						<remove_value name="$line" />
						<remove_value name="$caption" />
						<remove_value name="$caption2" />
						<remove_value name="$logbook" />
					</actions>
				</library>
				<library name="PopulateCrimesByShipData">
					<actions>
						<!--
							THIS is the main data holder for ALL crimes: kCHC.$crimesByShips.{[component]}.
							This is its structure. Remember to update the top of this file also.
							kCHC.$crimesByShips.{[component]} = table[
								$crimes = [],
								$times = [],
								$startTimes = [],
								$victimShipsStations_orig = [],
								$victimShipsStations = [],
								$victimNames = [],
								$victimFactions = [],
								$fines = [],
								$isSelfDefense = [],
								$isCommanderCrime = [],
								$playerCrimeIds = [],
								$totalFines = 0,
								$kCHC_isSanctioned = []
							]
						-->
						<!--
								to use:
								<set_value name="$crime" exact="set this" />
								<set_value name="$crimeTime" exact="set this" />
								<set_value name="$victimShipStation" exact="set this" />
								<set_value name="$victimFaction" exact="set this" />
								<set_value name="$fines" exact="set this" />
								<set_value name="$isSelfDefense" exact="set this" />
								<set_value name="$kCHC_isSanctioned" exact="set this" />
								<set_value name="$isCommanderCrime" exact="set this" />
								<set_value name="$playerCrimeId" exact="set this" />
								<include_actions ref="PopulateCrimesByShipData" />
								<set_value name="set this" exact="$crimesByShipData" />
						-->
						<do_if value="typeof @$crimesByShipData != datatype.table or (not @$crimesByShipData.$crimes.count)">
							<set_value name="$crimesByShipData" exact="table[
								$crimes = [],
								$times = [],
								$startTimes = [],
								$victimShipsStations_orig = [],
								$victimShipsStations = [],
								$victimNames = [],
								$victimFactions = [],
								$fines = [],
								$isSelfDefense = [],
								$isCommanderCrime = [],
								$playerCrimeIds = [],
								$totalFines = 0,
								$kCHC_isSanctioned = [],
							]" />
							<set_value name="$crimesByShipData.$crimeCountsByFaction" exact="table[]" />
							<set_value name="$crimesByShipData.$crimeCountsByFaction.{$victimFaction}" exact="table[]" />
							<set_value name="$crimesByShipData.$finesByFaction" exact="table[]" />
							<set_value name="$crimesByShipData.$finesByFaction.{$victimFaction}" exact="0" />
							<set_value name="$crimesByShipData.$crimeCountsByType" exact="table[]" />
						</do_if>
						<do_if value="not $crimesByShipData.$kCHC_isSanctioned?">
							<set_value name="$crimesByShipData.$kCHC_isSanctioned" exact="[]" />
						</do_if>
						<do_if value="$crimesByShipData.$kCHC_isSanctioned.count lt $crimesByShipData.$crimes.count">
							<do_for_each name="$crime_inList" in="$crimesByShipData.$crimes">
								<append_to_list name="$crimesByShipData.$kCHC_isSanctioned" exact="false" />
							</do_for_each>
						</do_if>
						<do_if value="$crime">
							<set_value operation="insert" name="$crimesByShipData.$crimes.{1}" exact="$crime" />
							<do_if value="not @$crimesByShipData.$crimeCountsByType.{$crime}">
								<set_value name="$crimesByShipData.$crimeCountsByType.{$crime}" exact="0" />
							</do_if>
							<set_value name="$crimesByShipData.$crimeCountsByType.{$crime}" exact="$crimesByShipData.$crimeCountsByType.{$crime} + 1" />
							<set_value operation="insert" name="$crimesByShipData.$times.{1}" exact="$crimeTime" />
							<set_value operation="insert" name="$crimesByShipData.$startTimes.{1}" exact="$crimeTime" />
							<set_value operation="insert" name="$crimesByShipData.$victimShipsStations.{1}" exact="$victimShipStation" />
							<do_if value="@$victimName">
								<set_value operation="insert" name="$crimesByShipData.$victimNames.{1}" exact="$victimName" />
							</do_if>
							<do_elseif value="@$victimShipStation.exists">
								<run_actions ref="GetObjectName" result="$objectName">
									<param name="Object" value="$victimShipStation" />
								</run_actions>
								<set_value operation="insert" name="$crimesByShipData.$victimNames.{1}" exact="$objectName" />
							</do_elseif>
							<do_else>
								<set_value operation="insert" name="$crimesByShipData.$victimNames.{1}" exact="''" />
							</do_else>
							<set_value operation="insert" name="$crimesByShipData.$victimFactions.{1}" exact="$victimFaction" />
							<set_value operation="insert" name="$crimesByShipData.$fines.{1}" exact="$fines" />
							<set_value operation="insert" name="$crimesByShipData.$isSelfDefense.{1}" exact="$isSelfDefense" />
							<set_value operation="insert" name="$crimesByShipData.$kCHC_isSanctioned.{1}" exact="$kCHC_isSanctioned" />
							<set_value operation="insert" name="$crimesByShipData.$isCommanderCrime.{1}" exact="$isCommanderCrime" />
							<set_value operation="insert" name="$crimesByShipData.$playerCrimeIds.{1}" exact="$playerCrimeId" />
							<do_if value="(not $isSelfDefense) and (not @$kCHC_isSanctioned) and (not $isCommanderCrime)">
								<set_value name="$crimesByShipData.$totalFines" exact="$crimesByShipData.$totalFines + $fines" />
							</do_if>
							<do_if value="not @$crimesByShipData.$crimeCountsByFaction.{$victimFaction}">
								<set_value name="$crimesByShipData.$crimeCountsByFaction.{$victimFaction}" exact="table[]" />
								<set_value name="$crimesByShipData.$crimeCountsByFaction.{$victimFaction}.{$crime}" exact="1" />
								<do_if value="(not $isSelfDefense) and (not $kCHC_isSanctioned) and (not $isCommanderCrime)">
									<set_value name="$crimesByShipData.$finesByFaction.{$victimFaction}" exact="$fines" />
								</do_if>
								<do_else>
									<set_value name="$crimesByShipData.$finesByFaction.{$victimFaction}" exact="0" />
								</do_else>
							</do_if>
							<do_else>
								<do_if value="not @$crimesByShipData.$crimeCountsByFaction.{$victimFaction}.{$crime}">
									<set_value name="$crimesByShipData.$crimeCountsByFaction.{$victimFaction}.{$crime}" exact="0" />
								</do_if>
								<set_value name="$crimesByShipData.$crimeCountsByFaction.{$victimFaction}.{$crime}" exact="$crimesByShipData.$crimeCountsByFaction.{$victimFaction}.{$crime} + 1" />
								<do_if value="(not $isSelfDefense) and (not @$kCHC_isSanctioned) and (not $isCommanderCrime)">
									<set_value name="$crimesByShipData.$finesByFaction.{$victimFaction}" exact="$crimesByShipData.$finesByFaction.{$victimFaction} + $fines" />
								</do_if>
							</do_else>
						</do_if>
						<do_if value="@$crimesByShipData.$crimes.count gt 50">
							<resize_list list="$crimesByShipData.$crimes" count="50" />
							<resize_list list="$crimesByShipData.$times" count="50" />
							<resize_list list="$crimesByShipData.$victimShipsStations_orig" count="50" />
							<resize_list list="$crimesByShipData.$victimShipsStations" count="50" />
							<resize_list list="$crimesByShipData.$victimNames" count="50" />
							<resize_list list="$crimesByShipData.$victimFactions" count="50" />
							<resize_list list="$crimesByShipData.$fines" count="50" />
							<resize_list list="$crimesByShipData.$isSelfDefense" count="50" />
							<do_if value="$crimesByShipData.$kCHC_isSanctioned?">
								<resize_list list="$crimesByShipData.$kCHC_isSanctioned" count="50" />
							</do_if>
							<resize_list list="$crimesByShipData.$isCommanderCrime" count="50" />
							<resize_list list="$crimesByShipData.$playerCrimeIds" count="50" />
						</do_if>
					</actions>
				</library>
				<cue name="CrimeConfirm" instantiate="true" namespace="this">
					<conditions>
						<event_cue_signalled />
						<check_value value="@event.param.$criminalShip.isplayerowned" />
						<check_any>
							<check_value value="@event.param.$criminalShip == player.entity" />
							<check_value value="@event.param.$criminalShip.isrealclass.[class.ship, class.station]" />
							<check_value value="@event.param.$criminalShip.ship " />
							<check_value value="@event.param.$criminalShip.station " />
						</check_any>
					</conditions>
					<actions>
						<debug_text text="'event.param: ' + event.param" chance="kCHC.$debugChance" />
						<set_value name="$criminalShip" exact="event.param.$criminalShip" />
						<do_if value="$criminalShip">
							<do_if value="not $criminalShip.isrealclass.[class.ship, class.station]">
								<do_if value="@$criminalShip.ship.isplayerowned">
									<set_value name="$criminalShip" exact="$criminalShip.ship" />
								</do_if>
								<do_elseif value="@$criminalShip.station.isplayerowned">
									<set_value name="$criminalShip" exact="$criminalShip.station" />
								</do_elseif>
							</do_if>
						</do_if>
						<set_value name="$criminalShipName" exact="@event.param.$criminalShipName" />
						<set_value name="$crime" exact="event.param.$crime" />
						<set_value name="$victimShipStation" exact="@event.param.$victimShipStation" />
						<set_value name="$victimShipStation_orig" exact="@event.param.$victimShipStation_orig" />
						<set_value name="$victimShipStationName" exact="@event.param.$victimShipStationName" />
						<do_if value="not @$victimShipStation.isrealclass.[class.ship, class.station]">
							<do_if value="@$victimShipStation.ship">
								<set_value name="$victimShipStation" exact="$victimShipStation.ship" />
							</do_if>
							<do_elseif value="@$victimShipStation.station">
								<set_value name="$victimShipStation" exact="$victimShipStation.station" />
							</do_elseif>
						</do_if>
						<set_value name="$isSelfDefense" exact="@event.param.$isSelfDefense" />
						<set_value name="$kCHC_isSanctioned" exact="@event.param.$kCHC_isSanctioned" />
						<set_value name="$isIgnorePlayerCrime" exact="@event.param.$isIgnorePlayerCrime" />
						<set_value name="$crimeFines" exact="@event.param.$crimeFines" />
						<set_value name="$isSilent" exact="@event.param.$isSilent" />
						<set_value name="$isCommanderCrime" exact="false" />
						<set_value name="$isPlayerCrime" exact="
							$criminalShip == player.occupiedship and
							(not $isSelfDefense) and
							(not @$kCHC_isSanctioned) and
							(not $isCommanderCrime) and
							(not $isIgnorePlayerCrime)
						" />
						<!-- valid victims: stations, npc controlled ships, lasertowers, beacons, probes, satellites -->
						<set_value name="$isVictimValid" exact="
							@$victimShipStation.isrealclass.[class.navbeacon, class.resourceprobe, class.satellite, class.ship, class.station] or
 							@$victimShipStation.islasertower or
 							$victimShipStationName
						" />
						<set_value name="$largeOperationTarget" exact="null" />
						<do_if value="$isVictimValid and kCHC.$largeOperationTargets.count">
							<do_all counter="$i" exact="kCHC.$largeOperationTargets.count">
								<do_if value="$criminalShip and
									$criminalShip.pilot and
									$criminalShip.pilot.distanceto.{kCHC.$largeOperationTargets.{$i}} le 25km
								">
									<set_value name="$largeOperationTarget" exact="kCHC.$largeOperationTargets.{$i}" />
									<!-- <debug_text text="'$largeOperationTarget: ' + $largeOperationTarget.knownname + ' (' + $largeOperationTarget.idcode + ')'" chance="kCHC.$debugChance" /> -->
									<!-- in large operation area, drones are invalid -->
									<do_if value="
										@$victimShipStation.isunit or
										@$victimShipStation.islasertower
									">
										<set_value name="$isVictimValid" exact="false" />
									</do_if>
									<break />
								</do_if>
							</do_all>
						</do_if>
						<do_if value="not $isVictimValid">
							<debug_text text="'$isVictimValid: ' + $isVictimValid" chance="kCHC.$debugChanceExtra" />
							<debug_text text="'$largeOperationTarget: ' + @$largeOperationTarget.knownname + ' (' + @$largeOperationTarget.idcode + ')'" chance="kCHC.$debugChanceExtra" />
							<debug_text text="'$crime: ' + $crime" chance="kCHC.$debugChanceExtra" />
							<debug_text text="'$victimShipStation: ' + @$victimShipStation.knownname + ' (' + @$victimShipStation.idcode + ')'" chance="kCHC.$debugChanceExtra" />
							<do_if value="not $largeOperationTarget">
								<set_value name="$crime" exact="relationchangereason.attackedobject" />
								<do_if value="@$victimShipStation.container and ($victimShipStation.container.isclass.ship or $victimShipStation.container.isclass.station)">
									<set_value name="$victimShipStation" exact="$victimShipStation.container" />
								</do_if>
								<do_elseif value="@$victimShipStation.controllable and ($victimShipStation.controllable.isclass.ship or $victimShipStation.controllable.isclass.station)">
									<set_value name="$victimShipStation" exact="$victimShipStation.controllable" />
								</do_elseif>
								<do_elseif value="@$victimShipStation.defensible and ($victimShipStation.defensible.isclass.ship or $victimShipStation.defensible.isclass.station)">
									<set_value name="$victimShipStation" exact="$victimShipStation.defensible" />
								</do_elseif>
								<do_elseif value="@$victimShipStation.object and ($victimShipStation.object.isclass.ship or $victimShipStation.object.isclass.station)">
									<set_value name="$victimShipStation" exact="$victimShipStation.object" />
								</do_elseif>
								<do_elseif value="@$victimShipStation.ship">
									<set_value name="$victimShipStation" exact="$victimShipStation.ship" />
								</do_elseif>
								<do_elseif value="@$victimShipStation.station">
									<set_value name="$victimShipStation" exact="$victimShipStation.station" />
								</do_elseif>
								<do_else>
									<set_value name="$victimShipStation" exact="null" />
								</do_else>
							</do_if>
							<do_else>
								<set_value name="$victimShipStation" exact="null" />
							</do_else>
							<debug_text text="'$crime: ' + $crime" chance="kCHC.$debugChanceExtra" />
							<debug_text text="'$victimShipStation: ' + @$victimShipStation.knownname + ' (' + @$victimShipStation.idcode + ')'" chance="kCHC.$debugChanceExtra" />
						</do_if>
						<do_if value="$victimShipStation">
							<set_value name="$isStationHacked" exact="false" />
							<do_if value="@md.kuertee_hacking_outcomes.GetIsStationHacked.exists">
								<signal_cue_instantly cue="md.kuertee_hacking_outcomes.GetIsStationHacked" param="table[$cue = namespace, $station = $victimShipStation]" />
							</do_if>
							<do_if value="$isStationHacked">
								<debug_text text="'$isStationHacked: ' + $isStationHacked" chance="kCHC.$debugChance" />
								<set_value name="$victimShipStation" exact="null" />
							</do_if>
							<remove_value name="$isStationHacked" />
						</do_if>
						<do_if value="$victimShipStation or $victimShipStationName">
							<set_value name="$isCommanderCrime" exact="false" />
							<do_if value="(not kCHC.$userSeparateWingmanCrimes) and @$criminalShip.commander and @kCHC.$crimesByShips.{$criminalShip.commander}.$victimShipsStations.count">
								<!-- has commander already been charged with this crime -->
								<do_all counter="$i" exact="kCHC.$crimesByShips.{$criminalShip.commander}.$victimShipsStations.count">
									<set_value name="$j" exact="kCHC.$crimesByShips.{$criminalShip.commander}.$victimShipsStations.indexof.{$victimShipStation}" />
									<do_if value="$j and kCHC.$crimesByShips.{$criminalShip.commander}.$crimes.{$j} == $crime">
										<set_value name="$isCommanderCrime" exact="true" />
										<debug_text text="'$isCommanderCrime: ' + $isCommanderCrime" chance="kCHC.$debugChanceExtra" />
										<debug_text text="'$crime: ' + $crime" chance="kCHC.$debugChanceExtra" />
										<debug_text text="'$victimShipStation: ' + $victimShipStation" chance="kCHC.$debugChanceExtra" />
										<debug_text text="'kCHC.$crimesByShips.{$criminalShip.commander}.$crimes.{$j}: ' + kCHC.$crimesByShips.{$criminalShip.commander}.$crimes.{$j}" chance="kCHC.$debugChanceExtra" />
										<debug_text text="'kCHC.$crimesByShips.{$criminalShip.commander}.$victimShipsStations.{$j}: ' + kCHC.$crimesByShips.{$criminalShip.commander}.$victimShipsStations.{$j}" chance="kCHC.$debugChanceExtra" />
										<break />
									</do_if>
								</do_all>
							</do_if>
							<do_if value="$victimShipStationName">
								<set_value name="$victimName" exact="$victimShipStationName" />
							</do_if>
							<do_else>
								<run_actions ref="GetObjectName" result="$victimName">
									<param name="Object" value="$victimShipStation" />
								</run_actions>
							</do_else>
							<set_value name="$victimFaction" exact="@event.param.$victimFaction" />
							<do_if value="kCHC.$validFactions.indexof.{$victimFaction} and (not kCHC.$pirateFactions.indexof.{$victimFaction} or kCHC.$userIsDetectCrimesOnPirate)">
								<do_if value="kCHC.$userIsDetectCrimesOnEnemy or faction.player.relationto.{$victimFaction} ge $victimFaction.relation.neutral.min">
									<set_value name="$crimeI" exact="0" />
									<set_value name="$crimeTime" exact="if @event.param.$crimeTime then event.param.$crimeTime else player.age" />
									<set_value name="$lastCrimeTime" exact="0" />
									<do_if value="$criminalShip">
										<do_if value="$criminalShip.isrealclass.spacesuit and @kCHC.$crimesBySpacesuit.$victimShipsStations.count">
											<!-- crime by spacesuit is valid -->
											<do_all counter="$i" exact="kCHC.$crimesBySpacesuit.$crimes.count">
												<do_if value="kCHC.$crimesBySpacesuit.$crimes.{$i} == $crime and kCHC.$crimesBySpacesuit.$victimShipsStations.{$i} == $victimShipStation">
													<set_value name="$crimeI" exact="$i" />
													<set_value name="$lastCrimeTime" exact="kCHC.$crimesBySpacesuit.$times.{$crimeI}" />
													<break />
												</do_if>
											</do_all>
										</do_if>
										<do_elseif value="@kCHC.$crimesByShips.{$criminalShip}">
											<do_all counter="$i" exact="kCHC.$crimesByShips.{$criminalShip}.$crimes.count">
												<do_if value="kCHC.$crimesByShips.{$criminalShip}.$crimes.{$i} == $crime and kCHC.$crimesByShips.{$criminalShip}.$victimShipsStations.{$i} == $victimShipStation">
													<set_value name="$crimeI" exact="$i" />
													<set_value name="$lastCrimeTime" exact="kCHC.$crimesByShips.{$criminalShip}.$times.{$crimeI}" />
													<break />
												</do_if>
											</do_all>
										</do_elseif>
										<do_else>
											<set_value name="$crimeI" exact="@kCHC.$crimesByShips.{$criminalShip}.$crimes.count + 1" />
											<set_value name="$lastCrimeTime" exact="0" />
										</do_else>
									</do_if>
									<set_value name="$elapsedCrimeTime" exact="$crimeTime - $lastCrimeTime" />
									<debug_text text="'$lastCrimeTime: ' + $lastCrimeTime + ' $elapsedCrimeTime: ' + $elapsedCrimeTime + ' kCHC.$newCrimeEventAfterTime: ' + kCHC.$newCrimeEventAfterTime" chance="kCHC.$debugChance" />
									<do_if value="$lastCrimeTime == 0 or $elapsedCrimeTime ge kCHC.$newCrimeEventAfterTime">
										<debug_text text="'$lastCrimeTime: ' + $lastCrimeTime + ' $elapsedCrimeTime: ' + $elapsedCrimeTime" chance="kCHC.$debugChance" />
										<debug_text text="'$criminalShip: ' + @$criminalShip.knownname + ' (' + @$criminalShip.idcode + ')'" chance="kCHC.$debugChance" />
										<debug_text text="'$criminalShipName: ' + @$criminalShipName" chance="kCHC.$debugChance" />
										<debug_text text="'$crime: ' + $crime" chance="kCHC.$debugChance" />
										<debug_text text="'$victimShipStation: ' + @$victimShipStation.knownname + ' (' + @$victimShipStation.idcode + ')'" chance="kCHC.$debugChance" />
										<debug_text text="'$isSelfDefense: ' + $isSelfDefense" chance="kCHC.$debugChance" />
										<debug_text text="'$kCHC_isSanctioned: ' + $kCHC_isSanctioned" chance="kCHC.$debugChance" />
										<debug_text text="'$isCommanderCrime: ' + $isCommanderCrime" chance="kCHC.$debugChance" />
										<debug_text text="'$isPlayerCrime: ' + $isPlayerCrime" chance="kCHC.$debugChance" />
										<do_if value="not @kCHC.$factionFines.{$victimFaction}">
											<set_value name="kCHC.$factionFines.{$victimFaction}" exact="0" />
										</do_if>
										<do_if value="$crimeFines">
											<set_value name="$fines" exact="$crimeFines" />
										</do_if>
										<do_else>
											<include_actions ref="SetFines" />
											<do_if value="$largeOperationTarget and $largeOperationTarget != $victimShipStation">
												<debug_text text="'$fines: ' + $fines + ' kCHC.$userInLargeOperationFineMult: ' + kCHC.$userInLargeOperationFineMult" chance="kCHC.$debugChance" />
												<set_value name="$fines" exact="($fines)f * kCHC.$userInLargeOperationFineMult * 1ct" />
											</do_if>
										</do_else>
										<set_value name="$reportedByName" exact="@event.param.$reportedByName" />
										<do_if value="not $reportedByName">
											<!-- <t id="2111">(reported by var in log book entry)the victim</t> -->
											<set_value name="$reportedByName" exact="{11383, 2111}" />
										</do_if>
										<set_value name="$reportedAtName" exact="@event.param.$reportedAtName" />
										<do_if value="$reportedByName == $reportedAtName">
											<set_value name="$reportedAtName" exact="null" />
										</do_if>
										<do_if value="$fines">
											<debug_text text="'$fines: ' + $fines" chance="kCHC.$debugChance" />
											<do_if value="(not $isSelfDefense) and (not @$kCHC_isSanctioned) and (not $isCommanderCrime)">
												<set_value name="kCHC.$factionFines.{$victimFaction}" exact="kCHC.$factionFines.{$victimFaction} + $fines" />
											</do_if>
											<do_if value="$criminalShip">
												<do_if value="($criminalShip.isrealclass.spacesuit or $criminalShip == player.entity) and @kCHC.$crimesBySpacesuit.$victimShipsStations.count">
													<set_value name="$crimesByShipData" exact="kCHC.$crimesBySpacesuit" />
												</do_if>
												<do_elseif value="@kCHC.$crimesByShips.{$criminalShip}">
													<set_value name="$crimesByShipData" exact="kCHC.$crimesByShips.{$criminalShip}" />
												</do_elseif>
												<set_value name="$playerCrimeId" exact="0" />
												<do_if value="not $criminalShip.isrealclass.spacesuit">
													<do_if value="$isPlayerCrime">
														<run_actions ref="AddPlayerCriminalRecord" result="$playerCrimeId">
															<param name="Time" value="$crimeTime" />
															<param name="CriminalShip" value="$criminalShip" />
															<param name="Crime" value="$crime" />
															<param name="VictimShipStation_orig" value="$victimShipStation_orig" />
															<param name="VictimShipStation" value="$victimShipStation" />
															<param name="VictimFaction" value="$victimFaction" />
															<param name="Fines" value="$fines" />
														</run_actions>
														<!-- getting_a_job: add reported boarded ship to stolen ship list, even if boarding failed -->
														<do_if value="$crime == relationchangereason.boardedobject">
															<set_value name="$stolenShips.{$victimShipStation_orig}" exact="$victimFaction" />
														</do_if>
													</do_if>
												</do_if>
												<include_actions ref="PopulateCrimesByShipData" />
												<do_if value="$criminalShip.isrealclass.spacesuit or $criminalShip == player.entity">
													<set_value name="kCHC.$crimesBySpacesuit" exact="$crimesByShipData" />
												</do_if>
												<do_else>
													<set_value name="kCHC.$crimesByShips.{$criminalShip}" exact="$crimesByShipData" />
													<add_to_group groupname="kCHC.$criminalShips" object="$criminalShip" />
												</do_else>
											</do_if>
											<do_if value="(not $isSelfDefense) and (not @$kCHC_isSanctioned) and (not $isCommanderCrime) and (not $isSilent)">
												<include_actions ref="NotificationFines" />
											</do_if>
										</do_if>
										<remove_value name="$fines" />
									</do_if>
									<!-- <do_else>
										<do_if value="$crimeI">
											<do_if value="($criminalShip.isrealclass.spacesuit or $criminalShip == player.entity) and @kCHC.$crimesBySpacesuit.$victimShipsStations.count">
												<set_value name="kCHC.$crimesBySpacesuit.$times.{$crimeI}" exact="$crimeTime" />
											</do_if>
											<do_elseif value="@kCHC.$crimesByShips.{$criminalShip}">
												<set_value name="kCHC.$crimesByShips.{$criminalShip}.$times.{$crimeI}" exact="$crimeTime" />
											</do_elseif>
										</do_if>
									</do_else> -->
									<remove_value name="$crimeI" />
									<remove_value name="$crimeTime" />
									<remove_value name="$lastCrimeTime" />
									<remove_value name="$elapsedCrimeTime" />
								</do_if>
								<do_else>
								</do_else>
							</do_if>
							<do_else>
								<!-- <debug_text text="'$victimShipStation: ' + $victimShipStation.knownname + ' (' + $victimShipStation.idcode + ')'" chance="kCHC.$debugChance" />
								<debug_text text="'$victimFaction: ' + $victimFaction" chance="kCHC.$debugChance" /> -->
							</do_else>
						</do_if>
						<remove_value name="$criminalShip" />
						<remove_value name="$crime" />
						<remove_value name="$victimShipStation" />
						<remove_value name="$isVictimValid" />
						<remove_value name="$largeOperationTarget" />
						<remove_value name="$isCommanderCrime" />
						<remove_value name="$isPlayerCrime" />
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<cue name="SaveThenClearCrimes">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<do_all counter="$i" exact="kCHC.$factionFines.keys.count">
							<set_value name="$faction" exact="$factionFines.keys.{$i}" />
							<do_if value="@kCHC.$savedFactionFines.{$faction}">
								<set_value name="kCHC.$savedFactionFines.{$faction}" exact="kCHC.$savedFactionFines.{$faction} + kCHC.$factionFines.{$faction}" />
							</do_if>
							<do_else>
								<set_value name="kCHC.$savedFactionFines.{$faction}" exact="kCHC.$factionFines.{$faction}" />
							</do_else>
						</do_all>
						<do_all counter="$i" exact="kCHC.$crimesByShips.keys.count">
							<set_value name="$ship" exact="kCHC.$crimesByShips.keys.{$i}" />
							<set_value name="$crimesByShipData" exact="null" />
							<do_all counter="$j" exact="kCHC.$crimesByShips.{$ship}.$crimes.count">
								<do_if value="(not kCHC.$crimesByShips.{$ship}.$isSelfDefense.{$j}) and (not @kCHC.$crimesByShips.{$ship}.$kCHC_isSanctioned.{$j}) and (kCHC.$crimesByShips.{$ship}.$isCommanderCrime.{$j}) and (kCHC.$crimesByShips.{$ship}.$kCHC_isSanctioned.{$j})">
									<set_value name="$crime" exact="@kCHC.$crimesByShips.{$ship}.$crimes.{$j}" />
									<set_value name="$crimeTime" exact="@kCHC.$crimesByShips.{$ship}.$times.{$j}" />
									<set_value name="$crimeTime" exact="@kCHC.$crimesByShips.{$ship}.$startTimes.{$j}" />
									<set_value name="$victimShipStation_orig" exact="@kCHC.$crimesByShips.{$ship}.$victimShipsStations_orig.{$j}" />
									<set_value name="$victimShipStation" exact="@kCHC.$crimesByShips.{$ship}.$victimShipsStations.{$j}" />
									<set_value name="$victimName" exact="@kCHC.$crimesByShips.{$ship}.$victimNames.{$j}" />
									<set_value name="$victimFaction" exact="@kCHC.$crimesByShips.{$ship}.$victimFactions.{$j}" />
									<set_value name="$fines" exact="@kCHC.$crimesByShips.{$ship}.$fines.{$j}" />
									<set_value name="$isSelfDefense" exact="false" />
									<set_value name="$kCHC_isSanctioned" exact="false" />
									<set_value name="$isCommanderCrime" exact="false" />
									<set_value name="$playerCrimeId" exact="@kCHC.$crimesByShips.{$ship}.$playerCrimeIds.{$j}" />
									<include_actions ref="PopulateCrimesByShipData" />
								</do_if>
							</do_all>
							<set_value name="kCHC.$savedCrimesByShips.{$ship}" exact="$crimesByShipData" />
						</do_all>
						<do_all counter="$i" exact="kCHC.$criminalShips.count">
							<set_value name="$ship" exact="kCHC.$criminalShips.{$i}" />
							<append_to_list name="$savedCriminalShips" exact="$ship" />
						</do_all>
						<set_value name="kCHC.$factionFines" exact="table[]" />
						<set_value name="kCHC.$crimesByShips" exact="table[]" />
						<clear_group group="kCHC.$criminalShips" />
						<set_value name="kCHC.$crimesBySpacesuit" exact="table[]" />
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="RestoreCrimes">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<do_all counter="$i" exact="kCHC.$savedFactionFines.keys.count">
							<set_value name="$faction" exact="$savedFactionFines.keys.{$i}" />
							<do_if value="@kCHC.$factionFines.{$faction}">
								<set_value name="kCHC.$factionFines.{$faction}" exact="kCHC.$factionFines.{$faction} + kCHC.$savedFactionFines.{$faction}" />
							</do_if>
							<do_else>
								<set_value name="kCHC.$factionFines.{$faction}" exact="kCHC.$savedFactionFines.{$faction}" />
							</do_else>
						</do_all>
						<do_all counter="$i" exact="kCHC.$savedCrimesByShips.keys.count">
							<set_value name="$ship" exact="kCHC.$savedCrimesByShips.keys.{$i}" />
							<set_value name="$crimesByShipData" exact="@kCHC.$crimesByShips.{$ship}" />
							<do_all counter="$j" exact="@kCHC.$savedCrimesByShips.{$ship}.$crimes.count">
								<set_value name="$crime" exact="@kCHC.$savedCrimesByShips.{$ship}.$crimes.{$j}" />
								<set_value name="$crimeTime" exact="@kCHC.$savedCrimesByShips.{$ship}.$times.{$j}" />
								<set_value name="$victimShipStation_orig" exact="@kCHC.$savedCrimesByShips.{$ship}.$victimShipsStations_orig.{$j}" />
								<set_value name="$victimShipStation" exact="@kCHC.$savedCrimesByShips.{$ship}.$victimShipsStations.{$j}" />
								<set_value name="$victimName" exact="@kCHC.$savedCrimesByShips.{$ship}.$victimNames.{$j}" />
								<set_value name="$victimFaction" exact="@kCHC.$savedCrimesByShips.{$ship}.$victimFactions.{$j}" />
								<set_value name="$fines" exact="@kCHC.$savedCrimesByShips.{$ship}.$fines.{$j}" />
								<set_value name="$isSelfDefense" exact="false" />
								<set_value name="$kCHC_isSanctioned" exact="false" />
								<set_value name="$isCommanderCrime" exact="false" />
								<set_value name="$playerCrimeId" exact="@kCHC.$savedCrimesByShips.{$ship}.$playerCrimeIds.{$j}" />
								<include_actions ref="PopulateCrimesByShipData" />
							</do_all>
							<set_value name="kCHC.$crimesByShips.{$ship}" exact="$crimesByShipData" />
						</do_all>
						<do_all counter="$i" exact="kCHC.$savedCriminalShips.count">
							<set_value name="$ship" exact="kCHC.$savedCriminalShips.{$i}" />
							<add_to_group groupname="kCHC.$criminalShips" object="$ship" />
						</do_all>
						<set_value name="kCHC.$savedFactionFines" exact="table[]" />
						<set_value name="kCHC.$savedCrimesByShips" exact="table[]" />
						<set_value name="kCHC.$savedCriminalShips" exact="[]" />
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="ImpoundShip" namespace="this" instantiate="true">
					<conditions>
						<check_any>
							<event_cue_signalled />
							<check_all>
								<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
								<check_value value="event.param3.$text == 'debug chc impound player ship'" />
								<check_value value="@player.ship.exists" />
							</check_all>
						</check_any>
					</conditions>
					<actions>
						<do_if value="event.name == 'event_cue_signalled'">
							<set_value name="$ship" exact="event.param.$ship" />
							<set_value name="$impoundedByFaction" exact="event.param.$impoundedByFaction" />
						</do_if>
						<do_elseif value="event.name == 'event_ui_triggered' and event.param3.$text == 'debug chc impound player ship'">
							<debug_text text="event.param3" />
							<set_value name="$ship" exact="player.ship" />
							<set_value name="$impoundedByFaction" exact="faction.teladi" />
						</do_elseif>
						<do_if value="not @$ship.exists">
							<cancel_cue cue="ImpoundShip" />
						</do_if>
					</actions>
					<delay exact="1ms" /><!-- delay required so that subcues are readied -->
					<actions>
						<set_value name="$triesCount" exact="0" /><!-- tries to get player off ship -->
						<do_if value="$ship == player.ship">
							<set_value name="kCHC.$isImpoundingPlayerShip" exact="true" />
						</do_if>
						<do_if value="$ship == player.occupiedship">
							<set_value name="$triesCount" exact="$triesCount + 1" />
							<debug_text text="'raise_lua_event $triesCount: ' + $triesCount" chance="kCHC.$debugChance" />
							<raise_lua_event name="'kCHC.ForceGetUp'" /><!-- try a forced-get-up first -->
						</do_if>
						<do_else>
							<debug_text text="'$ship.assignedaipilot: ' + $ship.assignedaipilot + ' (' + @$ship.assignedaipilot.knownname + ')'" chance="kCHC.$debugChance" />
							<signal_cue cue="ImpoundShip_OnPlayerStoppedControl" />
						</do_else>
					</actions>
					<cues>
						<cue name="ImpoundShip_OnPlayerStoppedControl">
							<conditions>
								<check_any>
									<event_player_teleport_successful />
									<event_cue_signalled />
									<!-- <check_all>
										<event_ui_triggered screen="'kCHC'" control="'on_force_get_up'" />
										<check_value value="event.param3 == 'on_force_get_up_succeeded'" />
									</check_all> -->
									<event_player_stopped_control />
								</check_any>
							</conditions>
							<actions>
								<debug_text text="'event.name: ' + event.name" chance="kCHC.$debugChance" />
								<debug_text text="'$ship.assignedaipilot (pre): ' + $ship.assignedaipilot + ' (' + @$ship.assignedaipilot.knownname + ')'" chance="kCHC.$debugChance" />
								<signal_cue_instantly cue="ImpoundShipNow" param="table[$ship = $ship, $impoundedByFaction = $impoundedByFaction]" />
								<debug_text text="'$ship.assignedaipilot (post): ' + $ship.assignedaipilot + ' (' + @$ship.assignedaipilot.knownname + ')'" chance="kCHC.$debugChance" />
								<remove_value name="$ship" />
								<remove_value name="$impoundedByFaction" />
								<remove_value name="$triesCount" />
								<reset_cue cue="parent" />
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="ImpoundShip_OnPlayerTeleportFailed">
							<conditions>
								<event_player_teleport_failed />
							</conditions>
							<actions>
								<do_if value="$triesCount lt 5">
									<set_value name="$triesCount" exact="$triesCount + 1" />
									<debug_text text="'raise_lua_event $triesCount: ' + $triesCount" chance="kCHC.$debugChance" />
									<raise_lua_event name="'kCHC.ForceGetUp'" /><!-- try a forced-get-up again -->
									<reset_cue cue="this" />
								</do_if>
								<do_else>
									<remove_from_group group="kCHC.$impoundingShips" object="$ship" />
									<do_if value="$ship == player.ship">
										<set_value name="kCHC.$isImpoundingPlayerShip" exact="false" />
									</do_if>
									<reset_cue cue="parent" />
									<reset_cue cue="this" />
								</do_else>
							</actions>
						</cue>
						<cue name="ImpoundShip_OnForceGetUpFailed">
							<conditions>
								<event_ui_triggered screen="'kCHC'" control="'on_force_get_up'" />
								<check_value value="event.param3 != 'on_force_get_up_succeeded'" />
							</conditions>
							<actions>
								<do_if value="$triesCount lt 5">
									<set_value name="$triesCount" exact="$triesCount + 1" />
									<debug_text text="'teleport_player $triesCount: ' + $triesCount" chance="kCHC.$debugChance" />
									<teleport_player object="player.occupiedship" force="true" instant="true" /><!-- try a teleport next -->
									<reset_cue cue="this" />
								</do_if>
								<do_else>
									<remove_from_group group="kCHC.$impoundingShips" object="$ship" />
									<do_if value="$ship == player.ship">
										<set_value name="kCHC.$isImpoundingPlayerShip" exact="false" />
									</do_if>
									<reset_cue cue="parent" />
									<reset_cue cue="this" />
								</do_else>
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="ImpoundShipNow" namespace="this" instantiate="true">
					<conditions>
						<event_cue_signalled />
						<check_value value="@event.param.$ship.isclass.ship" />
						<check_value value="@event.param.$ship.isoperational" />
						<check_any>
							<check_value value="@event.param.$ship != player.ship" />
							<check_all>
								<check_value value="@event.param.$ship == player.ship" />
								<check_any>
									<check_value value="@event.param.$ship.assignedaipilot" />
									<check_value value="@event.param.$ship.dock.station" />
								</check_any>
							</check_all>
						</check_any>
					</conditions>
					<actions>
						<!-- requires: $ship, $impoundedByFaction -->
						<set_value name="$ship" exact="event.param.$ship" />
						<add_to_group groupname="kCHC.$impoundedShips" object="$ship" />
						<set_value name="$impoundedByFaction" exact="event.param.$impoundedByFaction" />
						<!-- <set_value name="$impoundingStation" exact="@$ship.dock.station" /> -->
						<set_value name="$impoundingStation" exact="@$ship.station" />
						<do_if value="not $impoundingStation">
							<find_station name="$impoundingStation" space="player.galaxy" owner="$impoundedByFaction" defencestation="true" sortbydistanceto="$ship" />
						</do_if>
						<do_if value="not $impoundingStation">
							<find_station name="$impoundingStation" space="player.galaxy" owner="$impoundedByFaction" sortbydistanceto="$ship" />
						</do_if>
						<debug_text text="'$impoundedByFaction: ' + $impoundedByFaction" chance="kCHC.$debugChance" />
						<debug_text text="'$impoundingStation: ' + $impoundingStation + ' (' + $impoundingStation.knownname + ', ' + $impoundingStation.owner + ')'" chance="kCHC.$debugChance" />
						<do_if value="not @kCHC.$crimesByShips.{$ship}">
							<set_value name="$crimesByShipData" exact="null" />
							<!--
									to use:
									<set_value name="$crime" exact="set this" />
									<set_value name="$crimeTime" exact="set this" />
									<set_value name="$victimShipStation" exact="set this" />
									<set_value name="$victimFaction" exact="set this" />
									<set_value name="$fines" exact="set this" />
									<set_value name="$isSelfDefense" exact="set this" />
									<set_value name="$kCHC_isSanctioned" exact="set this" />
									<set_value name="$isCommanderCrime" exact="set this" />
									<set_value name="$isPlayerCrime" exact="set this" />
									<include_actions ref="PopulateCrimesByShipData" />
									<set_value name="set this" exact="$crimesByShipData" />
							-->
							<set_value name="$crime" exact="null" />
							<set_value name="$crimeTime" exact="null" />
							<set_value name="$victimShipStation" exact="null" />
							<set_value name="$victimName" exact="''" />
							<set_value name="$victimFaction" exact="$impoundedByFaction" />
							<set_value name="$fines" exact="0" />
							<set_value name="$isSelfDefense" exact="false" />
							<set_value name="$kCHC_isSanctioned" exact="false" />
							<set_value name="$isCommanderCrime" exact="false" />
							<set_value name="$isPlayerCrime" exact="false" />
							<include_actions ref="PopulateCrimesByShipData" />
							<set_value name="kCHC.$crimesByShips.{$ship}" exact="$crimesByShipData" />
							<remove_value name="$crime" />
							<remove_value name="$crimeTime" />
							<remove_value name="$victimShipStation" />
							<remove_value name="$victimFaction" />
							<remove_value name="$fines" />
							<remove_value name="$crimesByShipData" />
							<remove_value name="$isSelfDefense" />
							<do_if value="$kCHC_isSanctioned?">
								<remove_value name="$kCHC_isSanctioned" />
							</do_if>
							<remove_value name="$isCommanderCrime" />
							<remove_value name="$isPlayerCrime" />
						</do_if>
						<set_value name="kCHC.$crimesByShips.{$ship}.$impoundedByFaction" exact="$impoundedByFaction" />
						<debug_text text="'kCHC.$crimesByShips.{$ship}.$impoundedByFaction: ' + kCHC.$crimesByShips.{$ship}.$impoundedByFaction" chance="kCHC.$debugChance" />
						<set_value name="kCHC.$crimesByShips.{$ship}.$impoundedTime" exact="player.age" />
						<do_if value="$ship.subordinates.count">
							<set_value name="$ships" exact="[]" />
							<do_all counter="$i" exact="$ship.subordinates.count">
								<set_value name="$wingman" exact="$ship.subordinates.{$i}" />
								<append_to_list name="$ships" exact="$wingman" />
							</do_all>
							<set_value name="$newCommander" exact="$ship.commander" />
							<do_if value="not $newCommander">
								<set_value name="$newCommander" exact="$ship.subordinates.{1}" />
							</do_if>
							<do_all counter="$i" exact="$ships.count">
								<set_value name="$wingman" exact="$ships.{$i}" />
								<do_if value="$wingman == $newCommander">
									<remove_object_commander object="$newCommander" />
									<create_order object="$newCommander" id="'Wait'" default="true" />
								</do_if>
								<do_else>
									<set_object_commander object="$wingman" commander="$newCommander" />
									<create_order object="$wingman" id="'Follow'" default="true">
										<param name="target" value="$newCommander" />
									</create_order>
								</do_else>
								<cancel_all_orders object="$wingman" />
							</do_all>
							<remove_value name="$ships" />
							<remove_value name="$newCommander" />
						</do_if>
						<remove_object_commander object="$ship" />
						<create_order object="$ship" id="'Wait'" default="true" />
						<cancel_all_orders object="$ship" />
						<set_value name="$forcedNPCName" exact="@$ship.assignedaipilot.knownname" />
						<set_value name="$forcedNPCFaction" exact="faction.player" />
						<run_actions ref="GetObjectName" result="$shipName">
							<param name="Object" value="$ship" />
						</run_actions>
						<set_owner object="$ship" faction="faction.kuertee_chc_faf" overridenpc="true" />
						<do_if value="$ship == player.ship">
							<set_owner object="player.entity" faction="faction.player" />
						</do_if>
						<debug_text text="'$ship.owner: ' + $ship.owner" chance="kCHC.$debugChance" />
						<do_if value="$impoundingStation">
							<create_order object="$ship" id="'DockAt'" immediate="true">
								<param name="destination" value="$impoundingStation" />
							</create_order>
						</do_if>
						<!-- notification -->
						<do_if value="@kCHC.$crimesByShips.{$ship}.$finesByFaction.{$impoundedByFaction}">
							<set_value name="$fines" exact="kCHC.$crimesByShips.{$ship}.$finesByFaction.{$impoundedByFaction}.formatted.{'%s %Cr'}" />
						</do_if>
						<do_else>
							<set_value name="$fines" exact="kCHC.$factionFines.{$impoundedByFaction}.formatted.{'%s %Cr'}" />
						</do_else>
						<set_value name="$caption" exact="{11383, 2020}.[$shipName, $impoundedByFaction, $fines] + '\n'" comment="Your ship, %1(ship), was impounded by the %2(faction) due to fines of %3(Cr)." />
						<set_value name="$caption2" exact="{11383, 2023}.[$impoundedByFaction, $fines] + '\n'" comment="We were impounded by the %1(faction) due to fines of %2(Cr)." />
						<set_value name="$caption3" exact="{11383, 2032}.[$shipName, $fines] + '\n'" comment="We impounded your ship, %1(ship), due to fines of %2(Cr)." />
						<do_if value="$ship != player.ship">
							<do_if value="(not $ship.isunit) and $ship.assignedaipilot">
								<signal_cue_instantly cue="PilotCutscenePlay" param="table[
									$caption = $caption2,
									$npc = $ship.assignedaipilot,
									$forcedNPCName = $forcedNPCName,
									$forcedContainerName = $shipName,
									$forcedNPCFaction = $forcedNPCFaction
								]" />
							</do_if>
							<do_else>
								<show_notification text="$caption" />
							</do_else>
							<set_value name="$logbook" exact="{11383, 2107}.[$shipName, $impoundedByFaction]" comment="Impounded: %1(criminal ship), by: %2(faction)." />
							<write_to_logbook category="general" title="{11383, 1000}" text="$logbook" interaction="showonmap" object="$ship" />
							<remove_value name="$logbook" />
						</do_if>
						<do_if value="$ship == player.ship">
							<do_if value="md.kuertee_teleport_from_transporter_room.OnPlayerEnterProperty.state == cuestate.waiting">
								<signal_cue cue="md.kuertee_teleport_from_transporter_room.OnPlayerEnterProperty" />
							</do_if>
						</do_if>
						<do_if value="$ship != player.ship">
							<remove_from_group group="kCHC.$impoundingShips" object="$ship" />
							<set_value name="kCHC.$isImpoundingPlayerShip" exact="false" />
							<!-- <cancel_cue cue="this" /> -->
						</do_if>
						<set_value name="$isPlayerShip" exact="@$ship == player.ship" />
					</actions>
					<cues>
						<cue name="UndockDockedAIShips">
							<actions>
								<!-- <find_ship name="$dockedShips" space="player.container.zone" docked="true" owner="faction.player" multiple="true" recursive="true" /> -->
								<do_if value="@$ship.container">
									<find_ship name="$dockedShips" space="$ship.container.zone" docked="true" multiple="true" recursive="true">
										<match_distance object="$ship" max="5km" />
									</find_ship>
								</do_if>
								<do_elseif value="@$ship.zone">
									<find_ship name="$dockedShips" space="$ship.zone" docked="true" multiple="true" recursive="true">
										<match_distance object="$ship" max="5km" />
									</find_ship>
								</do_elseif>
								<!-- <find_object_component name="$dockedShips" object="$ship" class="class.ship" docked="true" checkoperational="true" multiple="true" /> -->
								<set_value name="$impoundOtherShips" exact="[]" />
								<do_all counter="$i" exact="@$dockedShips.count">
									<set_value name="$dockedShip" exact="$dockedShips.{$i}" />
									<do_if value="$dockedShip != $ship">
										<debug_text text="'$dockedShip: ' + $dockedShip + ' (' + $dockedShip.knownname + ')'" chance="kCHC.$debugChance" />
										<debug_text text="'$dockedShip.container: ' + $dockedShip.container + ' (' + $dockedShip.container.name + ')'" chance="kCHC.$debugChance" />
										<do_if value="$dockedShip.container == $ship">
											<do_if value="$dockedShip.assignedaipilot">
												<cancel_all_orders object="$dockedShip" />
												<do_if value="$ship.container">
													<create_order object="$dockedShip" id="'Wait'" default="true" />
													<create_order object="$dockedShip" id="'DockAt'" immediate="true">
														<param name="destination" value="$ship.container" />
													</create_order>
												</do_if>
												<do_else>
													<create_order object="$dockedShip" id="'Wait'" default="true" />
													<create_order object="$dockedShip" id="'Follow'" immediate="true">
														<param name="target" value="$ship" />
													</create_order>
												</do_else>
											</do_if>
											<do_else>
												<append_to_list name="$impoundOtherShips" exact="$dockedShip" />
											</do_else>
										</do_if>
									</do_if>
								</do_all>
								<signal_cue_instantly cue="ImpoundDockedShips" param="table[$ships = $impoundOtherShips, $impoundedByFaction = $impoundedByFaction]" />
								<cancel_cue cue="this" />
							</actions>
						</cue>
						<cue name="CompletePlayerShipImpoundNotification">
							<delay exact="5s" />
							<actions>
								<do_if value="$isPlayerShip">
									<set_value name="$npc" exact="$impoundingStation.defencenpc" />
									<do_if value="not $npc or not $npc.isclass.npc">
										<set_value name="$npc" exact="$impoundingStation.tradenpc" />
									</do_if>
									<do_if value="$npc.isclass.npc">
										<signal_cue_instantly cue="PilotCutscenePlay" param="table[
											$caption = $caption3,
											$npc = $npc
										]" />
									</do_if>
									<do_else>
										<show_notification text="$caption" />
									</do_else>
									<set_value name="$logbook" exact="{11383, 2107}.[$shipName, $impoundedByFaction]" />
									<write_to_logbook category="general" title="{11383, 1000}" text="$logbook" interaction="showonmap" object="$ship" />
									<remove_from_group group="kCHC.$impoundingShips" object="$ship" />
									<set_value name="kCHC.$isImpoundingPlayerShip" exact="false" />
									<!-- <remove_value name="$ship" /> -->
									<remove_value name="$impoundedByFaction" />
									<remove_value name="$impoundingStation" />
									<remove_value name="$shipName" />
									<remove_value name="$fines" />
									<remove_value name="$caption" />
									<remove_value name="$caption2" />
									<remove_value name="$caption3" />
									<remove_value name="$npc" />
									<remove_value name="$forcedNPCName" />
									<remove_value name="$forcedNPCFaction" />
									<remove_value name="$logbook" />
									<!-- <cancel_cue cue="parent" /> -->
								</do_if>
								<remove_value name="$isPlayerShip" />
							</actions>
						</cue>
						<cue name="ImpoundShipNow_ChangeSector">
							<conditions>
								<event_object_changed_sector object="$ship" />
								<check_value value="player.ship == $ship" />
							</conditions>
							<actions>
								<do_if value="event.param">
									<set_known object="event.param" known="true" />
									<set_known object="event.param.cluster" known="true" />
								</do_if>
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="ImpoundShipNow_PlayerNotOnShip">
							<conditions>
								<event_object_changed_room object="player.entity" />
								<check_value value="player.ship != $ship" />
							</conditions>
							<actions>
								<do_all counter="$i" exact="@$ship.orders.count" reverse="true">
									<do_if value="$ship.orders.{$i}.id == 'WaitForSignal'">
										<debug_text text="'cancel_order $ship.orders.{$i}: ' + $ship.orders.{$i}.id + ' ' + $ship.orders.{$i}.name" chance="kCHC.$debugChance" />
										<cancel_order order="$ship.orders.{$i}" />
									</do_if>
								</do_all>
								<cancel_cue cue="parent" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="ImpoundDockedShips" namespace="this" instantiate="true">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="$ships" exact="event.param.$ships" />
						<set_value name="$impoundedByFaction" exact="event.param.$impoundedByFaction" />
					</actions>
					<cues>
						<cue name="ImpoundDockedShip">
							<actions>
								<do_if value="$ships.count">
									<set_value name="$ship" exact="$ships.{1}" />
									<debug_text text="'$ship: ' + $ship" chance="kCHC.$debugChance" />
									<signal_cue_instantly cue="ImpoundShip" param="table[$ship = $ship, $impoundedByFaction = $impoundedByFaction]" />
									<remove_value name="$ships.{1}" />
									<reset_cue cue="this" />
								</do_if>
								<do_else>
									<cancel_cue cue="parent" />
									<cancel_cue cue="this" />
								</do_else>
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="ReleaseShipFromImpound" namespace="this" instantiate="true">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<!-- requires: $ship, $releasedByFaction -->
						<set_value name="$ship" exact="event.param.$ship" />
						<set_value name="$releasedByFaction" exact="event.param.$releasedByFaction" />
						<set_value name="$isForfeitShip" exact="@event.param.$isForfeitShip" />
						<set_value name="$isFlyAwayThenRelease" exact="$releasedByFaction.hasrelation.enemy.{faction.player}" />
						<debug_text text="'$isFlyAwayThenRelease: ' + $isFlyAwayThenRelease" chance="kCHC.$debugChance" />
						<set_value name="$ships" exact="[]" />
						<do_if value="kCHC.$impoundedShips.indexof.{$ship}">
							<do_if value="kCHC.$crimesByShips.{$ship}.$impoundedByFaction == $releasedByFaction">
								<append_to_list name="$ships" exact="$ship" />
							</do_if>
						</do_if>
						<do_all counter="$i" exact="$ships.count">
							<set_value name="$ship" exact="$ships.{$i}" />
							<do_if value="$isFlyAwayThenRelease">
								<signal_cue_instantly cue="FlyAwayThenRelease" param="table[$ship = $ship]" />
							</do_if>
							<!-- with $isFlyAwayThenRelease flag set, the ship's impound data is reset except for tis ownership. ownership is reverted in FlyAwayThenRlease. -->
							<signal_cue_instantly cue="ReturnShipToPlayer" param="table[$ship = $ship, $isForfeitShip = $isForfeitShip, $releasedByFaction = $releasedByFaction, $isFlyAwayThenRelease = $isFlyAwayThenRelease]" />
						</do_all>
						<remove_value name="$ship" />
						<remove_value name="$releasedByFaction" />
						<remove_value name="$ships" />
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="FlyAwayThenRelease" namespace="this" instantiate="true">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="$ship" exact="event.param.$ship" />
						<find_station name="$station" space="$ship.sector" sortbydistanceto="$ship" />
						<debug_text text="'$ship: ' + $ship" chance="kCHC.$debugChance" />
						<do_if value="$ship.station == player.station">
							<do_if value="not parent.hasmission">
								<do_if value="not @parent.$flyAwayThenReleaseShips">
									<create_group groupname="parent.$flyAwayThenReleaseShips" />
								</do_if>
								<add_to_group groupname="parent.$flyAwayThenReleaseShips" object="$ship" />
								<create_mission cue="kCHC" name="{11383, 3000}" faction="faction.player" type="missiontype.guidance" activate="true">
									<briefing>
										<!-- <objective step="1" action="objective.custom" customaction="{11383, 4000}" comment="Create Waypoint Field" /> -->
										<objective step="1" action="objective.board" text="{11383, 4001}" />
									</briefing>
									<objective step="1" action="objective.board" text="{11383, 4001}" group="parent.$flyAwayThenReleaseShips" />
								</create_mission>
							</do_if>
							<do_else>
								<do_if value="not @parent.$flyAwayThenReleaseShips">
									<create_group groupname="parent.$flyAwayThenReleaseShips" />
								</do_if>
								<add_to_group groupname="parent.$flyAwayThenReleaseShips" object="$ship" />
								<set_objective cue="kCHC" step="2" action="objective.board" text="{11383, 4001}" group="kCHC.$flyAwayThenReleaseShips" />
							</do_else>
						</do_if>
					</actions>
					<cues>
						<cue name="FlyAwayThenRelease_Execute">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<!-- <delay exact="30s" /> -->
							<actions>
								<set_value name="$impoundSector" exact="$ship.sector" />
								<create_position name="$impoundPos" space="$impoundSector" object="$ship" />
								<find_station name="$neutralStation" space="player.galaxy" sortbydistanceto="$ship" reachablefrom="player.zone">
									<match_relation_to object="player.entity" comparison="ge" relation="dock" />
									<match_distance object="$impoundSector" value="$impoundPos" min="40km" />
									<match owner="faction.player" negate="true" />
								</find_station>
								<debug_text text="'$neutralStation: ' + @$neutralStation.knownname + ' ' + @$neutralStation.idcode + ' ' + @$neutralStation.sector.knownname" chance="kCHC.$debugChance" />
								<create_order name="$flyAwayThenReleaseOrder" object="$ship" id="'DockAt'" immediate="true">
									<param name="destination" value="$neutralStation" />
								</create_order>
								<debug_text text="'$flyAwayThenReleaseOrder: ' + $flyAwayThenReleaseOrder.id" chance="kCHC.$debugChance" />
							</actions>
							<cues>
								<cue name="FlyAwayThenRelease_DistanceInterval" checkinterval="5s" instantiate="true">
									<actions>
										<debug_text text="''" chance="@md.$kuertee_interval" />
										<set_value name="$dist" exact="$ship.distanceto.[$impoundSector, $impoundPos]" />
										<debug_text text="'$dist: ' + $dist" chance="kCHC.$debugChance" />
										<do_if value="$dist gt 40km or ($ship.dock and $ship.dock.owner.hasrelation.neutral.{faction.player})">
											<debug_text text="'$flyAwayThenReleaseOrder.exists: ' + $flyAwayThenReleaseOrder.exists" chance="kCHC.$debugChance" />
											<set_owner object="$ship" faction="faction.player" overridenpc="true" />
											<debug_text text="'$ship.owner: ' + $ship.owner" chance="kCHC.$debugChance" />
											<debug_text text="'$flyAwayThenReleaseOrder.exists (post owner change to player): ' + $flyAwayThenReleaseOrder.exists" chance="kCHC.$debugChance" />
											<do_if value="not $flyAwayThenReleaseOrder.exists">
												<create_order name="$flyAwayThenReleaseOrder" object="$ship" id="'DockAt'" immediate="true">
													<param name="destination" value="$neutralStation" />
												</create_order>
											</do_if>
											<remove_value name="$neutralStation" />
											<remove_value name="$ship" />
											<remove_value name="$station" />
											<do_if value="kCHC.hasmission">
												<remove_mission cue="kCHC" />
											</do_if>
											<reset_cue cue="parent.parent" />
											<reset_cue cue="parent" />
											<cancel_cue cue="this" />
										</do_if>
									</actions>
								</cue>
							</cues>
						</cue>
						<cue name="FlyAwayThenRelease_CheckPlayerInSameStation" checkinterval="5s" instantiate="true">
							<conditions>
								<check_value value="FlyAwayThenRelease_Execute.state == cuestate.waiting" />
							</conditions>
							<actions>
								<debug_text text="''" chance="@md.$kuertee_interval" />
								<do_if value="$ship.station or player.station != $ship.station">
									<signal_cue cue="FlyAwayThenRelease_Execute" />
								</do_if>
								<do_elseif value="@player.ship.exists and @player.room.isclass.cockpit">
									<do_if value="player.entity.distanceto.{player.ship.pilot} le 5m">
										<signal_cue cue="FlyAwayThenRelease_Execute" />
									</do_if>
								</do_elseif>
								<cancel_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="ReturnShipToPlayer" namespace="this" instantiate="true">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="$ship" exact="event.param.$ship" />
						<set_value name="$isForfeitShip" exact="event.param.$isForfeitShip" />
						<set_value name="$releasedByFaction" exact="event.param.$releasedByFaction" />
						<set_value name="$isFlyAwayThenRelease" exact="event.param.$isFlyAwayThenRelease" />
						<remove_from_group group="kCHC.$impoundedShips" object="$ship" />
						<remove_value name="kCHC.$crimesByShips.{$ship}.$impoundedByFaction" />
						<do_if value="not $isFlyAwayThenRelease">
							<set_owner object="$ship" faction="faction.player" overridenpc="true" />
						</do_if>
						<debug_text text="'$ship.owner: ' + $ship.owner" chance="kCHC.$debugChance" />
						<debug_text text="'REMOVE set_object_min_hull ' + $ship + ' (' + @$ship.knownname + ')'" chance="kCHC.$debugChance" />
						<set_object_min_hull object="$ship" exact="0" />
						<do_if value="player.station">
							<create_order object="$ship" id="'DockAt'" immediate="true">
								<param name="destination" value="player.station" />
							</create_order>
						</do_if>
						<do_if value="not $isForfeitShip">
							<run_actions ref="GetObjectName" result="$shipName">
								<param name="Object" value="$ship" />
							</run_actions>
							<do_if value="not $isFlyAwayThenRelease">
								<set_value name="$caption" exact="{11383, 2022}.[$shipName, $releasedByFaction]" />
							</do_if>
							<do_else>
								<set_value name="$caption" exact="{11383, 2034}.[$shipName, $releasedByFaction]" />
							</do_else>
							<show_notification text="$caption" />
							<remove_value name="$caption" />
							<set_value name="$logbook" exact="{11383, 2109}.[$shipName, $releasedByFaction]" />
							<write_to_logbook category="general" title="{11383, 1000}" text="$logbook" interaction="showonmap" object="$ship" />
							<remove_value name="$shipName" />
							<remove_value name="$logbook" />
						</do_if>
					</actions>
				</cue>
				<cue name="OnImpoundedShipAttacked" namespace="this" instantiate="true">
					<conditions>
						<event_object_attacked group="kCHC.$impoundedShips" />
					</conditions>
					<actions>
						<set_value name="$ship" exact="event.object" />
						<set_value name="$attacker" exact="event.param" />
						<debug_text text="'cease_fire $ship: ' + $ship.knownname + ' (' + $ship.idcode+ ')'" chance="kCHC.$debugChance" />
						<debug_text text="'cease_fire $attacker: ' + $attacker.knownname + ' (' + $attacker.idcode+ ')'" chance="kCHC.$debugChance" />
						<cease_fire object="$ship" />
						<cease_fire object="$attacker" />
						<remove_value name="$ship" />
						<remove_value name="$attacker" />
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<cue name="ForfeitShip" namespace="this" instantiate="true" checkinterval="15min">
					<actions>
						<debug_text text="''" chance="@md.$kuertee_interval" />
						<do_if value="kCHC.$userHoursToForfeitImpounds">
							<set_value name="$timeNow" exact="player.age" />
							<debug_text text="'kCHC.$impoundedShips.count: ' + kCHC.$impoundedShips.count" chance="kCHC.$debugChance" />
							<do_all counter="$i" exact="kCHC.$impoundedShips.count" reverse="true">
								<set_value name="$ship" exact="kCHC.$impoundedShips.{$i}" />
								<debug_text text="'$ship: ' + $ship" chance="kCHC.$debugChance" />
								<debug_text text="'kCHC.$crimesByShips.{$ship}: ' + kCHC.$crimesByShips.{$ship}" chance="kCHC.$debugChance" />
								<debug_text text="'kCHC.$crimesByShips.{$ship}.$impoundedByFaction: ' + kCHC.$crimesByShips.{$ship}.$impoundedByFaction" chance="kCHC.$debugChance" />
								<do_if value="@kCHC.$crimesByShips.{$ship}.$impoundedByFaction">
									<set_value name="$jurisdictionFaction" exact="kCHC.$crimesByShips.{$ship}.$impoundedByFaction" />
									<set_value name="$elapsedTime" exact="$timeNow - @kCHC.$crimesByShips.{$ship}.$impoundedTime" />
									<debug_text text="'$elapsedTime: ' + $elapsedTime" chance="kCHC.$debugChance" />
									<do_if value="$elapsedTime gt (kCHC.$userHoursToForfeitImpounds)h">
										<set_value name="$fines" exact="kCHC.$crimesByShips.{$ship}.$finesByFaction.{$jurisdictionFaction}" />
										<set_value name="$isForfeitShip" exact="true" />
										<signal_cue_instantly cue="CleanShipOfFine" param="table[$ship = $ship, $faction = $jurisdictionFaction]" />
										<debug_text text="'set_owner object: ' + $ship.knownname + ' (' + $ship.idcode + ') faction: ' + $jurisdictionFaction" chance="kCHC.$debugChance" />
										<set_owner object="$ship" faction="$jurisdictionFaction" overridenpc="true" />
										<debug_text text="'REMOVE set_object_min_hull ' + $ship + ' (' + @$ship.knownname + ')'" chance="kCHC.$debugChance" />
										<set_object_min_hull object="$ship" exact="0" />
										<cancel_all_orders object="$ship" />
										<run_actions ref="GetObjectName" result="$shipName">
											<param name="Object" value="$ship" />
										</run_actions>
										<set_value name="$text" exact="{11383, 2033}.[$shipName, $jurisdictionFaction, $fines.formatted.{'%s %Cr'}]" comment="Your ship, %1(ship),\nwas forfeited to the %2(faction)\ndue to fines of %3(Cr)." />
										<show_notification text="$text" />
										<set_value name="$logbook" exact="{11383, 2110}.[$shipName, $jurisdictionFaction, $fines.formatted.{'%s %Cr'}]" comment="Forfeited: %1(criminal ship), to: %2(faction), fines: %3(Cr)." />
										<write_to_logbook category="general" title="{11383, 1000}" text="$logbook" money="($fines)f * -1ct" />
									</do_if>
								</do_if>
							</do_all>
							<remove_value name="$timeNow" />
						</do_if>
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="OnPlayerCriminalEnteredShip">
					<conditions>
						<event_object_changed_room object="player.entity" />
						<check_value value="@player.ship.owner == faction.player" />
						<check_value value="@kCHC.$crimesBySpacesuit.$crimes.count" />
					</conditions>
					<actions>
						<!-- maxradarrange -->
						<set_value name="$criminalShip" exact="player.ship" />
						<set_value name="$crimesByShipData" exact="@kCHC.$crimesByShips.{$criminalShip}" />
						<do_all counter="$i" exact="kCHC.$crimesBySpacesuit.$crimes.count">
							<set_value name="$crime" exact="kCHC.$crimesBySpacesuit.$crimes.{$i}" />
							<set_value name="$crimeTime" exact="kCHC.$crimesBySpacesuit.$times.{$i}" />
							<set_value name="$victimShipStation_orig" exact="kCHC.$crimesBySpacesuit.$victimShipsStations_orig.{$i}" />
							<set_value name="$victimShipStation" exact="kCHC.$crimesBySpacesuit.$victimShipsStations.{$i}" />
							<set_value name="$victimName" exact="kCHC.$crimesBySpacesuit.$victimNames.{$i}" />
							<set_value name="$victimFaction" exact="kCHC.$crimesBySpacesuit.$victimFactions.{$i}" />
							<set_value name="$fines" exact="kCHC.$crimesBySpacesuit.$fines.{$i}" />
							<set_value name="$isSelfDefense" exact="kCHC.$crimesBySpacesuit.$isSelfDefense.{$i}" />
							<do_if value="kCHC.$crimesBySpacesuit.$kCHC_isSanctioned?">
								<set_value name="$kCHC_isSanctioned" exact="kCHC.$crimesBySpacesuit.$kCHC_isSanctioned.{$i}" />
							</do_if>
							<set_value name="$isCommanderCrime" exact="kCHC.$crimesBySpacesuit.$isCommanderCrime.{$i}" />
							<set_value name="$playerCrimeId" exact="kCHC.$crimesBySpacesuit.$playerCrimeIds.{$i}" />
							<include_actions ref="PopulateCrimesByShipData" />
						</do_all>
						<set_value name="kCHC.$crimesByShips.{$criminalShip}" exact="$crimesByShipData" />
						<add_to_group groupname="kCHC.$criminalShips" object="$criminalShip" />
						<set_value name="kCHC.$crimesBySpacesuit" exact="table[]" />
						<run_actions ref="GetObjectName" result="$shipName">
							<param name="Object" value="$ship" />
						</run_actions>
						<set_value name="$caption" exact="{11383, 2031}.[$shipName]" comment="Your fines were transfered to your ship, %1 (ship)." />
						<show_notification text="$caption" />
						<remove_value name="$criminalShip" />
						<remove_value name="$caption" />
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="OnShipDocked" instantiate="true">
					<conditions>
						<event_object_docked group="kCHC.$criminalShips" />
						<check_value value="event.object != player.ship" />
						<check_value value="kCHC.$userIsImpoundShipOnDock" />
						<check_value value="event.object.owner == faction.player" />
						<check_value value="not kCHC.$impoundingShips.indexof.{event.object}" />
						<check_value value="not kCHC.$impoundedShips.indexof.{event.object}" />
					</conditions>
					<delay min="0.1s" max="0.5s" />
					<actions>
						<set_value name="$ship" exact="event.object" />
						<debug_text text="'$ship: ' + $ship.knownname + ' (' + @$ship.idcode + ')'" chance="kCHC.$debugChance" />
						<set_value name="$dock" exact="event.param" />
						<debug_text text="'$dock.owner: ' + @$dock.owner" chance="kCHC.$debugChance" />
						<debug_text text="'$victimFactions: ' + kCHC.$crimesByShips.{$ship}.$victimFactions" chance="kCHC.$debugChance" />
						<set_value name="$i" exact="@kCHC.$crimesByShips.{$ship}.$victimFactions.indexof.{$dock.owner}" />
						<debug_text text="'$i: ' + $i" chance="kCHC.$debugChance" />
						<do_if value="$i and @kCHC.$crimesByShips.{$ship}.$finesByFaction.{$dock.owner} and
						(
							(not $dock.owner.hasrelation.enemy.{$ship.owner}) or
							kCHC.$userIsDetectCrimesOnEnemy
						)">
							<signal_cue_instantly cue="ImpoundShip" param="table[$ship = $ship, $impoundedByFaction = $dock.owner]" />
						</do_if>
						<do_if value="VerifyFactionFines.state == cuestate.waiting">
							<signal_cue_instantly cue="VerifyFactionFines" param="table[$faction = $dock.owner]" />
						</do_if>
						<remove_value name="$ship" />
						<remove_value name="$dock" />
						<remove_value name="$i" />
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<cue name="OnPlayerDocked">
					<conditions>
						<!-- Event for the specified object docking (object = docking object, param = dock object, param2 = zone) -->
						<!-- <event_object_docked object="player.entity" /> -->
						<event_object_signalled object="player.entity" param="'K_ArriveAndLeaveStations'" />
						<check_value value="not player.ship.isclass.spacesuit" />
						<check_value value="@event.param2.$dockAt.exists" />
						<check_value value="kCHC.$userIsImpoundPlayerShipOnDock" />
						<check_value value="not @kCHC.$impoundingShips.indexof.{player.ship}" />
						<check_value value="not @kCHC.$impoundedShips.indexof.{player.ship}" />
					</conditions>
					<actions>
						<set_value name="$ship" exact="player.ship" />
						<debug_text text="'$ship: ' + $ship" chance="kCHC.$debugChance" />
						<set_value name="$dock" exact="event.param2.$dockAt" />
						<debug_text text="'$dock.owner: ' + @$dock.owner" chance="kCHC.$debugChance" />
						<do_if value="VerifyFactionFines.state == cuestate.waiting">
							<signal_cue_instantly cue="VerifyFactionFines" param="table[$faction = $dock.owner]" />
						</do_if>
						<debug_text text="'kCHC.$crimesByShips.{$ship}.$finesByFaction.{$dock.owner}: ' + @kCHC.$crimesByShips.{$ship}.$finesByFaction.{$dock.owner}" chance="kCHC.$debugChance" />
						<!-- <debug_text text="'kCHC.$crimesByShips.{$ship}.$victimFactions: ' + @kCHC.$crimesByShips.{$ship}.$victimFactions" chance="kCHC.$debugChance" /> -->
						<debug_text text="'kCHC.$crimesByShips.{$ship}.$crimes.count: ' + @kCHC.$crimesByShips.{$ship}.$crimes.count" chance="kCHC.$debugChance" />
						<debug_text text="'kCHC.$factionFines.{$dock.owner}: ' + @kCHC.$factionFines.{$dock.owner} + ' kCHC.$factionFines.{$dock.owner}: ' + @kCHC.$factionFines.{$dock.owner}" chance="kCHC.$debugChance" />
						<do_if value="@kCHC.$crimesByShips.{$ship}.$finesByFaction.{$dock.owner} or
						(
							kCHC.$userIsImpoundPlayerShipOnDockAnyFine and
							@kCHC.$factionFines.{$dock.owner}
						) and
						(
							(not $dock.owner.hasrelation.enemy.{$ship.owner}) or
							kCHC.$userIsDetectCrimesOnEnemy
						)">
							<signal_cue_instantly cue="ImpoundShip" param="table[$ship = $ship, $impoundedByFaction = $dock.owner]" />
						</do_if>
						<remove_value name="$ship" />
						<remove_value name="$dock" />
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="VerifyFactionFines" namespace="this">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="$faction" exact="event.param.$faction" />
						<debug_text text="'$faction: ' + $faction" chance="kCHC.$debugChance" />
						<set_value name="$fines" exact="0" />
						<do_all counter="$i" exact="kCHC.$crimesByShips.keys.count" reverse="true">
							<set_value name="$ship" exact="kCHC.$crimesByShips.keys.{$i}" />
							<do_if value="not kCHC.$crimesByShips.{$ship}.$victimFactions?">
								<remove_value name="kCHC.$crimesByShips.{$ship}" />
							</do_if>
							<do_elseif value="kCHC.$crimesByShips.{$ship}.$victimFactions.indexof.{$faction}">
								<do_all counter="$j" exact="kCHC.$crimesByShips.{$ship}.$victimFactions.count">
									<do_if value="kCHC.$crimesByShips.{$ship}.$victimFactions.{$j} == $faction">
										<set_value name="$fines" exact="$fines + kCHC.$crimesByShips.{$ship}.$fines.{$j}" />
									</do_if>
								</do_all>
							</do_elseif>
						</do_all>
						<debug_text text="'$fines: ' + $fines + ' kCHC.$factionFines.{$faction}:' + @kCHC.$factionFines.{$faction}" chance="kCHC.$debugChance" />
						<do_if value="$fines">
							<set_value name="kCHC.$factionFines.{$faction}" exact="$fines" />
						</do_if>
						<remove_value name="$faction" />
						<remove_value name="$fines" />
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="OnShipAttacked" instantiate="true">
					<conditions>
						<event_player_owned_attacked />
						<check_value value="not event.object.isclass.spacesuit" />
						<check_value value="kCHC.$userShipHullPercImpound" />
						<!-- getting_a_job: never impound a ship the player is on, when taking damage, wait until player gets off the ship -->
						<!-- <check_any> -->
						<check_value value="event.object != player.ship" />
						<!-- <check_all>
								<check_value value="event.object == player.ship" />
								<check_value value="not @md.kuertee_atd.kATD.exists" />
								<check_value value="kCHC.$userIsImpoundPlayerShipOnAttack" />
							</check_all> -->
						<!-- </check_any> -->
						<check_value value="kCHC.$criminalShips.indexof.{event.object}" />
						<check_value value="not kCHC.$impoundingShips.indexof.{event.object}" />
						<check_value value="not kCHC.$impoundedShips.indexof.{event.object}" />
					</conditions>
					<delay min="0.1s" max="0.5s" /><!-- random delay to spread out the event, so that we can prevent them from stacking one of top of the other -->
					<actions>
						<set_value name="$ship" exact="event.object" />
						<do_if value="(not kCHC.$impoundingShips.indexof.{event.object}) and (not kCHC.$impoundedShips.indexof.{event.object})">
							<add_to_group groupname="kCHC.$impoundingShips" object="$ship" />
							<do_if value="$ship == player.ship">
								<debug_text text="'$ship: ' + $ship.knownname + ' (' + $ship.idcode + ')'" chance="kCHC.$debugChance" />
								<debug_text text="'$userIsImpoundPlayerShipOnAttack: ' + $userIsImpoundPlayerShipOnAttack" chance="kCHC.$debugChance" />
							</do_if>
							<do_if value="$ship != player.ship or kCHC.$userIsImpoundPlayerShipOnAttack">
								<set_value name="$attacker" exact="event.param" />
								<set_value name="$i" exact="@kCHC.$crimesByShips.{$ship}.$victimFactions.indexof.{$attacker.owner}" />
								<do_if value="$ship == player.ship and kCHC.$debugChance">
									<debug_text text="'$i: ' + $i" />
									<debug_text text="'kCHC.$crimesByShips.{$ship}.$finesByFaction.{$attacker.owner}: ' + @kCHC.$crimesByShips.{$ship}.$finesByFaction.{$attacker.owner}" />
									<debug_text text="'kCHC.$userIsImpoundPlayerShipOnAttackAnyFine: ' + @kCHC.$userIsImpoundPlayerShipOnAttackAnyFine" />
									<debug_text text="'kCHC.$factionFines.{$attacker.owner}: ' + @kCHC.$factionFines.{$attacker.owner}" />
									<debug_text text="'$ship.hullpercentage: ' + @$ship.hullpercentage" />
									<debug_text text="'kCHC.$userShipHullPercImpound: ' + @kCHC.$userShipHullPercImpound" />
								</do_if>
								<do_if value="
									($i and @kCHC.$crimesByShips.{$ship}.$finesByFaction.{$attacker.owner})
									or
									($ship == player.ship and kCHC.$userIsImpoundPlayerShipOnAttackAnyFine and kCHC.$factionFines.{$attacker.owner})
								">
									<debug_text text="'set_object_min_hull ' + $ship + ' (' + @$ship.knownname + ')'" chance="kCHC.$debugChance" />
									<set_object_min_hull object="$ship" exact="1" />
									<set_value name="$shieldPercentage" exact="($ship.shield + 1) / ($ship.maxshield + 1) * 100" />
									<do_if value="$ship.hullpercentage le kCHC.$userShipHullPercImpound
									and $shieldPercentage le kCHC.$userShipHullPercImpound
									and
									(
										(not $attacker.owner.hasrelation.enemy.{$ship.owner}) or
										kCHC.$userIsDetectCrimesOnEnemy
									)">
										<debug_text text="'$ship: ' + $ship.knownname + ' (' + @$ship.idcode + ')'" chance="kCHC.$debugChance" />
										<debug_text text="'$ship.hullpercentage: ' + $ship.hullpercentage" chance="kCHC.$debugChance" />
										<debug_text text="'$attacker.owner: ' + @$attacker.owner" chance="kCHC.$debugChance" />
										<debug_text text="'$victimFactions: ' + kCHC.$crimesByShips.{$ship}.$victimFactions" chance="kCHC.$debugChance" />
										<cease_fire object="$ship" />
										<cease_fire object="$attacker" />
										<signal_cue_instantly cue="ImpoundShip" param="table[$ship = $ship, $impoundedByFaction = $attacker.owner]" />
									</do_if>
									<do_else>
										<remove_from_group group="kCHC.$impoundingShips" object="$ship" />
									</do_else>
								</do_if>
								<do_else>
									<do_if value="$ship == player.ship and @md.kuertee_atd.kATD.exists">
										<debug_text text="'set_object_min_hull ' + $ship + ' (' + @$ship.knownname + ')'" chance="kCHC.$debugChance" />
										<set_object_min_hull object="$ship" exact="1" />
									</do_if>
									<do_else>
										<debug_text text="'REMOVE set_object_min_hull ' + $ship + ' (' + @$ship.knownname + ')'" chance="kCHC.$debugChance" />
										<set_object_min_hull object="$ship" exact="0" />
									</do_else>
									<remove_from_group group="kCHC.$impoundingShips" object="$ship" />
								</do_else>
							</do_if>
							<do_else>
								<remove_from_group group="kCHC.$impoundingShips" object="$ship" />
							</do_else>
						</do_if>
						<remove_value name="$ship" />
						<remove_value name="$attacker" />
						<remove_value name="$i" />
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<cue name="GetIsAttackerCanImpoundShip" instantiate="true">
					<conditions>
						<event_cue_signalled />
						<!-- getting_a_job: never impound a ship the player is on, when attacked, wait until player gets off the ship -->
						<check_value value="event.param.$ship != player.ship" />
						<!-- param="table[$cue = cue to put var, $attacker = ship or station, $ship = ship] -->
					</conditions>
					<actions>
						<set_value name="$cue" exact="event.param.$cue" />
						<set_value name="$attacker" exact="event.param.$attacker" />
						<set_value name="$ship" exact="event.param.$ship" />
						<set_value name="$cue.$isAttackerCanImpoundShip" exact="false" />
						<find_object name="$playerShipsAndStations" class="[class.ship_s, class.ship_m, class.ship_l, class.ship_xl, class.station]" space="player.galaxy" multiple="true" />
						<do_if value="
							(
								(not md.kuertee_atd.kATD.exists) or
								$playerShipsAndStations.count
							) and
							@kCHC.$userIsImpoundPlayerShipOnAttack and
							$ship.exists and $attacker.exists and
							@kCHC.$validFactions.indexof.{$attacker.owner} and
							(
								(
									@kCHC.$crimesByShips.{$ship} and
									@kCHC.$crimesByShips.{$ship}.$crimeCountsByFaction.{$attacker.owner}
								) or
								(
									kCHC.$userIsImpoundPlayerShipOnAttackAnyFine and
									kCHC.$factionFines.{$attacker.owner}
								)
							) and
							(
								(
									(not $attacker.owner.hasrelation.enemy.{$ship.owner}) and
									(not kCHC.$pirateFactions.indexof.{$attacker.owner})
								) or
								(
									kCHC.$userIsDetectCrimesOnEnemy and
									$attacker.owner.hasrelation.enemy.{$ship.owner}
								) or
								(
									kCHC.$userIsDetectCrimesOnPirate and
									kCHC.$pirateFactions.indexof.{$attacker.owner}
								)
							)
						">
							<set_value name="$cue.$isAttackerCanImpoundShip" exact="true" />
						</do_if>
						<debug_text text="'$cue: ' + $cue" chance="kCHC.$debugChanceExtra" />
						<debug_text text="'$attacker: ' + $attacker.knownname + ' (' + $attacker.idcode + ')'" chance="kCHC.$debugChanceExtra" />
						<debug_text text="'$ship: ' + $ship.knownname + ' (' + $ship.idcode + ')'" chance="kCHC.$debugChanceExtra" />
						<debug_text text="'$cue.$isAttackerCanImpoundShip: ' + $cue.$isAttackerCanImpoundShip" chance="kCHC.$debugChanceExtra" />
						<do_if value="kCHC.$debugChance">
							<debug_text text="'test 1'" />
							<do_if value="
								(
									@kCHC.$crimesByShips.{$ship} and
									@kCHC.$crimesByShips.{$ship}.$crimeCountsByFaction.{$attacker.owner}
								) or
								(
									kCHC.$userIsImpoundPlayerShipOnAttackAnyFine and
									kCHC.$factionFines.{$attacker.owner}
								)
							">
								<debug_text text="'test 1 passed'" />
							</do_if>
							<debug_text text="'test 2'" />
							<do_if value="
								(
									(not $attacker.owner.hasrelation.enemy.{$ship.owner}) and
									(not kCHC.$pirateFactions.indexof.{$attacker.owner})
								) or
								(
									kCHC.$userIsDetectCrimesOnEnemy and
									$attacker.owner.hasrelation.enemy.{$ship.owner}
								) or
								(
									kCHC.$userIsDetectCrimesOnPirate and
									kCHC.$pirateFactions.indexof.{$attacker.owner}
								)
							">
								<debug_text text="'test 2 passed'" />
							</do_if>
						</do_if>
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<library name="CleanCriminalShip">
					<actions>
						<do_if value="kCHC.$crimesByShips.{$ship}">
							<remove_from_group group="kCHC.$criminalShips" object="$ship" />
							<remove_value name="kCHC.$crimesByShips.{$ship}" />
							<set_owner object="$ship" faction="faction.player" />
							<debug_text text="'kCHC.$crimesByShips.{$ship}: ' + @kCHC.$crimesByShips.{$ship}" chance="kCHC.$debugChance" />
						</do_if>
						<remove_from_group group="kCHC.$impoundedShips" object="$ship" />
					</actions>
				</library>
				<cue name="OnShipDestroyed" instantiate="true">
					<conditions>
						<event_object_destroyed group="kCHC.$criminalShips" />
					</conditions>
					<actions>
						<set_value name="$ship" exact="event.object" />
						<debug_text text="'$ship: ' + $ship.knownname + ' (' + $ship.idcode + ')'" chance="kCHC.$debugChance" />
						<include_actions ref="CleanCriminalShip" />
						<remove_value name="$ship" />
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<cue name="PayAllFinesActual" namespace="this">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="$jurisdictionFaction" exact="event.param.$jurisdictionFaction" />
						<set_value name="$finesPaid" exact="kCHC.$factionFines.{$jurisdictionFaction}" />
						<debug_text text="'transfer_money OUT: ' + kCHC.$factionFines.{$jurisdictionFaction}" chance="kCHC.$debugChance" />
						<!-- <transfer_money from="faction.player" to="$jurisdictionFaction" amount="kCHC.$factionFines.{$jurisdictionFaction}" /> -->
						<do_if value="@md.VerboseTransactionLog.TransferMoney.exists">
							<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
								$amount = kCHC.$factionFines.{$jurisdictionFaction},
								$description = {11383, 101},
								$from = faction.player,
								$to = $jurisdictionFaction,
							]" />
						</do_if>
						<do_else>
							<transfer_money from="faction.player" to="$jurisdictionFaction" amount="kCHC.$factionFines.{$jurisdictionFaction}" />
						</do_else>
						<set_value name="$logbook" exact="{11383, 2108}.[kCHC.$factionFines.{$jurisdictionFaction}.formatted.{'%s %Cr'}, $jurisdictionFaction]" />
						<write_to_logbook category="general" title="{11383, 1000}" text="$logbook" money="(kCHC.$factionFines.{$jurisdictionFaction})f * -1ct" />
						<set_value name="kCHC.$factionFines.{$jurisdictionFaction}" exact="0" />
						<remove_value name="$logbook" />
						<set_value name="$ships" exact="[]" />
						<do_all counter="$i" exact="kCHC.$crimesByShips.keys.count">
							<set_value name="$ship" exact="kCHC.$crimesByShips.keys.{$i}" />
							<do_if value="@kCHC.$crimesByShips.{$ship}.$victimFactions.indexof.{$jurisdictionFaction} or @kCHC.$crimesByShips.{$ship}.$impoundedByFaction == $jurisdictionFaction">
								<append_to_list name="$ships" exact="$ship" />
							</do_if>
						</do_all>
						<do_all counter="$i" exact="$ships.count">
							<set_value name="$ship" exact="$ships.{$i}" />
							<signal_cue_instantly cue="PayAnyShipFine" param="table[$ship = $ship, $faction = $jurisdictionFaction]" />
							<signal_cue_instantly cue="CleanShipOfFine" param="table[$ship = $ship, $faction = $jurisdictionFaction]" />
						</do_all>
						<run_actions ref="SetPlayerCriminalRecordToPaid">
							<param name="Faction" value="$jurisdictionFaction" />
						</run_actions>
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="PayShipFineActual" namespace="this" instantiate="true">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<signal_cue_instantly cue="PayAnyShipFine" param="table[$ship = event.param.$ship, $faction = event.param.$faction]" />
						<set_value name="$ship" exact="event.param.$ship" />
						<set_value name="$faction" exact="event.param.$faction" />
						<set_value name="kCHC.$factionFines.{$faction}" exact="kCHC.$factionFines.{$faction} - kCHC.$crimesByShips.{$ship}.$finesByFaction.{$faction}" />
						<do_if value="kCHC.$factionFines.{$faction} lt 1">
							<set_value name="kCHC.$factionFines.{$faction}" exact="0" />
						</do_if>
						<debug_text text="'transfer_money OUT: ' + kCHC.$crimesByShips.{$ship}.$finesByFaction.{$faction}" chance="kCHC.$debugChance" />
						<!-- <transfer_money from="faction.player" to="$faction" amount="kCHC.$crimesByShips.{$ship}.$finesByFaction.{$faction}" /> -->
						<do_if value="@md.VerboseTransactionLog.TransferMoney.exists">
							<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
								$amount = kCHC.$crimesByShips.{$ship}.$finesByFaction.{$faction},
								$description = {11383, 102},
								$from = faction.player,
								$to = $faction,
							]" />
						</do_if>
						<do_else>
							<transfer_money from="faction.player" to="$faction" amount="kCHC.$crimesByShips.{$ship}.$finesByFaction.{$faction}" />
						</do_else>
						<set_value name="$logbook" exact="{11383, 2108}.[kCHC.$crimesByShips.{$ship}.$finesByFaction.{$faction}.formatted.{'%s %Cr'}, $faction]" comment="Fines paid: %1(Cr), to: %2(faction)." />
						<write_to_logbook category="general" title="{11383, 1000}" text="$logbook" money="(kCHC.$crimesByShips.{$ship}.$finesByFaction.{$faction})f * -1ct" />
						<set_value name="kCHC.$crimesByShips.{$ship}.$finesByFaction.{$faction}" exact="0" />
						<run_actions ref="SetPlayerCriminalRecordToPaid">
							<param name="Faction" value="event.param.$faction" />
							<param name="CriminalShip" value="event.param.$ship" />
						</run_actions>
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<cue name="OnPayFineFromUI" namespace="this" instantiate="true">
					<conditions>
						<event_ui_triggered screen="'kCHC'" control="'pay_fine_by_ship'" />
					</conditions>
					<actions>
						<set_value name="$ship" exact="event.param3.$ship" />
						<set_value name="$faction" exact="faction.{event.param3.$faction}" />
						<debug_text text="'$ship: ' + $ship" chance="kCHC.$debugChance" />
						<debug_text text="'$faction: ' + $faction" chance="kCHC.$debugChance" />
						<do_if value="@kCHC.$crimesByShips.{$ship}.$victimFactions.indexof.{$faction} or @kCHC.$crimesByShips.{$ship}.$impoundedByFaction == $faction">
							<signal_cue_instantly cue="PayShipFineActual" param="table[$ship = $ship, $faction = $faction]" />
							<signal_cue_instantly cue="CleanShipOfFine" param="table[$ship = $ship, $faction = $faction]" />
						</do_if>
					</actions>
					<cues>
						<cue name="OnPayFineFromUI2">
							<actions>
								<signal_cue_instantly cue="OnMapMenu" param="table[$isUpdateInfoFrame = true]" />
								<raise_lua_event name="'kCHC.OnPayFineByShipDone'" />
								<cancel_cue cue="parent" />
								<cancel_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="PayAnyShipFine" namespace="this">
					<!-- this is just a cue event so that others can listen for it -->
					<conditions>
						<event_cue_signalled />
					</conditions>
					<cues>
						<cue name="PayAnyShipFine2">
							<actions>
								<reset_cue cue="parent" />
								<cancel_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="CleanShipOfFine" namespace="this" instantiate="true">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="$ship" exact="event.param.$ship" />
						<set_value name="$jurisdictionFaction" exact="event.param.$faction" />
						<!-- <remove_from_list name="kCHC.$crimesByShips.{$ship}.$victimFactions" exact="$jurisdictionFaction" /> -->
						<!--
							$crimes = [],
							$times = [],
							$startTimes = [],
							$victimShipsStations_orig = [],
							$victimShipsStations = [],
							$victimNames = [],
							$victimFactions = [],
							$fines = [],
							$isSelfDefense = [],
							$kCHC_isSanctioned = [],
							$isCommanderCrime = [],
							$playerCrimeIds = [],
							$totalFines = 0
							$crimeCountsByFaction = table[]
							$crimeCountsByFaction.{$victimFaction}
							$finesByFaction = table[]
							$finesByFaction.{$victimFaction}
							$crimeCountsByType
						-->
						<do_if value="@kCHC.$crimesByShips.{$ship}.$totalFines and @kCHC.$crimesByShips.{$ship}.$finesByFaction.{$jurisdictionFaction}">
							<set_value name="kCHC.$crimesByShips.{$ship}.$totalFines" exact="kCHC.$crimesByShips.{$ship}.$totalFines - kCHC.$crimesByShips.{$ship}.$finesByFaction.{$jurisdictionFaction}" />
							<do_if value="@kCHC.$crimesByShips.{$ship}.$totalFines lt 1">
								<set_value name="kCHC.$crimesByShips.{$ship}.$totalFines" exact="0" />
							</do_if>
						</do_if>
						<signal_cue_instantly cue="EnsureValidShipCrimeData" param="table[
							$ships = [$ship],
							$fromCue = namespace,
						]" />
						<do_if value="@kCHC.$crimesByShips.{$ship}.$impoundedByFaction == $jurisdictionFaction">
							<signal_cue_instantly cue="ReleaseShipFromImpound" param="table[$ship = $ship, $releasedByFaction = $jurisdictionFaction, $isForfeitShip = @$isForfeitShip]" />
						</do_if>
						<do_if value="not kCHC.$crimesByShips.{$ship}.$victimFactions.count">
							<remove_from_group group="kCHC.$criminalShips" object="$ship" />
							<remove_value name="kCHC.$crimesByShips.{$ship}" />
						</do_if>
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<cue name="EnsureValidShipCrimeData" namespace="this" instantiate="true">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="$ships" exact="@event.param.$ships" />
						<set_value name="kCHC.$debugChance" exact="if [DebugChat, kCHC].indexof.{@event.param.$fromCue} then 100 else kCHC.$debugChance" />
						<debug_text text="'$ships: ' + $ships" chance="kCHC.$debugChance" />
						<do_if value="not $ships">
							<set_value name="$ships" exact="kCHC.$crimesByShips.keys.list" />
							<debug_text text="'kCHC.$crimesByShips: ' + kCHC.$crimesByShips" chance="kCHC.$debugChance" />
							<debug_text text="'kCHC.$crimesByShips.keys.list: ' + kCHC.$crimesByShips.keys.list" chance="kCHC.$debugChance" />
							<debug_text text="'$ships (kCHC.$crimesByShips.keys.list): ' + $ships" chance="kCHC.$debugChance" />
						</do_if>
						<do_for_each name="$ship_inList" in="$ships">
							<set_value name="$removes" exact="[]" />
							<set_value name="$removes_factions" exact="[]" />
							<set_value name="$i" exact="1" />
							<do_for_each name="$faction_inList" in="kCHC.$crimesByShips.{$ship_inList}.$victimFactions">
								<do_if value="
									(not kCHC.$crimesByShips.{$ship_inList}.$totalFines)
									or
									(not kCHC.$crimesByShips.{$ship_inList}.$finesByFaction.{$faction_inList})
									or
									(not kCHC.$factionFines.{$faction_inList})
								">
									<append_to_list name="$removes" exact="$i" />
									<do_if value="not $removes_factions.indexof.{$faction_inList}">
										<append_to_list name="$removes_factions" exact="$faction_inList" />
									</do_if>
								</do_if>
								<set_value name="$i" exact="1" operation="add" />
							</do_for_each>
							<do_if value="$removes.count or $removes_factions.count">
								<debug_text text="$ship_inList + ' (' + $ship_inList.knownname + ', ' + $ship_inList.idcode + ') '" chance="kCHC.$debugChance" />
								<debug_text text="'    $removes: ' + $removes" chance="kCHC.$debugChance" />
								<debug_text text="'    $removes_factions: ' + $removes_factions" chance="kCHC.$debugChance" />
							</do_if>
							<do_if value="$removes.count">
								<set_value name="$adj" exact="0" />
								<do_for_each name="$i" in="$removes">
									<debug_text text="'    removing crime ' + kCHC.$crimesByShips.{$ship_inList}.$crimes.{$i - $adj} + ' of ' + kCHC.$crimesByShips.{$ship_inList}.$fines.{$i - $adj} + ' against ' + kCHC.$crimesByShips.{$ship_inList}.$victimFactions.{$i - $adj}" chance="kCHC.$debugChance" />
									<remove_value name="kCHC.$crimesByShips.{$ship_inList}.$crimes.{$i - $adj}" />
									<remove_value name="kCHC.$crimesByShips.{$ship_inList}.$fines.{$i - $adj}" />
									<remove_value name="kCHC.$crimesByShips.{$ship_inList}.$isCommanderCrime.{$i - $adj}" />
									<remove_value name="kCHC.$crimesByShips.{$ship_inList}.$isSelfDefense.{$i - $adj}" />
									<do_if value="kCHC.$crimesByShips.{$ship_inList}.$kCHC_isSanctioned?">
										<remove_value name="kCHC.$crimesByShips.{$ship_inList}.$kCHC_isSanctioned.{$i - $adj}" />
									</do_if>
									<remove_value name="kCHC.$crimesByShips.{$ship_inList}.$playerCrimeIds.{$i - $adj}" />
									<remove_value name="kCHC.$crimesByShips.{$ship_inList}.$startTimes.{$i - $adj}" />
									<remove_value name="kCHC.$crimesByShips.{$ship_inList}.$times.{$i - $adj}" />
									<remove_value name="kCHC.$crimesByShips.{$ship_inList}.$victimFactions.{$i - $adj}" />
									<remove_value name="kCHC.$crimesByShips.{$ship_inList}.$victimNames.{$i - $adj}" />
									<remove_value name="kCHC.$crimesByShips.{$ship_inList}.$victimShipsStations_orig.{$i - $adj}" />
									<remove_value name="kCHC.$crimesByShips.{$ship_inList}.$victimShipsStations.{$i - $adj}" />
									<set_value name="$adj" exact="$adj + 1" />
								</do_for_each>
							</do_if>
							<do_if value="$removes_factions.count">
								<do_for_each name="$faction_inList" in="$removes_factions">
									<debug_text text="'    removing faction from ship data ' + $faction_inList" chance="kCHC.$debugChance" />
									<remove_value name="kCHC.$crimesByShips.{$ship_inList}.$crimeCountsByFaction.{$faction_inList}" />
									<remove_value name="kCHC.$crimesByShips.{$ship_inList}.$finesByFaction.{$faction_inList}" />
								</do_for_each>
							</do_if>
							<do_if value="kCHC.$debugChance">
								<debug_text text="'$ship_inList: ' + $ship_inList + ' (' + $ship_inList.knownname + ', ' + $ship_inList.idcode + ')'" />
								<do_for_each name="$key" in="kCHC.$crimesByShips.{$ship_inList}.keys.list">
									<set_value name="$value" exact="kCHC.$crimesByShips.{$ship_inList}.{$key}" />
									<do_if value="typeof $value == datatype.list or typeof $value == datatype.group">
										<debug_text text="'    ' + $key" />
										<set_value name="$list" exact="$value" />
										<do_for_each name="$item" in="$list">
											<debug_text text="'        ' + $item" />
										</do_for_each>
									</do_if>
									<do_else>
										<debug_text text="'    ' + $key + ': ' + kCHC.$crimesByShips.{$ship_inList}.{$key}" />
									</do_else>
								</do_for_each>
							</do_if>
						</do_for_each>
						<do_if value="kCHC.$playerCriminalRecord.count">
							<do_for_each counter="$i" name="$record" in="kCHC.$playerCriminalRecord" reverse="true">
								<do_if value="not @$record.$isPaid">
									<run_actions ref="DebugData" chance="kCHC.$debugChance">
										<param name="Data" value="$record" />
									</run_actions>
									<set_value name="$isCrimeFoundForPersonalRecord" exact="false" />
									<set_value name="$crimeShipFound" exact="null" />
									<do_for_each name="$ship" valuename="$crimeData" in="kCHC.$crimesByShips">
										<do_if value="$record.$shipName == $ship.knownname + ' (' + $ship.idcode + ')'">
											<set_value name="$crimeShipFound" exact="$ship" />
											<do_for_each counter="$j" name="$crime" in="$crimeData.$crimes">
												<do_if value="$crime == $record.$crime">
													<do_if value="$crimeData.$fines.{$j} == $record.$fines">
														<do_if value="$crimeData.$times.{$j} == $record.$time">
															<set_value name="$isCrimeFoundForPersonalRecord" exact="true" />
															<break />
														</do_if>
													</do_if>
												</do_if>
											</do_for_each>
										</do_if>
									</do_for_each>
									<debug_text text="'$crimeShipFound: ' + $crimeShipFound + ' (' + @$crimeShipFound.idcode + ')'" chance="kCHC.$debugChance" />
									<do_if value="(not $isCrimeFoundForPersonalRecord) and $crimeShipFound">
										<signal_cue_instantly cue="CrimeConfirm" param="table[
											$crime = $record.$crime,
											$criminalShip = $crimeShipFound,
											$criminalShipName = $record.$shipName,
											$crimeTime = $record.$time,
											$crimeFines = $record.$fines,
											$victimShipStation = null,
											$victimShipStationName = $record.$victimName,
											$victimFaction = $record.$victimFaction,
											$isSelfDefense = false,
											$isIgnorePlayerCrime = true,
											$isSilent = true,
											$fromCue = namespace,
											$reportedByName = @$record.$reportedByName,
											$reportedAtName = @$record.$reportedAtName,
										]" />
									</do_if>
								</do_if>
							</do_for_each>
						</do_if>
						<set_value name="kCHC.$debugChance" exact="if [DebugChat, kCHC].indexof.{@event.param.$fromCue} then 0 else kCHC.$debugChance" />
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<cue name="FinesOffice" namespace="this">
					<cues>
						<cue name="FinesOfficeAddToStation">
							<conditions>
								<event_object_signalled object="player.entity" param="'K_ArriveAndLeaveStations'" />
								<check_any>
									<check_all>
										<check_value value="@event.param2.$dockAt.isclass.station" />
										<check_any>
											<check_value value="@event.param2.$dockAt.isdefencestation" />
											<check_value value="@event.param2.$dockAt.isshipyard" />
											<check_value value="@event.param2.$dockAt.iswharf" />
											<check_value value="@event.param2.$dockAt.isequipmentdock" />
											<check_value value="@event.param2.$dockAt.ispiratebase" />
											<check_value value="@event.param2.$dockAt.isheadquarters" />
											<check_value value="@event.param2.$dockAt.isfactionheadquarters" />
										</check_any>
									</check_all>
									<check_all>
										<check_value value="@event.param2.$teleportTo.isclass.station" />
										<check_any>
											<check_value value="@event.param2.$teleportTo.isdefencestation" />
											<check_value value="@event.param2.$teleportTo.isshipyard" />
											<check_value value="@event.param2.$teleportTo.iswharf" />
											<check_value value="@event.param2.$teleportTo.isequipmentdock" />
											<check_value value="@event.param2.$teleportTo.ispiratebase" />
											<check_value value="@event.param2.$teleportTo.isheadquarters" />
											<check_value value="@event.param2.$teleportTo.isfactionheadquarters" />
										</check_any>
									</check_all>
								</check_any>
							</conditions>
							<actions>
								<do_if value="event.name == 'event_object_signalled'">
									<set_value name="$station" exact="@event.param2.$teleportTo" />
									<do_if value="not @$station.exists">
										<set_value name="$station" exact="@event.param2.$dockAt" />
									</do_if>
								</do_if>
								<do_elseif value="event.name == 'event_object_docked'">
									<set_value name="$station" exact="event.param" />
								</do_elseif>
								<do_elseif value="event.name == 'event_player_teleport_successful'">
									<set_value name="$station" exact="event.param.container" />
								</do_elseif>
								<set_value name="kCHC.$currentStation" exact="$station" />
								<set_value name="$jurisdictionFaction" exact="$station.owner" />
								<set_value name="$finesOfficer" exact="null" />
								<set_value name="$interior" exact="null" />
								<set_value name="$room" exact="null" />
								<create_cue_actor name="$finesOfficer" cue="this">
									<select faction="$jurisdictionFaction" />
									<owner exact="$jurisdictionFaction" />
								</create_cue_actor>
								<set_entity_traits entity="$finesOfficer" missionactor="true" />
								<set_entity_overrides entity="$finesOfficer" icon="'defenceofficer'" />
								<find_object_component name="$dockArea" object="$station" class="class.walkablemodule" />
								<do_if value="$dockArea">
									<get_room_definition macro="$corridorMacro" race="$jurisdictionFaction.primaryrace" tags="tag.corridor" />
									<do_if value="not $corridorMacro">
										<get_room_definition macro="$corridorMacro" race="faction.argon.primaryrace" tags="tag.corridor" />
									</do_if>
									<get_room_definition macro="$roomMacro" race="$jurisdictionFaction.primaryrace" tags="tag.office" />
									<do_if value="not $roomMacro">
										<get_room_definition macro="$roomMacro" race="faction.argon.primaryrace" tags="tag.office" />
									</do_if>
									<set_value name="$roomName" exact="{11383, 3000}" />
									<create_dynamic_interior object="$station"
										corridor="$corridorMacro" room="$roomMacro"
										name="$roomName"
										interiorname="$interior" corridorname="$corridor" roomname="$room" roomtype="roomtype.office"
										seed="$station.seed + lookup.roomtype.list.indexof.{roomtype.office}" />
									<do_if value="$interior and $corridor and $room">
										<find_npc_slot name="$roomSlot" object="$room" tags="tag.control" />
										<do_if value="$roomSlot">
											<add_actor_to_room actor="$finesOfficer" slot="$roomSlot" />
										</do_if>
									</do_if>
									<debug_text text="'$interior: ' + $interior + ' $corridor: ' + $corridor + ' $room: ' + $room" chance="kCHC.$debugChance" />
									<debug_text text="'$roomSlot: ' + $roomSlot + ' $finesOfficer: ' + $finesOfficer" chance="kCHC.$debugChance" />
									<remove_value name="$corridorMacro" />
									<remove_value name="$roomMacro" />
									<remove_value name="$dockArea" />
									<remove_value name="$roomSlot" />
								</do_if>
							</actions>
							<cues>
								<cue name="FinesOfficeCleanUp2">
									<conditions>
										<event_object_signalled object="player.entity" param="'K_ArriveAndLeaveStations'" />
										<check_any>
											<check_value value="@event.param2.$leaveFrom == $station" />
											<check_value value="@event.param2.$undockFrom == $station" />
										</check_any>
									</conditions>
									<actions>
										<debug_text text="'$finesOfficer: ' + $finesOfficer" chance="kCHC.$debugChance" />
										<do_if value="$finesOfficer">
											<remove_actor_from_room actor="$finesOfficer" />
										</do_if>
										<destroy_object object="$finesOfficer" />
										<debug_text text="'$interior: ' + $interior" chance="kCHC.$debugChance" />
										<do_if value="$interior">
											<remove_dynamic_interior object="$station" interior="$interior" />
											<destroy_object object="$interior" />
										</do_if>
										<destroy_object object="$room" />
										<set_value name="kCHC.$currentStation" exact="null" />
										<reset_cue cue="parent" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="OnFinesOfficerStartConvo">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<event_conversation_started actor="$finesOfficer" conversation="default" />
										</check_any>
									</conditions>
									<actions>
										<debug_text text="'event.name: ' + event.name" chance="kCHC.$debugChance" />
										<do_if value="event.name == 'event_cue_signalled'">
											<set_value name="$jurisdictionFaction" exact="event.param.$faction" />
											<do_if value="player.money ge kCHC.$factionFines.{$jurisdictionFaction}">
												<run_actions ref="AddPlayerChoice_PayAllFines">
													<param name="Faction" value="$jurisdictionFaction" />
												</run_actions>
											</do_if>
											<do_all counter="$i" exact="kCHC.$crimesByShips.keys.count">
												<set_value name="$ship" exact="kCHC.$crimesByShips.keys.{$i}" />
												<do_if value="kCHC.$crimesByShips.{$ship}.$victimFactions.indexof.{$jurisdictionFaction}">
													<run_actions ref="AddPlayerChoice_PayAShipFines">
														<param name="Faction" value="$jurisdictionFaction" />
													</run_actions>
													<break />
												</do_if>
											</do_all>
										</do_if>
										<do_else>
											<set_value name="$i" exact="0" />
											<do_for_each name="$faction_inList" in="kCHC.$factionFines">
												<set_value name="$i" exact="1" operation="add" />
												<set_value name="$isCheckThis" exact="false" />
												<set_value name="$isECMAdded" exact="false" />
												<do_if value="$faction_inList != $station.owner">
													<find_station name="$station_faction" space="player.galaxy" owner="$faction_inList" />
													<do_if value="not $station_faction">
														<do_if value="$station.owner.hasrelation.friend.{$faction_inList}">
															<set_value name="$isCheckThis" exact="true" />
														</do_if>
													</do_if>
												</do_if>
												<do_elseif value="$faction_inList == $station.owner">
													<set_value name="$isCheckThis" exact="true" />
												</do_elseif>
												<do_if value="$isCheckThis">
													<do_if value="@kCHC.$factionFines.{$faction_inList}">
														<do_if value="player.money ge kCHC.$factionFines.{$faction_inList}">
															<set_value name="$jurisdictionFaction" exact="$faction_inList" />
															<do_if value="not @md.ExtendedConversationMenu.Main.exists">
																<run_actions ref="AddPlayerChoice_PayAllFines">
																	<param name="Faction" value="$jurisdictionFaction" />
																</run_actions>
															</do_if>
															<do_elseif value="not $isECMAdded">
																<set_value name="$isECMAdded" exact="true" />
																<set_value name="md.ExtendedConversationMenu.Main.$convOptions.{'$kCHC_FinesOfficer_' + $i}" exact="table[
																	$signalCue = OnFinesOfficerStartConvo,
																	$params = table[$faction = $faction_inList]]" />
															</do_elseif>
														</do_if>
														<do_all counter="$i" exact="kCHC.$crimesByShips.keys.count">
															<set_value name="$ship" exact="kCHC.$crimesByShips.keys.{$i}" />
															<do_if value="kCHC.$crimesByShips.{$ship}.$victimFactions.indexof.{$faction_inList}">
																<set_value name="$jurisdictionFaction" exact="$faction_inList" />
																<do_if value="not @md.ExtendedConversationMenu.Main.exists">
																	<run_actions ref="AddPlayerChoice_PayAShipFines">
																		<param name="Faction" value="$jurisdictionFaction" />
																	</run_actions>
																</do_if>
																<do_elseif value="not $isECMAdded">
																	<set_value name="$isECMAdded" exact="true" />
																	<set_value name="md.ExtendedConversationMenu.Main.$convOptions.{'$kCHC_FinesOfficer_' + $i}" exact="table[
																		$signalCue = OnFinesOfficerStartConvo,
																		$params = table[$faction = $jurisdictionFaction]]" />
																</do_elseif>
																<break />
															</do_if>
														</do_all>
													</do_if>
												</do_if>
											</do_for_each>
										</do_else>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<library name="AddPlayerChoice_PayAllFines" purpose="run_actions">
									<params>
										<param name="Faction" />
									</params>
									<actions>
										<do_if value="player.container.owner != $Faction">
											<add_player_choice text="{11383, 3002}.[kCHC.$factionFines.{$Faction}.formatted.{'%s %Cr'}] + ' (' + $Faction.knownname + ')'" section="kCHC_pay_all_fines" param="table[$jurisdictionFaction = $jurisdictionFaction]" comment="Pay all my fines: %1(Cr)." />
										</do_if>
										<do_else>
											<add_player_choice text="{11383, 3002}.[kCHC.$factionFines.{$Faction}.formatted.{'%s %Cr'}]" section="kCHC_pay_all_fines" param="table[$jurisdictionFaction = $jurisdictionFaction]" comment="Pay all my fines: %1(Cr)." />
										</do_else>
									</actions>
								</library>
								<library name="AddPlayerChoice_PayAShipFines" purpose="run_actions">
									<params>
										<param name="Faction" />
									</params>
									<actions>
										<do_if value="player.container.owner != $Faction">
											<add_player_choice text="{11383, 3004} + ' (' + $Faction.knownname + ')'" section="kCHC_get_ship_fines" param="table[$Faction = $Faction]" comment="Pay a ship's fines." />
										</do_if>
										<do_else>
											<add_player_choice text="{11383, 3004}" section="kCHC_get_ship_fines" param="table[$Faction = $Faction]" comment="Pay a ship's fines." />
										</do_else>
									</actions>
								</library>
								<cue name="OnFinesOfficerNextConvoSection">
									<conditions>
										<event_conversation_next_section sectionprefix="kCHC_" />
									</conditions>
									<actions>
										<debug_text text="'event.param: ' + event.param" chance="kCHC.$debugChance" />
										<do_if value="@event.param2.$jurisdictionFaction">
											<set_value name="$jurisdictionFaction" exact="event.param2.$jurisdictionFaction" />
										</do_if>
										<set_value name="$finesPaid" exact="0" />
										<do_if value="event.param == 'kCHC_pay_all_fines'">
											<signal_cue_instantly cue="PayAllFinesActual" param="table[
												$jurisdictionFaction = $jurisdictionFaction,
											]" />
										</do_if>
										<do_elseif value="event.param == 'kCHC_get_ship_fines'">
											<open_conversation_menu menu="MapMenu" param="[0, 0, true, player.entity, null, 'selectComponent', ['kCHC_ships_selected', [class.ship]]]" />
										</do_elseif>
										<do_elseif value="event.param == 'kCHC_ships_selected'">
											<set_value name="$choiceparam" exact="event.param2" />
											<debug_text text="'$choiceparam: ' + $choiceparam" chance="kCHC.$debugChance" />
											<do_if value="typeof $choiceparam == datatype.list">
												<!-- return from open_conversation_menu menu="MapMenu" is a list -->
												<set_value name="$ships" exact="$choiceparam" />
											</do_if>
											<do_else>
												<set_value name="$ships" exact="[$choiceparam]" />
											</do_else>
											<debug_text text="'$ships: ' + $ships" chance="kCHC.$debugChance" />
											<set_value name="$shipsPayFineFor" exact="[]" />
											<set_value name="$totalFines" exact="0" />
											<do_all counter="$i" exact="$ships.count">
												<set_value name="$ship" exact="$ships.{$i}" />
												<do_if value="@kCHC.$crimesByShips.{$ship}.$finesByFaction.{$jurisdictionFaction}">
													<append_to_list name="$shipsPayFineFor" exact="$ship" />
													<set_value name="$totalFines" exact="$totalFines + kCHC.$crimesByShips.{$ship}.$finesByFaction.{$jurisdictionFaction}" />
												</do_if>
											</do_all>
											<do_if value="$totalFines">
												<do_if value="player.money ge $totalFines">
													<do_if value="$shipsPayFineFor.count == 1">
														<add_player_choice text="{11383, 3003}.[$shipsPayFineFor.{1}.knownname + ' (' + @$shipsPayFineFor.{1}.idcode +  ')', $totalFines.formatted.{'%s %Cr'}]" section="kCHC_pay_ship_fines" choiceparam="table[$shipsPayFineFor = $shipsPayFineFor, $totalFines = $totalFines]" comment="For %1(ship): %2(Cr)." />
													</do_if>
													<do_else>
														<add_player_choice text="{11383, 3008}.[$shipsPayFineFor.count, $totalFines.formatted.{'%s %Cr'}]" section="kCHC_pay_ship_fines" choiceparam="table[$shipsPayFineFor = $shipsPayFineFor, $totalFines = $totalFines]" comment="For %1(count) ships: %2(Cr)." />
													</do_else>
												</do_if>
												<do_else>
													<add_npc_line actor="$finesOfficer" page="11383" line="3011" hidechoices="true" comment="You can't afford to pay those fines." />
												</do_else>
											</do_if>
											<do_else>
												<do_if value="$ships.count == 1">
													<add_npc_line actor="$finesOfficer" page="11383" line="3009" hidechoices="true" comment="That ship has no fines" />
												</do_if>
												<do_else>
													<add_npc_line actor="$finesOfficer" page="11383" line="3010" hidechoices="true" comment="Those ships have no fines." />
												</do_else>
											</do_else>
											<remove_value name="$ships" />
											<remove_value name="$shipsPayFineFor" />
											<remove_value name="$totalFines" />
										</do_elseif>
										<do_elseif value="event.param == 'kCHC_pay_ship_fines'">
											<do_all counter="$i" exact="event.param2.$shipsPayFineFor.count">
												<set_value name="$ship" exact="event.param2.$shipsPayFineFor.{$i}" />
												<do_if value="kCHC.$crimesByShips.{$ship} and kCHC.$crimesByShips.{$ship}.$finesByFaction.{$jurisdictionFaction}">
													<set_value name="$finesPaid" exact="$finesPaid + kCHC.$crimesByShips.{$ship}.$finesByFaction.{$jurisdictionFaction}" />
													<signal_cue_instantly cue="PayShipFineActual" param="table[$ship = $ship, $faction = $jurisdictionFaction]" />
													<signal_cue_instantly cue="CleanShipOfFine" param="table[$ship = $ship, $faction = $jurisdictionFaction]" />
												</do_if>
											</do_all>
											<do_if value="not $finesPaid">
												<do_if value="event.param2.$shipsPayFineFor.count == 1">
													<add_npc_line actor="$finesOfficer" page="11383" line="3009" hidechoices="true" comment="That ship has no fines." />
												</do_if>
												<do_else>
													<add_npc_line actor="$finesOfficer" page="11383" line="3010" hidechoices="true" comment="Those ships have no fines." />
												</do_else>
											</do_if>
										</do_elseif>
										<do_if value="$finesPaid">
											<do_if value="kCHC.$factionFines.{$jurisdictionFaction} lt 1">
												<remove_value name="kCHC.$factionFines.{$jurisdictionFaction}" />
												<set_value name="$i" exact="1" />
												<do_while value="$i le kCHC.$impoundedShips.count">
													<set_value name="$impoundedShip" exact="kCHC.$impoundedShips.{1}" />
													<do_if value="kCHC.$crimesByShips.{$impoundedShip}.$impoundedByFaction == $jurisdictionFaction">
														<signal_cue_instantly cue="ReleaseShipFromImpound" param="table[$ship = $impoundedShip, $releasedByFaction = $jurisdictionFaction]" />
													</do_if>
													<do_else>
														<set_value name="$i" exact="$i + 1" />
													</do_else>
												</do_while>
												<remove_value name="$i" />
											</do_if>
										</do_if>
										<remove_value name="$finesPaid" />
										<reset_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
					</cues>
				</cue>
				<cue name="PilotCutscene" namespace="this">
					<cues>
						<cue name="PilotCutscenePlay" instantiate="true">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<set_value name="$debugChance" exact="kCHC.$debugChance" />
								<set_value name="$caption" exact="event.param.$caption" />
								<set_value name="$npc" exact="event.param.$npc" />
								<set_value name="$forcedNPCName" exact="@event.param.$forcedNPCName" />
								<set_value name="$forcedContainerName" exact="@event.param.$forcedContainerName" />
								<set_value name="$forcedNPCFaction" exact="@event.param.$forcedNPCFaction" />
								<do_if value="$forcedNPCName">
									<set_value name="$extraCaption" exact="$forcedNPCName + ' '" />
								</do_if>
								<do_else>
									<set_value name="$extraCaption" exact="$npc.knownname + ' '" />
								</do_else>
								<set_value name="$npcOwner" exact="$npc.owner" />
								<do_if value="$forcedNPCFaction">
									<set_value name="$npcOwner" exact="$forcedNPCFaction" />
								</do_if>
								<do_if value="$npcOwner == faction.player">
									<set_value name="$extraCaption" exact="$extraCaption + '(' + {11383, 2021} + ')'" />
								</do_if>
								<do_else>
									<set_value name="$extraCaption" exact="$extraCaption + '(' + $npcOwner + ')'" />
								</do_else>
								<do_if value="$forcedContainerName">
									<set_value name="$extraCaption" exact="$extraCaption + '\n'" />
									<set_value name="$extraCaption" exact="$extraCaption + $forcedContainerName" />
								</do_if>
								<do_else>
									<do_if value="$npc.container">
										<set_value name="$extraCaption" exact="$extraCaption + '\n'" />
										<do_if value="$npc.container.idcode">
											<set_value name="$extraCaption" exact="$extraCaption + $npc.container.idcode + ' '" />
										</do_if>
										<do_if value="$npc.container.isclass.ship and @$npc.container.type">
											<set_value name="$extraCaption" exact="$extraCaption + '(' + $npc.container.type + ') '" />
										</do_if>
										<set_value name="$extraCaption" exact="$extraCaption + $npc.container.knownname" />
									</do_if>
								</do_else>
								<set_value name="$extraCaption" exact="$extraCaption + ':\n'" />
								<set_value name="$caption" exact="$extraCaption + $caption" />
								<debug_text text="'$caption: ' + $caption" chance="$debugChance" />
								<remove_value name="$forcedNPCName" />
								<remove_value name="$forcedContainerName" />
								<remove_value name="$forcedNPCFaction" />
								<remove_value name="$extraCaption" />
								<remove_value name="$npcOwner" />
								<set_value name="$page" exact="@event.param.$page" />
								<set_value name="$line" exact="@event.param.$line" />
								<set_value name="$isSpeak" exact="@event.param.$isSpeak" />
								<set_value name="$fromCue" exact="@event.param.$cue" />
								<set_value name="$callback" exact="@event.param.$callback" />
								<set_value name="$callbackParam" exact="@event.param.$callbackParam" />
								<set_value name="$interactionText" exact="@event.param.$interactionText" />
								<set_value name="$interactionParam" exact="@event.param.$interactionParam" />
								<set_value name="$interactionParam2" exact="@event.param.$interactionParam2" />
								<!-- <do_if value="@$cutscene">
									<stop_cutscene cutscene="$cutscene" />
								</do_if> -->
								<!-- if this.room.iswalkable then 'ShowNPCFace' else 'ShowPilot' -->
								<stop_cutscene key="'ShowPilot'" />
								<stop_cutscene key="'ShowNPCFace'" />
								<stop_cutscene key="'ShowNPCFaceArgon'" />
								<stop_cutscene key="'ShowNPCFaceBoron'" />
								<stop_cutscene key="'ShowNPCFaceParanid'" />
								<stop_cutscene key="'ShowNPCFaceSplit'" />
								<stop_cutscene key="'ShowNPCFaceTeladi'" />
							</actions>
							<cues>
								<cue name="PilotCutscenePlayActualSignal">
									<delay exact="1s" />
									<actions>
										<debug_text text="'$cutscene: ' + @$cutscene + ' PilotCutscenePlayActual.state: ' + PilotCutscenePlayActual.state" chance="$debugChance" />
										<do_if value="not @$cutscene and PilotCutscenePlayActual.state == cuestate.waiting">
											<signal_cue_instantly cue="PilotCutscenePlayActual" param="table[
												$npc = $npc,
												$caption = $caption,
												$page = $page,
												$line = $line,
												$isSpeak = $isSpeak,
												$fromCue = $fromCue,
												$callback = $callback,
												$callbackParam = $callbackParam,
												$interactionText = $interactionText,
												$interactionParam = $interactionParam,
												$interactionParam2 = $interactionParam2
											]" />
										</do_if>
										<remove_value name="$npc" />
										<remove_value name="$caption" />
										<remove_value name="$page" />
										<remove_value name="$line" />
										<remove_value name="$isSpeak" />
										<remove_value name="$fromCue" />
										<remove_value name="$callback" />
										<remove_value name="$callbackParam" />
										<remove_value name="$interactionText" />
										<remove_value name="$interactionParam" />
										<remove_value name="$interactionParam2" />
										<cancel_cue cue="parent" />
										<cancel_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
						<cue name="PilotCutscenePlayActual" namespace="this">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<set_value name="$caption" exact="event.param.$caption" />
								<set_value name="$npc" exact="event.param.$npc" />
								<set_value name="$page" exact="event.param.$page" />
								<set_value name="$line" exact="event.param.$line" />
								<set_value name="$isSpeak" exact="event.param.$isSpeak" />
								<set_value name="$fromCue" exact="@event.param.$fromCue" />
								<set_value name="$callback" exact="@event.param.$callback" />
								<set_value name="$callbackParam" exact="@event.param.$callbackParam" />
								<set_value name="$interactionText" exact="@event.param.$interactionText" />
								<set_value name="$interactionParam" exact="@event.param.$interactionParam" />
								<set_value name="$interactionParam2" exact="@event.param.$interactionParam2" />
								<do_if value="not $interactionText">
									<set_value name="$interactionText" exact="''" />
								</do_if>
								<set_value name="$cutsceneKey" exact="if $npc.room.iswalkable then (
									if @$npc.race.facecutscene then $npc.race.facecutscene else 'ShowNPCFace'
								) else 'ShowPilot'" />
								<do_if value="$interactionParam">
									<play_cutscene result="$cutscene" key="$cutsceneKey" targetmonitor="true" timeout="10s + 100ms"
										caption="$caption"
										sound="notification_conversationstart">
										<interaction text="$interactionText" param="$interactionParam" param2="$interactionParam2" />
										<param name="npcref" object="$npc" />
									</play_cutscene>
								</do_if>
								<do_else>
									<play_cutscene result="$cutscene" key="$cutsceneKey" targetmonitor="true" timeout="10s + 100ms"
										caption="$caption"
										sound="notification_conversationstart">
										<param name="npcref" object="$npc" />
									</play_cutscene>
								</do_else>
								<do_if value="$fromCue">
									<set_value name="$fromCue.$cutscene" exact="$cutscene" />
								</do_if>
								<debug_text text="'$cutscene: ' + $cutscene" chance="namespace.parent.$debugChance" />
								<do_if value="$isSpeak">
									<speak actor="$npc" page="$page" line="$line" />
								</do_if>
								<remove_value name="$npc" />
								<remove_value name="$caption" />
								<remove_value name="$page" />
								<remove_value name="$line" />
								<remove_value name="$isSpeak" />
								<remove_value name="$fromCue" />
							</actions>
							<cues>
								<cue name="PilotCutsceneStop">
									<conditions>
										<check_any>
											<event_cutscene_stopped key="$cutsceneKey" />
										</check_any>
									</conditions>
									<actions>
										<debug_text text="'$cutscene: ' + $cutscene" chance="namespace.parent.$debugChance" />
										<set_value name="$cutscene" exact="null" />
										<debug_text text="'$cutscene: ' + $cutscene" chance="namespace.parent.$debugChance" />
										<do_if value="$callback">
											<signal_cue_instantly cue="$callback" param="$callbackParam" />
											<set_value name="$callback" exact="null" />
										</do_if>
										<reset_cue cue="parent" />
										<reset_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
					</cues>
				</cue>
				<cue name="MapMenuUI" namespace="this">
					<cues>
						<library name="PopulateUICrimeData">
							<actions>
								<set_value name="$uiCrimeData" exact="table[]" />
								<set_value name="$uiCrimeData.$crimeText" exact="@kCHC.$uiCrimeTexts.{$crime}" />
								<set_value name="$uiCrimeData.$time" exact="$startTime" />
								<set_value name="$uiCrimeData.$timeText" exact="@$startTime.formatted.default" />
								<set_value name="$uiCrimeData.$victimId" exact="$victimShipStation" />
								<set_value name="$uiCrimeData.$victimText" exact="$victimName" />
								<set_value name="$uiCrimeData.$finesText" exact="@$fines.formatted.{'%s %Cr'}" />
								<set_value name="$uiCrimeData.$isSelfDefense" exact="if $isSelfDefense then 1 else 0" />
								<do_if value="$kCHC_isSanctioned?">
									<set_value name="$uiCrimeData.$kCHC_isSanctioned" exact="if $kCHC_isSanctioned then 1 else 0" />
								</do_if>
								<set_value name="$uiCrimeData.$isCommanderCrime" exact="if $isCommanderCrime then 1 else 0" />
								<set_value name="$uiCrimeData.$playerCrimeId" exact="$playerCrimeId" />
							</actions>
						</library>
						<cue name="OnMapMenu">
							<conditions>
								<check_any>
									<event_cue_signalled />
									<event_ui_triggered screen="'MapMenu'" />
								</check_any>
							</conditions>
							<actions>
								<set_value name="$isUpdateInfoFrame" exact="@event.param.$isUpdateInfoFrame" />
								<!-- if isUpdateInfoFrame is false, then raise_lua_event MapMenuOpen -->
								<do_if value="player.isinfullscreenmenu">
									<!-- opened -->
									<set_value name="$uiFinesByFactionsData" exact="table[]" />
									<do_all counter="$i" exact="kCHC.$factionFines.keys.count">
										<set_value name="$victimFaction" exact="kCHC.$factionFines.keys.{$i}" />
										<do_if value="@kCHC.$factionFines.{$victimFaction}">
											<set_value name="$uiFinesByFactionsData.{$victimFaction}" exact="table[
												$uiFactionText = $victimFaction.knownname,
												$uiFinesText = kCHC.$factionFines.{$victimFaction}.formatted.{'%s %Cr'},
												$uiFines = kCHC.$factionFines.{$victimFaction}
											]" />
										</do_if>
									</do_all>
									<set_value name="player.entity.$uiFinesByFactionsData" exact="$uiFinesByFactionsData" />
									<set_value name="$uiCriminalShipsByFactionsData" exact="table[]" />
									<set_value name="$crimesByShipByFaction" exact="table[]" />
									<set_value name="$ship" exact="player.entity" />
									<set_value name="$shipName" exact="player.name" />
									<do_all counter="$j" exact="@kCHC.$crimesBySpacesuit.$crimes.count">
										<set_value name="$crime" exact="kCHC.$crimesBySpacesuit.$crimes.{$j}" />
										<set_value name="$startTime" exact="kCHC.$crimesBySpacesuit.$startTimes.{$j}" />
										<set_value name="$victimShipStation_orig" exact="kCHC.$crimesBySpacesuit.$victimShipsStations_orig.{$j}" />
										<set_value name="$victimShipStation" exact="kCHC.$crimesBySpacesuit.$victimShipsStations.{$j}" />
										<set_value name="$victimName" exact="kCHC.$crimesBySpacesuit.$victimNames.{$j}" />
										<set_value name="$victimFaction" exact="kCHC.$crimesBySpacesuit.$victimFactions.{$j}" />
										<set_value name="$fines" exact="kCHC.$crimesBySpacesuit.$fines.{$j}" />
										<set_value name="$isSelfDefense" exact="kCHC.$crimesBySpacesuit.$isSelfDefense.{$j}" />
										<set_value name="$kCHC_isSanctioned" exact="@kCHC.$crimesBySpacesuit.$kCHC_isSanctioned.{$j}" />
										<set_value name="$isCommanderCrime" exact="kCHC.$crimesBySpacesuit.$isCommanderCrime.{$j}" />
										<set_value name="$playerCrimeId" exact="kCHC.$crimesBySpacesuit.$playerCrimeIds.{$j}" />
										<include_actions ref="PopulateUICrimeData" />
										<do_if value="not @$crimesByShipByFaction.{$ship}">
											<set_value name="$crimesByShipByFaction.{$ship}" exact="table[]" />
										</do_if>
										<do_if value="not @$crimesByShipByFaction.{$ship}.{$victimFaction}">
											<set_value name="$crimesByShipByFaction.{$ship}.{$victimFaction}" exact="[]" />
										</do_if>
										<append_to_list name="$crimesByShipByFaction.{$ship}.{$victimFaction}" exact="$uiCrimeData" />
									</do_all>
									<do_all counter="$j" exact="@kCHC.$crimesBySpacesuit.$crimeCountsByFaction.keys.count">
										<set_value name="$victimFaction" exact="kCHC.$crimesBySpacesuit.$crimeCountsByFaction.keys.{$j}" />
										<do_if value="@$crimesByShipByFaction.{$ship}.{$victimFaction}">
											<set_value name="$uiCrimesData" exact="$crimesByShipByFaction.{$ship}.{$victimFaction}" />
										</do_if>
										<do_else>
											<set_value name="$uiCrimesData" exact="table[]" />
										</do_else>
										<set_value name="$uiFines" exact="0" />
										<set_value name="$uiFinesText" exact="''" />
										<do_if value="@kCHC.$crimesBySpacesuit.$finesByFaction.{$victimFaction}">
											<set_value name="$uiFines" exact="kCHC.$crimesBySpacesuit.$finesByFaction.{$victimFaction}" />
											<set_value name="$uiFinesText" exact="kCHC.$crimesBySpacesuit.$finesByFaction.{$victimFaction}.formatted.{'%s %Cr'}" />
										</do_if>
										<set_value name="$uiImpoundedText" exact="''" />
										<set_value name="$uiImpoundedTime" exact="0" />
										<set_value name="$uiImpoundedTimeText" exact="''" />
										<do_if value="not @$uiCriminalShipsByFactionsData.{$victimFaction}">
											<set_value name="$uiCriminalShipsByFactionsData.{$victimFaction}" exact="[]" />
										</do_if>
										<do_if value="$uiFines or $uiImpoundedTime">
											<append_to_list name="$uiCriminalShipsByFactionsData.{$victimFaction}" exact="table[
												$ship = $ship,
												$shipName = $shipName,
												$uiCrimesData = $uiCrimesData,
												$uiFines = $uiFines,
												$uiFinesText = $uiFinesText,
												$uiImpoundedText = $uiImpoundedText,
												$uiImpoundedTime = $uiImpoundedTime,
												$uiImpoundedTimeText = $uiImpoundedTimeText,
												$uiCrimeAttacksCount = @kCHC.$crimesBySpacesuit.$crimeCountsByFaction.{$victimFaction}.{relationchangereason.attackedobject},
												$uiCrimeKillsCount = @kCHC.$crimesBySpacesuit.$crimeCountsByFaction.{$victimFaction}.{relationchangereason.killedobject},
												$uiCrimeBoardingsCount = @kCHC.$crimesBySpacesuit.$crimeCountsByFaction.{$victimFaction}.{relationchangereason.boardedobject},
												$uiCrimeIllegalScansCount = @kCHC.$crimesBySpacesuit.$crimeCountsByFaction.{$victimFaction}.{relationchangereason.scanningdiscovered},
												$uiCrimeIllegalCargoCount = @kCHC.$crimesBySpacesuit.$crimeCountsByFaction.{$victimFaction}.{relationchangereason.illegalcargo},
												$uiCrimeIllegalPlotsCount = @kCHC.$crimesBySpacesuit.$crimeCountsByFaction.{$victimFaction}.{relationchangereason.illegalplot}
											]" />
										</do_if>
									</do_all>
									<do_all counter="$i" exact="kCHC.$crimesByShips.keys.count" reverse="true">
										<set_value name="$ship" exact="kCHC.$crimesByShips.keys.{$i}" />
										<do_if value="not $ship.exists">
											<remove_value name="kCHC.$crimesByShips.{$ship}" />
										</do_if>
									</do_all>
									<do_all counter="$i" exact="kCHC.$crimesByShips.keys.count">
										<set_value name="$ship" exact="kCHC.$crimesByShips.keys.{$i}" />
										<run_actions ref="GetObjectName" result="$shipName">
											<param name="Object" value="$ship" />
										</run_actions>
										<!-- <debug_text text="$shipName" chance="kCHC.$debugChance" /> -->
										<do_all counter="$j" exact="@kCHC.$crimesByShips.{$ship}.$crimes.count">
											<set_value name="$crime" exact="kCHC.$crimesByShips.{$ship}.$crimes.{$j}" />
											<set_value name="$startTime" exact="kCHC.$crimesByShips.{$ship}.$startTimes.{$j}" />
											<set_value name="$victimShipStation_orig" exact="kCHC.$crimesByShips.{$ship}.$victimShipsStations_orig.{$j}" />
											<set_value name="$victimShipStation" exact="kCHC.$crimesByShips.{$ship}.$victimShipsStations.{$j}" />
											<set_value name="$victimName" exact="kCHC.$crimesByShips.{$ship}.$victimNames.{$j}" />
											<set_value name="$victimFaction" exact="kCHC.$crimesByShips.{$ship}.$victimFactions.{$j}" />
											<set_value name="$fines" exact="kCHC.$crimesByShips.{$ship}.$fines.{$j}" />
											<set_value name="$isSelfDefense" exact="kCHC.$crimesByShips.{$ship}.$isSelfDefense.{$j}" />
											<set_value name="$kCHC_isSanctioned" exact="@kCHC.$crimesByShips.{$ship}.$kCHC_isSanctioned.{$j}" />
											<set_value name="$isCommanderCrime" exact="kCHC.$crimesByShips.{$ship}.$isCommanderCrime.{$j}" />
											<set_value name="$playerCrimeId" exact="kCHC.$crimesByShips.{$ship}.$playerCrimeIds.{$j}" />
											<include_actions ref="PopulateUICrimeData" />
											<do_if value="not @$crimesByShipByFaction.{$ship}">
												<set_value name="$crimesByShipByFaction.{$ship}" exact="table[]" />
											</do_if>
											<do_if value="not @$crimesByShipByFaction.{$ship}.{$victimFaction}">
												<set_value name="$crimesByShipByFaction.{$ship}.{$victimFaction}" exact="[]" />
											</do_if>
											<append_to_list name="$crimesByShipByFaction.{$ship}.{$victimFaction}" exact="$uiCrimeData" />
										</do_all>
										<do_if value="@kCHC.$crimesByShips.{$ship}.$crimes.count">
											<do_all counter="$j" exact="@kCHC.$crimesByShips.{$ship}.$crimeCountsByFaction.keys.count">
												<set_value name="$victimFaction" exact="kCHC.$crimesByShips.{$ship}.$crimeCountsByFaction.keys.{$j}" />
												<do_if value="@$crimesByShipByFaction.{$ship}.{$victimFaction}">
													<set_value name="$uiCrimesData" exact="$crimesByShipByFaction.{$ship}.{$victimFaction}" />
												</do_if>
												<do_else>
													<set_value name="$uiCrimesData" exact="table[]" />
												</do_else>
												<set_value name="$uiFines" exact="0" />
												<set_value name="$uiFinesText" exact="''" />
												<do_if value="@kCHC.$crimesByShips.{$ship}.$finesByFaction.{$victimFaction}">
													<set_value name="$uiFines" exact="kCHC.$crimesByShips.{$ship}.$finesByFaction.{$victimFaction}" />
													<set_value name="$uiFinesText" exact="kCHC.$crimesByShips.{$ship}.$finesByFaction.{$victimFaction}.formatted.{'%s %Cr'}" />
												</do_if>
												<set_value name="$uiImpoundedText" exact="''" />
												<set_value name="$uiImpoundedTime" exact="0" />
												<set_value name="$uiImpoundedTimeText" exact="''" />
												<do_if value="@kCHC.$crimesByShips.{$ship}.$impoundedByFaction == $victimFaction">
													<set_value name="$uiImpoundedTime" exact="kCHC.$crimesByShips.{$ship}.$impoundedTime" />
													<set_value name="$uiImpoundedTimeText" exact="kCHC.$crimesByShips.{$ship}.$impoundedTime.formatted.default" />
													<do_if value="$ship.container">
														<run_actions ref="GetObjectName" result="$uiImpoundedText">
															<param name="Object" value="$ship.container" />
														</run_actions>
														<set_value name="$uiImpoundedText" exact="$uiImpoundedText + ', ' + $ship.container.sector.knownname" />
													</do_if>
													<do_elseif value="$ship.sector">
														<set_value name="$uiImpoundedText" exact="$ship.sector.knownname" />
													</do_elseif>
													<do_else>
														<set_value name="$uiImpoundedText" exact="{11383, 1007}" comment="Unknown location" />
													</do_else>
												</do_if>
												<do_if value="not @$uiCriminalShipsByFactionsData.{$victimFaction}">
													<set_value name="$uiCriminalShipsByFactionsData.{$victimFaction}" exact="[]" />
												</do_if>
												<do_if value="$uiFines or $uiImpoundedTime">
													<!-- <debug_text text="$ship + ' (' + $ship.knownname + ', ' + $ship.idcode + ', ' + $ship.owner + ')'" chance="kCHC.$debugChance" /> -->
													<append_to_list name="$uiCriminalShipsByFactionsData.{$victimFaction}" exact="table[
														$ship = $ship,
														$shipName = $shipName,
														$uiCrimesData = $uiCrimesData,
														$uiFines = $uiFines,
														$uiFinesText = $uiFinesText,
														$uiImpoundedText = $uiImpoundedText,
														$uiImpoundedTime = $uiImpoundedTime,
														$uiImpoundedTimeText = $uiImpoundedTimeText,
														$uiCrimeAttacksCount = @kCHC.$crimesByShips.{$ship}.$crimeCountsByFaction.{$victimFaction}.{relationchangereason.attackedobject},
														$uiCrimeKillsCount = @kCHC.$crimesByShips.{$ship}.$crimeCountsByFaction.{$victimFaction}.{relationchangereason.killedobject},
														$uiCrimeBoardingsCount = @kCHC.$crimesByShips.{$ship}.$crimeCountsByFaction.{$victimFaction}.{relationchangereason.boardedobject},
														$uiCrimeIllegalScansCount = @kCHC.$crimesByShips.{$ship}.$crimeCountsByFaction.{$victimFaction}.{relationchangereason.scanningdiscovered},
														$uiCrimeIllegalCargoCount = @kCHC.$crimesByShips.{$ship}.$crimeCountsByFaction.{$victimFaction}.{relationchangereason.illegalcargo},
														$uiCrimeIllegalPlotsCount = @kCHC.$crimesByShips.{$ship}.$crimeCountsByFaction.{$victimFaction}.{relationchangereason.illegalplot}
													]" />
												</do_if>
											</do_all>
										</do_if>
										<do_elseif value="@kCHC.$crimesByShips.{$ship}.$impoundedByFaction">
											<set_value name="$victimFaction" exact="kCHC.$crimesByShips.{$ship}.$impoundedByFaction" />
											<set_value name="$uiCrimesData" exact="table[]" />
											<set_value name="$uiFines" exact="0" />
											<set_value name="$uiFinesText" exact="''" />
											<set_value name="$uiImpoundedTime" exact="kCHC.$crimesByShips.{$ship}.$impoundedTime" />
											<set_value name="$uiImpoundedTimeText" exact="kCHC.$crimesByShips.{$ship}.$impoundedTime.formatted.default" />
											<do_if value="$ship.container">
												<run_actions ref="GetObjectName" result="$uiImpoundedText">
													<param name="Object" value="$ship.container" />
												</run_actions>
												<set_value name="$uiImpoundedText" exact="$uiImpoundedText+ ', ' + $ship.container.sector.knownname" />
											</do_if>
											<do_elseif value="$ship.sector">
												<set_value name="$uiImpoundedText" exact="$ship.sector.knownname" />
											</do_elseif>
											<do_else>
												<set_value name="$uiImpoundedText" exact="{11383, 1007}" comment="Unknown location" />
											</do_else>
											<do_if value="not @$uiCriminalShipsByFactionsData.{$victimFaction}">
												<set_value name="$uiCriminalShipsByFactionsData.{$victimFaction}" exact="[]" />
											</do_if>
											<do_if value="$uiFines or $uiImpoundedTime">
												<!-- <debug_text text="$ship + ' (' + $ship.knownname + ', ' + $ship.idcode + ', ' + $ship.owner + ')'" chance="kCHC.$debugChance" /> -->
												<append_to_list name="$uiCriminalShipsByFactionsData.{$victimFaction}" exact="table[
													$ship = $ship,
													$shipName = $shipName,
													$uiCrimesData = $uiCrimesData,
													$uiFines = $uiFines,
													$uiFinesText = $uiFinesText,
													$uiImpoundedText = $uiImpoundedText,
													$uiImpoundedTime = $uiImpoundedTime,
													$uiImpoundedTimeText = $uiImpoundedTimeText,
													$uiCrimeAttacksCount = null,
													$uiCrimeKillsCount = null,
													$uiCrimeBoardingsCount = null,
													$uiCrimeIllegalScansCount = null,
													$uiCrimeIllegalCargoCount = null,
													$uiCrimeIllegalPlotsCount = null
												]" />
											</do_if>
										</do_elseif>
									</do_all>
									<remove_value name="$ship" />
									<set_value name="player.entity.$uiCriminalShipsByFactionsData" exact="$uiCriminalShipsByFactionsData" />
									<do_if value="$isUpdateInfoFrame">
										<!-- <debug_text text="'raise_lua_event kCHC.OnMapMenuUpdate'" chance="kCHC.$debugChance" /> -->
										<raise_lua_event name="'kCHC.OnMapMenuUpdate'" />
									</do_if>
									<do_else>
										<!-- <debug_text text="'raise_lua_event kCHC.OnMapMenuOpen'" chance="kCHC.$debugChance" /> -->
										<raise_lua_event name="'kCHC.OnMapMenuOpen'" />
									</do_else>
								</do_if>
								<do_else>
									<!-- closed -->
									<set_value name="player.entity.$uiFinesByFactionsData" exact="null" />
									<set_value name="player.entity.$uiCriminalShipsByFactionsData" exact="null" />
									<!-- <debug_text text="'raise_lua_event kCHC.OnMapMenuClose'" chance="kCHC.$debugChance" /> -->
									<raise_lua_event name="'kCHC.OnMapMenuClose'" />
								</do_else>
								<reset_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<library name="RemoveFactionCrimes" purpose="run_actions">
					<params>
						<param name="Faction" />
					</params>
					<actions>
						<remove_value name="kCHC.$factionFines.{$Faction}" />
						<do_all counter="$i" exact="kCHC.$crimesByShips.keys.count">
							<set_value name="$ship" exact="kCHC.$crimesByShips.keys.{$i}" />
							<set_value name="$crimesByShipData" exact="kCHC.$crimesByShips.{$ship}" />
							<debug_text text="'$ship: ' + $ship + ' (' + @$ship.knownname + ') $crimesByShipData.$victimFactions: ' + $crimesByShipData.$victimFactions" chance="kCHC.$debugChance" />
							<do_all counter="$j" exact="$crimesByShipData.$victimFactions.count" reverse="true">
								<set_value name="$victimFaction" exact="$crimesByShipData.$victimFactions.{$j}" />
								<do_if value="$victimFaction == $Faction">
									<debug_text text="'$victimFaction: ' + $victimFaction" chance="kCHC.$debugChance" />
									<set_value name="$crimesByShipData.$totalFines" exact="$crimesByShipData.$totalFines - $crimesByShipData.$fines.{$j}" />
									<do_if value="$crimesByShipData.$totalFines lt 0">
										<set_value name="$crimesByShipData.$totalFines" exact="0" />
									</do_if>
									<remove_value name="$crimesByShipData.$crimes.{$j}" />
									<remove_value name="$crimesByShipData.$times.{$j}" />
									<remove_value name="$crimesByShipData.$startTimes.{$j}" />
									<remove_value name="$crimesByShipData.$victimShipsStations_orig.{$j}" />
									<remove_value name="$crimesByShipData.$victimShipsStations.{$j}" />
									<remove_value name="$crimesByShipData.$victimNames.{$j}" />
									<remove_value name="$crimesByShipData.$victimFactions.{$j}" />
									<remove_value name="$crimesByShipData.$fines.{$j}" />
									<remove_value name="$crimesByShipData.$isSelfDefense.{$j}" />
									<do_if value="$crimesByShipData.$kCHC_isSanctioned?">
										<remove_value name="$crimesByShipData.$kCHC_isSanctioned.{$j}" />
									</do_if>
									<remove_value name="$crimesByShipData.$isCommanderCrime.{$j}" />
									<remove_value name="$crimesByShipData.$playerCrimeIds.{$j}" />
									<remove_value name="$crimesByShipData.$crimeCountsByFaction.{$victimFaction}" />
									<remove_value name="$crimesByShipData.$finesByFaction.{$victimFaction}" />
								</do_if>
							</do_all>
						</do_all>
					</actions>
				</library>
				<cue name="FindPirateFactions" namespace="this">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="kCHC.$pirateFactions" exact="[]" />
						<set_value name="$oldRelationsByFaction" exact="table[]" />
						<set_faction_relation_locked faction="faction.kuertee_chc_faf" locked="false" />
						<do_all counter="$i" exact="kCHC.$validFactions.count">
							<set_value name="$faction" exact="kCHC.$validFactions.{$i}" />
							<set_value name="$oldRelationsByFaction.{$faction}" exact="$faction.relationto.{faction.kuertee_chc_faf}" />
							<add_faction_relation faction="$faction" otherfaction="faction.kuertee_chc_faf" value="0.001" reason="relationchangereason.smalltalkreward" />
							<!-- <set_faction_relation faction="$faction" otherfaction="faction.kuertee_chc_faf" value="0." /> -->
							<set_value name="$newRelation" exact="$faction.relationto.{faction.kuertee_chc_faf}" />
							<debug_text text="'$faction: ' + $faction + ' (old: ' + $oldRelationsByFaction.{$faction} + ', new: ' + $newRelation + ')'" chance="kCHC.$debugChance" />
							<do_if value="$oldRelationsByFaction.{$faction} == $newRelation">
								<debug_text text="'relationto.{faction.player}: ' + $faction.relationto.{faction.player} + ' neutral.max: ' + $faction.relation.neutral.max" chance="kCHC.$debugChance" />
								<do_if value="$faction.relationto.{faction.player} lt $faction.relation.neutral.max">
									<append_to_list name="kCHC.$pirateFactions" exact="$faction" />
								</do_if>
							</do_if>
							<set_faction_relation faction="$faction" otherfaction="faction.kuertee_chc_faf" value="$oldRelationsByFaction.{$faction}" />
							<debug_text text="'$faction: ' + $faction + ' (restored: ' + $faction.relationto.{faction.kuertee_chc_faf} + ')'" chance="kCHC.$debugChance" />
						</do_all>
						<set_faction_relation_locked faction="faction.kuertee_chc_faf" locked="true" />
						<reset_cue cue="this" />
					</actions>
				</cue>
				<library name="AddPlayerCriminalRecord" purpose="run_actions">
					<params>
						<param name="Time" />
						<param name="CriminalShip" />
						<param name="Crime" />
						<param name="VictimShipStation_orig" />
						<param name="VictimShipStation" />
						<param name="VictimFaction" />
						<param name="Fines" />
					</params>
					<actions>
						<set_value name="$playerCriminalRecord" exact="md.kuertee_chc.kCHC.$playerCriminalRecord" />
						<run_actions ref="GetObjectName" result="$shipName">
							<param name="Object" value="$CriminalShip" />
						</run_actions>
						<run_actions ref="GetObjectName" result="$victimName">
							<param name="Object" value="$VictimShipStation" />
						</run_actions>
						<debug_text text="'$Time: ' + $Time + ' $shipName: ' + $shipName + ' $Crime: ' + $Crime + ' $victimName: ' + $victimName + ' $VictimFaction: ' + $VictimFaction + ' $Fines: ' + $Fines" chance="md.kuertee_chc.kCHC.$debugChance" />
						<append_to_list name="$playerCriminalRecord" exact="table[
							$time = $Time,
							$shipName = $shipName,
							$crime = $Crime,
							$victimShip = $VictimShipStation_orig,
							$victimShip = $VictimShipStation,
							$victimName = $victimName,
							$victimFaction = $VictimFaction,
							$fines = $Fines,
							$isPaid = false
						]" />
						<set_value name="$id" exact="$playerCriminalRecord.count" />
						<return value="$id" />
					</actions>
				</library>
				<library name="SetPlayerCriminalRecordToPaid" purpose="run_actions">
					<params>
						<param name="Faction" default="null" />
						<param name="CriminalShip" default="null" />
						<param name="Crime" default="null" />
						<param name="Fines" default="null" />
					</params>
					<actions>
						<set_value name="$playerCriminalRecord" exact="md.kuertee_chc.kCHC.$playerCriminalRecord" />
						<set_value name="$shipName_test_1" exact="@$CriminalShip.knownname + ' (' + @$CriminalShip.idcode + ')'" />
						<set_value name="$shipName_test_2" exact="@$CriminalShip.macro.name" />
						<!-- <debug_text text="'$shipName_test_1: ' + $shipName_test_1" chance="md.kuertee_chc.kCHC.$debugChance" />
						<debug_text text="'$shipName_test_2: ' + $shipName_test_2" chance="md.kuertee_chc.kCHC.$debugChance" /> -->
						<do_for_each name="$crimeData" in="$playerCriminalRecord">
							<!-- <do_if value="$crimeData.$victimFaction == $Faction">
								<set_value name="$crimeData.$isPaid" exact="true" />
							</do_if> -->
							<debug_text text="'$crimeData: ' + $crimeData" chance="md.kuertee_chc.kCHC.$debugChance" />
							<set_value name="$isThisFine" exact="false" />
							<do_if value="$crimeData.$victimFaction == $Faction and (not $CriminalShip) and (not $Crime) and (not $Fines)">
								<set_value name="$isThisFine" exact="true" />
							</do_if>
							<do_else>
								<set_value name="$test" exact="0" />
								<set_value name="$max" exact="0" />
								<do_if value="$Faction">
									<set_value name="$max" exact="$max + 1" />
									<debug_text text="'    $crimeData.$victimFaction: ' + $crimeData.$victimFaction + ' $Faction: ' + $Faction" chance="md.kuertee_chc.kCHC.$debugChance" />
									<do_if value="$crimeData.$victimFaction == $Faction">
										<set_value name="$test" exact="$test + 1" />
									</do_if>
								</do_if>
								<do_if value="$CriminalShip">
									<set_value name="$max" exact="$max + 1" />
									<debug_text text="'    $crimeData.$shipName: ' + $crimeData.$shipName + ' $shipName_test_1: ' + $shipName_test_1 + ' $shipName_test_2: ' + $shipName_test_2" chance="md.kuertee_chc.kCHC.$debugChance" />
									<do_if value="$crimeData.$shipName == $shipName_test_1 or $crimeData.$shipName == $shipName_test_2">
										<set_value name="$test" exact="$test + 1" />
									</do_if>
									<do_else>
										<substitute_text text="$shipName_postSubstitute" source="$crimeData.$shipName">
											<replace string="'(' + @$CriminalShip.idcode + ')'" with="'IDCODEFOUND'" />
										</substitute_text>
										<do_if value="$shipName_postSubstitute != $crimeData.$shipName">
											<set_value name="$test" exact="$test + 1" />
										</do_if>
									</do_else>
								</do_if>
								<do_if value="$Crime">
									<set_value name="$max" exact="$max + 1" />
									<debug_text text="'    $crimeData.$crime: ' + $crimeData.$crime + ' $Crime: ' + $Crime" chance="md.kuertee_chc.kCHC.$debugChance" />
									<do_if value="$crimeData.$crime == $Crime">
										<set_value name="$test" exact="$test + 1" />
									</do_if>
								</do_if>
								<do_if value="$Fines">
									<set_value name="$max" exact="$max + 1" />
									<debug_text text="'    $crimeData.$fines: ' + $finesData.$crime + ' $Fines: ' + $Fines" chance="md.kuertee_chc.kCHC.$debugChance" />
									<do_if value="$crimeData.$fines == $Fines">
										<set_value name="$test" exact="$test + 1" />
									</do_if>
								</do_if>
								<debug_text text="'    $test: ' + $test + ' $max: ' + $max" chance="md.kuertee_chc.kCHC.$debugChance" />
								<set_value name="$isThisFine" exact="$test == $max" />
							</do_else>
							<do_if value="$isThisFine">
								<set_value name="$crimeData.$isPaid" exact="true" />
							</do_if>
							<debug_text text="'    $crimeData.$isPaid: ' + $crimeData.$isPaid" chance="md.kuertee_chc.kCHC.$debugChance" />
						</do_for_each>
					</actions>
				</library>
				<library name="GetPlayerCriminalRecord" purpose="run_actions">
					<params>
						<param name="Faction" />
					</params>
					<actions>
						<set_value name="$crimes" exact="[]" />
						<set_value name="$playerCriminalRecord" exact="md.kuertee_chc.kCHC.$playerCriminalRecord" />
						<do_for_each name="$crimeData" in="$playerCriminalRecord">
							<do_if value="$crimeData.$victimFaction == $Faction">
								<append_to_list name="$crimes" exact="$crimeData" />
							</do_if>
						</do_for_each>
						<return value="$crimes" />
					</actions>
				</library>
				<cue name="PlayerInfoMenu">
					<conditions>
						<event_ui_triggered screen="'PlayerInfoMenu'" />
						<check_value value="event.param2 == 'factions'" />
					</conditions>
					<actions>
						<set_value name="$uiMenuParams" exact="event.param3" />
						<set_value name="player.entity.$ui_kCHC_playerCrimesData" exact="table[
							$uiCrimeTexts = kCHC.$uiCrimeTexts,
							$playerCriminalRecord = kCHC.$playerCriminalRecord
						]" />
						<debug_text text="'$ui_kCHC_playerCrimesData: ' + @player.entity.$ui_kCHC_playerCrimesData" chance="md.kuertee_chc.kCHC.$debugChance" />
					</actions>
					<cues>
						<cue name="PlayerInfoMenu_Close">
							<conditions>
								<event_ui_triggered screen="'PlayerInfoMenu'" />
								<check_value value="event.param2 != 'factions'" />
							</conditions>
							<actions>
								<debug_text text="event.name" chance="kCHC.$debugChance" />
								<set_value name="player.entity.$ui_kCHC_playerCrimesData" exact="null" />
								<raise_lua_event name="'kCHC.playerInfoMenu.onClearUIData'" />
								<reset_cue cue="PlayerInfoMenu" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="BribeManager" namespace="this">
					<actions>
						<set_value name="$bribe" exact="0" />
						<set_value name="$ships_impounded" exact="[]" />
						<set_value name="$faction" exact="[]" />
					</actions>
					<cues>
						<cue name="BribeManager_ConvoStart">
							<conditions>
								<check_any>
									<event_cue_signalled />
									<check_all>
										<event_conversation_started conversation="default" />
										<check_value value="event.object == @player.container.tradenpc" />
									</check_all>
								</check_any>
							</conditions>
							<actions>
								<debug_text text="'event.name: ' + event.name" chance="kCHC.$debugChance" />
								<set_value name="$bribe" exact="0" />
								<set_value name="$ships_impounded" exact="[]" />
								<set_value name="$faction" exact="player.container.owner" />
								<set_value name="$playerChoices" exact="[]" />
								<do_for_each name="$ship_inList" in="kCHC.$impoundedShips">
									<do_if value="$ship_inList.station == @player.container">
										<debug_text text="'$ship_inList: ' + $ship_inList + ' (' + $ship_inList.knownname + ', ' + $ship_inList.idcode + ')'" chance="kCHC.$debugChance" />
										<do_if value="kCHC.$crimesByShips.{$ship_inList}.$impoundedByFaction == $faction">
											<append_to_list name="$ships_impounded" exact="$ship_inList" />
										</do_if>
									</do_if>
								</do_for_each>
								<set_value name="$bribe" exact="((@kCHC.$factionFines.{$faction})f * 0.5)ct" />
								<do_if value="$bribe lt 0">
									<signal_cue_instantly cue="md.LIB_Reward_Balancing.Reward_Money" param="[namespace, level.easy, 1, $faction]" comment="basic reward credits" />
									<include_actions ref="md.LIB_Reward_Balancing.Apply_RewardMultiplier" comment="signal leak and mission thread bonus" />
									<set_value name="$bribe" exact="$Reward_Money__Result_Multiplied" />
								</do_if>
								<debug_text text="'$ships_impounded: ' + $ships_impounded" chance="kCHC.$debugChance" />
								<debug_text text="'$bribe: ' + $bribe" chance="kCHC.$debugChance" />
								<debug_text text="'player.money: ' + player.money" chance="kCHC.$debugChance" />
								<do_if value="
									$ships_impounded.count > 0
									and
									$bribe gt 0
									and
									player.money ge $bribe
								">
									<!-- <t id="6000">Release my ship for %s(cr)?</t>
									<t id="6001">Release my ships for %s(cr)?</t> -->
									<do_if value="$ships_impounded.count == 1">
										<!-- <add_player_choice text="{11383, 6000}.[$bribe.formatted.{'%s %Cr'}]" section="kCHC2_bribe_manager" /> -->
										<append_to_list name="$playerChoices" exact="table[
											$text = {11383, 6000}.[$bribe.formatted.{'%s %Cr'}],
											$section = 'kCHC2_bribe_manager'
										]" />
									</do_if>
									<do_else>
										<!-- <add_player_choice text="{11383, 6001}.[$bribe.formatted.{'%s %Cr'}]" section="kCHC2_bribe_manager" /> -->
										<append_to_list name="$playerChoices" exact="table[
											$text = {11383, 6001}.[$bribe.formatted.{'%s %Cr'}],
											$section = 'kCHC2_bribe_manager'
										]" />
									</do_else>
								</do_if>
								<do_if value="$playerChoices.count">
									<do_if value="event.name == 'event_conversation_started' and @md.ExtendedConversationMenu.Main.exists">
										<set_value name="md.ExtendedConversationMenu.Main.$convOptions.$kCHC_BribeManager" exact="table[
											$signalCue = BribeManager_ConvoStart
										]" />
									</do_if>
									<do_else>
										<do_for_each name="$playerChoice_inList" in="$playerChoices">
											<debug_text text="'$playerChoice_inList:' + $playerChoice_inList" chance="kCHC.$debugChance" />
											<add_player_choice text="$playerChoice_inList.$text" section="kCHC2_bribe_manager" />
										</do_for_each>
									</do_else>
								</do_if>
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="BribeManager_ConvoBribe">
							<conditions>
								<event_conversation_next_section sectionprefix="kCHC2_" />
							</conditions>
							<actions>
								<debug_text text="'event.param: ' + event.param + ' event.param2: ' + event.param2" chance="kCHC.$debugChance" />
								<do_if value="event.param == 'kCHC2_bribe_manager'">
									<debug_text text="'transfer_money OUT: ' + $bribe" chance="kCHC.$debugChance" />
									<!-- <transfer_money from="faction.player" to="$faction" amount="$bribe" /> -->
									<do_if value="@md.VerboseTransactionLog.TransferMoney.exists">
										<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
											$amount = $bribe,
											$description = {11383, 103},
											$from = faction.player,
											$to = $faction,
										]" />
									</do_if>
									<do_else>
										<transfer_money from="faction.player" to="$faction" amount="$bribe" />
									</do_else>
									<do_for_each name="$ship_inList" in="$ships_impounded">
										<signal_cue_instantly cue="ReleaseShipFromImpound" param="table[
											$ship = $ship_inList,
											$releasedByFaction = $faction
										]" />
									</do_for_each>
								</do_if>
								<reset_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="OnOptionsMenu">
					<conditions>
						<event_ui_triggered screen="'OptionsMenu'" />
						<check_value value="event.param2 != 'menu_close'" />
					</conditions>
					<actions>
						<debug_text text="'player.hasemergencyeject: ' + player.hasemergencyeject" chance="kCHC.$debugChance" />
						<debug_text text="'player.isemergencyejectactive: ' + player.isemergencyejectactive" chance="kCHC.$debugChance" />
						<set_emergency_eject_active active="true" />
						<debug_text text="'player.hasemergencyeject (post): ' + player.hasemergencyeject" chance="kCHC.$debugChance" />
						<debug_text text="'player.isemergencyejectactive (post): ' + player.isemergencyejectactive" chance="kCHC.$debugChance" />
					</actions>
				</cue>
				<cue name="OnOptionsMenuClose" namespace="this">
					<conditions>
						<event_ui_triggered screen="'OptionsMenu'" control="'menu_close'" />
					</conditions>
					<actions>
						<do_if value="kCHC.$userIsImpoundPlayerShipOnAttack">
							<debug_text text="'player.hasemergencyeject: ' + player.hasemergencyeject" chance="kCHC.$debugChance" />
							<debug_text text="'player.isemergencyejectactive: ' + player.isemergencyejectactive" chance="kCHC.$debugChance" />
							<set_emergency_eject_active active="false" />
							<debug_text text="'player.hasemergencyeject (post): ' + player.hasemergencyeject" chance="kCHC.$debugChance" />
							<debug_text text="'player.isemergencyejectactive (post): ' + player.isemergencyejectactive" chance="kCHC.$debugChance" />
						</do_if>
						<do_if value="not kCHC.$userIsDetectCrimesOnEnemy">
							<do_all counter="$i" exact="kCHC.$factionFines.keys.count">
								<set_value name="$faction" exact="kCHC.$factionFines.keys.{$i}" />
								<do_if value="$faction.hasrelation.enemy.{faction.player}">
									<run_actions ref="RemoveFactionCrimes">
										<param name="Faction" value="$faction" />
									</run_actions>
								</do_if>
							</do_all>
						</do_if>
						<do_if value="not kCHC.$userIsDetectCrimesOnPirate">
							<debug_text text="'kCHC.$pirateFactions: ' + kCHC.$pirateFactions" chance="kCHC.$debugChance" />
							<do_all counter="$i" exact="kCHC.$pirateFactions.count">
								<set_value name="$pirateFaction" exact="kCHC.$pirateFactions.{$i}" />
								<run_actions ref="RemoveFactionCrimes">
									<param name="Faction" value="$pirateFaction" />
								</run_actions>
							</do_all>
						</do_if>
						<do_if value="kCHC.$isDoDebug1">
							<do_if value="@md.kuertee_chc.kCHC.exists">
								<do_if value="not md.$crime_bribe?">
									<run_actions ref="md.kuertee_chc.CustomCrimes_Add" result="md.$crime_bribe" comment="md.$crime_bribe.$id = id of the crime">
										<param name="Cue" value="md.kuertee_chc.kCHC" comment="X = 3rd-party cue" />
										<param name="Name" value="'Attempted Bribery'" comment="Attempted Bribery" />
										<param name="FineLevel" value="level.easy" comment="120k" />
									</run_actions>
								</do_if>
							</do_if>
							<debug_text text="'md.$crime_bribe: ' + md.$crime_bribe" />
							<do_if value="@md.kuertee_chc.kCHC.exists">
								<set_value name="$crimeId" exact="md.$crime_bribe.$id" comment="dynamic - will be given above" />
								<!-- <set_value name="$victim" exact="event.object.station" comment="Y is a ship or station" /> -->
								<find_station name="$victim" space="player.galaxy" owner="player.sector.owner" />
								<set_value name="$isSelfDefense" exact="false" comment="Z is whether this is crime is in self-defense, an uncharged but recorded crime." />
								<signal_cue_instantly cue="md.kuertee_chc.CrimeConfirm" param="table[
									$crime = $crimeId,
									$criminalShip = if player.ship then player.ship else player.entity,
									$victimShipStation = $victim,
									$victimFaction = $victim.owner,
									$isSelfDefense = $isSelfDefense,
									$fromCue = namespace,
								]" />
							</do_if>
						</do_if>
						<do_elseif value="kCHC.$isDoDebug2">
						</do_elseif>
						<set_value name="kCHC.$isDoDebug1" exact="false" />
						<set_value name="kCHC.$isDoDebug2" exact="false" />
						<reset_cue cue="OnOptionsMenu" />
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="K_ArriveAndLeaveStations" namespace="this">
					<actions>
						<set_value name="$attentionNearbyAndNearer" exact="[attention.nearby, attention.adjacentroom, attention.inroom]" />
						<set_value name="$attentionInZoneAndNearer" exact="[attention.inzone, attention.nearby, attention.adjacentroom, attention.inroom]" />
						<set_value name="md.Notifications.Init.$kuertee_station_new" exact="null" />
						<set_value name="md.Notifications.Init.$kuertee_station_old" exact="null" />
						<set_value name="md.Notifications.Init.$kuertee_station_current" exact="null" />
						<set_value name="md.Notifications.Init.$kuertee_Cue_departOldStation" exact="null" />
						<set_value name="md.Notifications.Init.$kuertee_debugChance" exact="0" />
					</actions>
					<cues>
						<cue name="K_ArriveStation" instantiate="true">
							<conditions>
								<check_any>
									<event_cue_signalled />
									<check_all>
										<!-- Event for the specified object changing attention level (object = attention changing object, param = new attention level, param2 = previous attention level) -->
										<event_object_changed_attention group="md.NPC_Instantiation.Instantiation.$TrackedObjects" />
										<check_value value="event.object.isclass.station" />
										<check_value value="@event.object.macro != @macro.landmarks_par_monument_01_macro" />
										<check_value value="@event.object.macro != @macro.torus_maze_macro" />
									</check_all>
									<check_all>
										<!-- Event for when the player successfully teleports. (param = new room, param2 = old room, param3 = is shortcut instead of real teleport) -->
										<event_player_teleport_successful />
									</check_all>
								</check_any>
							</conditions>
							<actions>
								<set_value name="$isOk" exact="false" />
								<set_value name="$isAlreadyActive" exact="false" />
								<set_value name="$isTeleport" exact="false" />
								<do_if value="event.name == 'event_cue_signalled'">
									<set_value name="$station_this" exact="event.param.$station" />
									<set_value name="$isAlreadyActive" exact="event.param.$isAlreadyActive" />
									<set_value name="$isOk" exact="true" />
								</do_if>
								<do_elseif value="event.name == 'event_object_changed_attention'">
									<do_if value="event.object.isclass.station">
										<set_value name="$station_this" exact="event.object" />
										<set_value name="$isOk" exact="
											$attentionNearbyAndNearer.indexof.{event.param}
											and
											(not $attentionNearbyAndNearer.indexof.{event.param2})
											and
											$station_this != md.Notifications.Init.$kuertee_station_current
										" />
									</do_if>
								</do_elseif>
								<do_elseif value="event.name == 'event_player_teleport_successful'">
									<set_value name="$isTeleport" exact="true" />
									<do_if value="player.station">
										<set_value name="$station_this" exact="player.station" />
										<set_value name="$isOk" exact="
											(
												(not @md.Notifications.Init.$kuertee_station_current)
												or
												(not @param.hascontext.{@md.Notifications.Init.$kuertee_station_current})
											)
											and
											$station_this != md.Notifications.Init.$kuertee_station_current
										" />
									</do_if>
								</do_elseif>
								<do_if value="$isOk">
									<do_if value="not $isAlreadyActive">
										<do_if value="md.Notifications.Init.$kuertee_Cue_departOldStation.exists">
											<do_if value="md.Notifications.Init.$kuertee_Cue_departOldStation.state == cuestate.waiting">
												<signal_cue_instantly cue="md.Notifications.Init.$kuertee_Cue_departOldStation" />
											</do_if>
										</do_if>
										<set_value name="md.Notifications.Init.$kuertee_station_new" exact="$station_this" />
										<set_value name="md.Notifications.Init.$kuertee_station_old" exact="md.Notifications.Init.$kuertee_station_current" />
										<set_value name="md.Notifications.Init.$kuertee_station_current" exact="md.Notifications.Init.$kuertee_station_new" />
									</do_if>
									<do_else>
										<set_value name="md.Notifications.Init.$kuertee_station_new" exact="$station_this" />
										<set_value name="md.Notifications.Init.$kuertee_station_old" exact="md.Notifications.Init.$kuertee_station_current" />
										<set_value name="md.Notifications.Init.$kuertee_station_current" exact="md.Notifications.Init.$kuertee_station_new" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_ArriveStation $isAlreadyActive at: ' + @md.Notifications.Init.$kuertee_station_current.knownname" />
										<debug_text text="'K_ArriveStation $isAlreadyActive at: ' + @md.Notifications.Init.$kuertee_station_current.knownname" />
									</do_else>
								</do_if>
								<do_else>
									<cancel_cue cue="this" />
								</do_else>
							</actions>
							<cues>
								<cue name="K_DepartStation">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<event_object_changed_attention object="md.Notifications.Init.$kuertee_station_current" />
										</check_any>
									</conditions>
									<actions>
										<set_value name="$isOk" exact="false" />
										<set_value name="$isOk" exact="
											event.name == 'event_cue_signalled'
											or
											(
												(not @$attentionNearbyAndNearer.indexof.{@event.param})
												and
												@$attentionNearbyAndNearer.indexof.{@event.param2}
											)
										" />
										<do_if value="$isOk">
											<set_value name="md.Notifications.Init.$kuertee_station_new" exact="null" />
											<set_value name="md.Notifications.Init.$kuertee_station_old" exact="md.Notifications.Init.$kuertee_station_current" />
											<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$leaveFrom = md.Notifications.Init.$kuertee_station_old]" />
											<set_value name="md.Notifications.Init.$kuertee_station_current" exact="md.Notifications.Init.$kuertee_station_new" />
											<raise_lua_event name="'Chat_Window_API.Print'" param="'K_DepartStation new ' + @md.Notifications.Init.$kuertee_station_new.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<raise_lua_event name="'Chat_Window_API.Print'" param="'K_DepartStation old ' + @md.Notifications.Init.$kuertee_station_old.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<raise_lua_event name="'Chat_Window_API.Print'" param="'K_DepartStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<debug_text text="'kuertee K_DepartStation new ' + @md.Notifications.Init.$kuertee_station_new.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<debug_text text="'kuertee K_DepartStation old ' + @md.Notifications.Init.$kuertee_station_old.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<debug_text text="'kuertee K_DepartStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<cancel_cue cue="parent" />
											<reset_cue cue="this" />
										</do_if>
										<do_else>
											<reset_cue cue="this" />
										</do_else>
									</actions>
								</cue>
								<cue name="K_ArriveStation2">
									<actions>
										<set_value name="md.Notifications.Init.$kuertee_Cue_departOldStation" exact="K_DepartStation" />
										<do_if value="$isTeleport">
											<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$teleportTo = md.Notifications.Init.$kuertee_station_new, $leaveFrom = md.Notifications.Init.$kuertee_station_old]" />
										</do_if>
										<do_else>
											<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$arriveAt = md.Notifications.Init.$kuertee_station_new, $leaveFrom = md.Notifications.Init.$kuertee_station_old]" />
										</do_else>
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_ArriveStation new ' + @md.Notifications.Init.$kuertee_station_new.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_ArriveStation old ' + @md.Notifications.Init.$kuertee_station_old.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_ArriveStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_ArriveStation new ' + @md.Notifications.Init.$kuertee_station_new.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_ArriveStation old ' + @md.Notifications.Init.$kuertee_station_old.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_ArriveStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<cancel_cue cue="this" />
									</actions>
								</cue>
								<cue name="K_DockedAtStation">
									<conditions>
										<!-- Event for the specified object docking (object = docking object, param = dock object, param2 = zone) -->
										<event_object_docked group="global.$PlayerContainerGroup" />
										<check_value value="event.param.isclass.station" />
										<check_value value="@event.param.macro != @macro.landmarks_par_monument_01_macro" />
										<check_value value="@event.param.macro != @macro.torus_maze_macro" />
									</conditions>
									<actions>
										<!-- <raise_lua_event name="'Chat_Window_API.Print'" param="'K_DockedAtStation player.station ' + @$player.station.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" /> -->
										<set_value name="md.Notifications.Init.$kuertee_station_current" exact="event.param" />
										<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$dockAt = md.Notifications.Init.$kuertee_station_current]" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_DockedAtStation station_current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_DockedAtStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="K_UndockedFromStation">
									<conditions>
										<!-- Event for the specified object undocking (object = undocking object, param = dock, param2 = zone) -->
										<event_object_undocked group="global.$PlayerContainerGroup" />
										<check_value value="event.param.isclass.station" />
										<check_value value="@event.param.macro != @macro.landmarks_par_monument_01_macro" />
										<check_value value="@event.param.macro != @macro.torus_maze_macro" />
									</conditions>
									<actions>
										<set_value name="md.Notifications.Init.$kuertee_station_current" exact="event.param" />
										<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$undockFrom = md.Notifications.Init.$kuertee_station_current]" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_UndockedFromStation station_current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_UndockedFromStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<reset_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
						<cue name="K_ArriveAndLeaveStations_Debug" namespace="this">
							<conditions>
								<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
								<check_value value="event.param3.$text == 'kuertee debug K_ArriveAndLeaveStations'" />
							</conditions>
							<actions>
								<debug_text text="@event.param3" />
								<raise_lua_event name="'Chat_Window_API.Print'" param="@event.param3.$text" />
								<do_if value="@md.Notifications.Init.$kuertee_debugChance">
									<set_value name="md.Notifications.Init.$kuertee_debugChance" exact="0" />
								</do_if>
								<do_else>
									<set_value name="md.Notifications.Init.$kuertee_debugChance" exact="100" />
								</do_else>
								<reset_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="K_ArriveAndLeaveStations_Init2" namespace="this">
					<conditions>
						<check_any>
							<event_cue_signalled />
							<event_game_loaded />
						</check_any>
						<check_value value="not @player.allmodules.{player.module}.isscenario" />
					</conditions>
					<actions>
						<!-- save station current -->
						<set_value name="$station_current" exact="@md.Notifications.Init.$kuertee_station_current" />
						<do_if value="not @$station_current.exists">
							<set_value name="$station_current" exact="@K_ArriveAndLeaveStations.$kuertee_station_current" />
							<do_if value="not @$station_current.exists">
								<set_value name="$station_current" exact="@K_ArriveAndLeaveStations.$station_current" />
							</do_if>
						</do_if>
						<debug_text text="'$station_current: ' + $station_current + ' (' + @$station_current.knownname + ')'" />
						<do_if value="@md.Notifications.Init.$kuertee_ArriveAndLeaveStations.exists">
							<!-- deregister at every load -->
							<remove_value name="md.Notifications.Init.$kuertee_ArriveAndLeaveStations" />
						</do_if>
						<set_value name="$initDelay" min="0.0s" max="1.0s" />
						<debug_text text="'$initDelay: ' + $initDelay" />
						<!-- reset cue at every load -->
						<reset_cue cue="K_ArriveAndLeaveStations" />
					</actions>
					<cues>
						<cue name="K_ArriveAndLeaveStations_Init3" checktime="player.age + $initDelay">
							<actions>
								<do_if value="not @md.Notifications.Init.$kuertee_ArriveAndLeaveStations.exists">
									<!-- no K_ArriveAndLeaveStations registered -->
									<!-- register this K_ArriveAndLeaveStations -->
									<set_value name="md.Notifications.Init.$kuertee_ArriveAndLeaveStations" exact="K_ArriveAndLeaveStations" />
									<debug_text text="'$kuertee_ArriveAndLeaveStations: ' + @md.Notifications.Init.$kuertee_ArriveAndLeaveStations" />
								</do_if>
								<do_else>
									<!-- cancel this K_ArriveAndLeaveStations, so only one exists -->
									<debug_text text="'cancel_cue ' + K_ArriveAndLeaveStations" />
									<cancel_cue cue="K_ArriveAndLeaveStations" />
									<reset_cue cue="parent" />
								</do_else>
							</actions>
							<cues>
								<cue name="K_ArriveAndLeaveStations_Init4">
									<actions>
										<do_if value="not @$station_current.exists">
											<find_station name="$station" sortbydistanceto="player.entity" />
											<do_if value="[attention.nearby, attention.adjacentroom, attention.inroom].indexof.{$station.attention}">
												<set_value name="$station_current" exact="$station" />
												<debug_text text="'$station_current (found nearby): ' + $station_current + ' (' + $station_current.knownname + ')'" />
											</do_if>
											<reset_cue cue="K_ArriveAndLeaveStations_Init2" />
										</do_if>
										<do_if value="@$station_current.exists">
											<!-- if there was a $station_current, prepare K_ArriveAndLeaveStations with it -->
											<!-- this is required so that K_DepartStation can continue with $station_current -->
											<!-- <debug_text text="'$kuertee_ArriveAndLeaveStations setting for $station_current: ' + $station_current + ' (' + $station_current.knownname + ')'" /> -->
											<!-- <signal_cue_instantly cue="K_ArriveStation" param="table[$station = $station_current, $isAlreadyActive = true]" /> -->
											<!-- <reset_cue cue="K_ArriveAndLeaveStations_Init2" /> -->
										</do_if>
									</actions>
									<cues>
										<cue name="K_ArriveAndLeaveStations_Init5">
											<actions>
												<debug_text text="'$kuertee_ArriveAndLeaveStations setting for $station_current: ' + $station_current + ' (' + $station_current.knownname + ')'" />
												<signal_cue_instantly cue="K_ArriveStation" param="table[$station = $station_current, $isAlreadyActive = true]" />
												<reset_cue cue="K_ArriveAndLeaveStations_Init2" />
											</actions>
										</cue>
									</cues>
								</cue>
							</cues>
						</cue>
					</cues>
				</cue>
				<cue name="K_ArriveAndLeaveStations_FirstRun2">
					<actions>
						<signal_cue cue="K_ArriveAndLeaveStations_Init2" />
					</actions>
				</cue>
				<cue name="OnModInstall">
					<actions>
						<debug_text text="'$debugChance: ' + $debugChance" />
						<signal_cue_instantly cue="Init" />
					</actions>
				</cue>
				<cue name="OnModInstallComplete" checktime="player.age + 1s">
					<actions>
						<set_value name="$debugChance" exact="0" />
						<debug_text text="'$debugChance: ' + $debugChance" />
					</actions>
				</cue>
				<cue name="kCHCUpdatedTo7">
					<actions>
						<do_if value="@kCHC.$isUpdatedTo7">
							<debug_text text="'kCHC.$isUpdatedTo7: ' + kCHC.$isUpdatedTo7" />
							<set_value name="kCHC.$isUpdatedTo7" exact="false" />
							<set_value name="kCHC.$debugChance" exact="100" />
							<signal_cue cue="FindPirateFactions" />
							<set_value name="kCHC.$debugChance" exact="0" />
						</do_if>
					</actions>
				</cue>
				<cue name="Step0_PlayerOwnedAttackOrKilledObject" instantiate="true" namespace="this">
					<conditions>
						<check_any>
							<check_all>
								<event_player_attacked_object />
								<set_value name="$kCHC_criminalShip" exact="player.occupiedship" />
								<set_value name="$kCHC_victimShipStation" exact="event.param" />
								<set_value name="$kCHC_crime" exact="relationchangereason.attackedobject" />
								<check_value value="false" comment="NOTE: not required as attack crimes are recorded from notifications.xml AttackResponse" />
							</check_all>
							<check_all>
								<event_player_owned_killed_object />
								<check_value value="event.param != player.occupiedship" comment="NOTE: player kill-crimes are recorded from notifications.xml AttackResponse" />
								<set_value name="$kCHC_criminalShip" exact="event.param" />
								<set_value name="$kCHC_victimShipStation" exact="event.param2" />
								<set_value name="$kCHC_crime" exact="relationchangereason.killedobject" />
							</check_all>
						</check_any>
						<check_all comment="search for 'criminal validation' to find other instances of this test">
							<check_value value="$kCHC_criminalShip.isplayerowned" />
							<check_any>
								<check_value value="$kCHC_criminalShip.isclass.entity" />
								<check_value value="$kCHC_criminalShip.isclass.ship" />
							</check_any>
							<check_value value="not @$kCHC_criminalShip.islasertower" />
							<check_any>
								<check_value value="kCHC.$userIsAllowAttackCrimesInLowAttention" />
								<check_value value="$kCHC_criminalShip.attention ge attention.adjacentzone" />
							</check_any>
						</check_all>
						<check_all comment="search for 'victim validation' to find other instances of this test">
							<check_any>
								<check_value value="not $kCHC_victimShipStation.isplayerowned" />
								<check_value value="$kCHC_crime == relationchangereason.boardedobject" />
							</check_any>
							<check_value value="$kCHC_victimShipStation.isrealclass.[class.ship, class.station]" />
							<check_value value="not [shiptype.xsdrone, shiptype.distressdrone].indexof.{@$kCHC_victimShipStation.shiptype}" />
							<check_value value="@$kCHC_victimShipStation.pilot.race != race.drone" />
							<check_value value="not $kCHC_victimShipStation.isunit" />
							<check_any>
								<check_value value="kCHC.$userIsAllowAttackCrimesInLowAttention" />
								<check_value value="$kCHC_victimShipStation.attention ge attention.adjacentzone" />
							</check_any>
							<check_any>
								<check_value value="kCHC.$validFactions.indexof.{$kCHC_victimShipStation.trueowner}" />
								<check_all>
									<check_value value="[faction.ownerless, null].indexof.{$kCHC_victimShipStation.trueowner}" />
									<check_value value="$kCHC_crime == relationchangereason.boardedobject" />
								</check_all>
							</check_any>
							<check_value value="not kCHC.$pirateFactions.indexof.{$kCHC_victimShipStation.trueowner}" />
						</check_all>
					</conditions>
					<actions>
						<debug_text text="event.name" chance="kCHC.$debugChance" />
						<do_if value="event.name == 'event_player_attacked_object'" comment="setting vars again is required here, because the vars in the conditions node are scope in this.static and not in the instance">
							<set_value name="$kCHC_criminalShip" exact="player.occupiedship" />
							<set_value name="$kCHC_victimShipStation" exact="event.param" />
							<set_value name="$kCHC_crime" exact="relationchangereason.attackedobject" />
						</do_if>
						<do_elseif value="event.name == 'event_player_owned_killed_object'" comment="setting vars again is required here, because the vars in the conditions node are scope in this.static and not in the instance">
							<set_value name="$kCHC_criminalShip" exact="event.param" />
							<set_value name="$kCHC_victimShipStation" exact="event.param2" />
							<set_value name="$kCHC_crime" exact="relationchangereason.killedobject" />
						</do_elseif>
						<run_actions ref="Step1_GetCriminalShip" result="$kCHC_criminalShip">
							<param name="kCHC_criminalShip" value="$kCHC_criminalShip" />
						</run_actions>
						<run_actions ref="Step1_GetVictimShipStation" result="$kCHC_victimShipStation">
							<param name="kCHC_victimShipStation" value="$kCHC_victimShipStation" />
						</run_actions>
						<run_actions ref="Step2_GetIsSelfDefense" result="$kCHC_isSelfDefense">
							<param name="kCHC_criminalShip" value="$kCHC_criminalShip" />
							<param name="kCHC_victimShipStation" value="$kCHC_victimShipStation" />
							<param name="kCHC_crime" value="$kCHC_crime" />
						</run_actions>
						<run_actions ref="Step3_RecordCrime">
							<param name="kCHC_criminalShip" value="$kCHC_criminalShip" />
							<param name="kCHC_victimShipStation" value="$kCHC_victimShipStation" />
							<param name="kCHC_crime" value="$kCHC_crime" />
							<param name="kCHC_isSelfDefense" value="$kCHC_isSelfDefense" />
						</run_actions>
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<library name="Step1_GetCriminalShip" purpose="run_actions">
					<params>
						<param name="kCHC_criminalShip" />
					</params>
					<actions>
						<do_if value="$kCHC_criminalShip.isclass.entity">
							<do_if value="
								$kCHC_criminalShip.container.isclass.ship and
								$kCHC_criminalShip.container.isplayerowned">
								<set_value name="$kCHC_criminalShip" exact="kCHC_criminalShip.container" />
							</do_if>
						</do_if>
						<!-- <do_if value="not md.kuertee_chc.kCHC.$userSeparateWingmanCrimes">
							<do_if value="@$kCHC_criminalShip.toplevelcommander">
								<set_value name="$kCHC_criminalShip" exact="$kCHC_criminalShip.toplevelcommander" />
							</do_if>
							<do_elseif value="@$kCHC_criminalShip.commander">
								<set_value name="$kCHC_criminalShip" exact="$kCHC_criminalShip.commander" />
							</do_elseif>
						</do_if> -->
						<return value="$kCHC_criminalShip" />
					</actions>
				</library>
				<library name="Step1_GetVictimShipStation" purpose="run_actions">
					<params>
						<param name="kCHC_victimShipStation" />
					</params>
					<actions>
						<do_if value="$kCHC_victimShipStation.isclass.entity">
							<do_if value="$kCHC_victimShipStation.container.isclass.[class.ship, class.station]">
								<set_value name="$kCHC_victimShipStation" exact="kCHC_victimShipStation.container" />
							</do_if>
						</do_if>
						<do_if value="not @md.kuertee_chc.kCHC.$userSeparateWingmanCrimes">
							<do_if value="@$kCHC_victimShipStation.toplevelcommander.isclass.ship">
								<set_value name="$kCHC_victimShipStation" exact="$kCHC_victimShipStation.toplevelcommander" />
							</do_if>
						</do_if>
						<do_if value="not $kCHC_victimShipStation">
							<set_value name="$kCHC_victimShipStation" exact="$kCHC_victimShipStation.trueowner.headquarters" />
						</do_if>
						<return value="$kCHC_victimShipStation" />
					</actions>
				</library>
				<library name="Step2_GetIsSelfDefense" purpose="run_actions" comment="search for 'self defense test' to find other instances of this test">
					<params>
						<param name="kCHC_criminalShip" />
						<param name="kCHC_victimShipStation" />
						<param name="kCHC_crime" />
					</params>
					<actions>
						<set_value name="$kCHC_isSelfDefense" exact="
							@md.kuertee_chc.kCHC.$selfDefendingAgainst.indexof.{$kCHC_victimShipStation} or
							@md.kuertee_chc.kCHC.$selfDefendingAgainst.indexof.{$kCHC_victimShipStation.commander} or
							(
								@$kCHC_victimShipStation.toplevelcommander and
								md.kuertee_chc.kCHC.$selfDefendingAgainst.indexof.{$kCHC_victimShipStation.toplevelcommander}
							)
						" />
						<do_if value="not $kCHC_isSelfDefense">
							<do_if value="@$kCHC_victimShipStation.orders">
								<do_for_each name="$kCHC_order" in="@$kCHC_victimShipStation.orders">
									<do_if value="
										@$kCHC_order.$primarytarget == $kCHC_criminalShip or
										(
											@$kCHC_order.$secondarytargets and
											@$kCHC_order.$secondarytargets.indexof.{$kCHC_criminalShip}
										)">
										<set_value name="$kCHC_isSelfDefense" exact="true" />
										<break />
									</do_if>
								</do_for_each>
							</do_if>
						</do_if>
						<return value="$kCHC_isSelfDefense" />
					</actions>
				</library>
				<library name="Step3_RecordCrime" purpose="run_actions">
					<params>
						<param name="kCHC_criminalShip" />
						<param name="kCHC_victimShipStation" />
						<param name="kCHC_crime" />
						<param name="kCHC_isSelfDefense" />
					</params>
					<actions>
						<debug_text text="'$kCHC_criminalShip : ' + $kCHC_criminalShip + ' ' + @$kCHC_criminalShip.knownname + ' ' + @$kCHC_criminalShip.idcode" chance="md.kuertee_chc.kCHC.$debugChance" />
						<debug_text text="'$kCHC_victimShipStation: ' + $kCHC_victimShipStation + ' ' + @$kCHC_victimShipStation.knownname + ' ' + @$kCHC_victimShipStation.idcode" chance="md.kuertee_chc.kCHC.$debugChance" />
						<debug_text text="'$kCHC_crime: ' + $kCHC_crime" chance="md.kuertee_chc.kCHC.$debugChance" />
						<debug_text text="'$kCHC_isSelfDefense: ' + $kCHC_isSelfDefense" chance="md.kuertee_chc.kCHC.$debugChance" />
						<do_if value="$kCHC_criminalShip and $kCHC_victimShipStation and $kCHC_crime">
							<set_value name="$kCHC_pendingCrime" exact="null" />
							<do_if value="@md.kuertee_chc.kCHC.$pendingCrimesById.{'$' + $kCHC_criminalShip.idcode}">
								<do_for_each name="$kCHC_crimeInList" in="md.kuertee_chc.kCHC.$pendingCrimesById.{'$' + $kCHC_criminalShip.idcode}" comment="search for 'find current crime' to find other instances of this test">
									<do_if value="
										$kCHC_crimeInList.$victimShipStation == $kCHC_victimShipStation and
										$kCHC_crimeInList.$crime == $kCHC_crime and
										player.age - $kCHC_crimeInList.$crimeTime le 10min">
										<set_value name="$kCHC_pendingCrime" exact="$kCHC_crimeInList" />
										<break />
									</do_if>
								</do_for_each>
							</do_if>
							<do_if value="not $kCHC_pendingCrime">
								<debug_text text="'$kCHC_pendingCrime (new crime): ' + $kCHC_pendingCrime" chance="md.kuertee_chc.kCHC.$debugChance" />
								<find_station name="$kCHC_objectToRunScript" space="player.galaxy" checkoperational="true" />
								<debug_text text="'$kCHC_objectToRunScript: ' + $kCHC_objectToRunScript + ' ' + @$kCHC_objectToRunScript.knownname + ' ' + @$kCHC_objectToRunScript.idcode" chance="md.kuertee_chc.kCHC.$debugChance" />
								<debug_text text="'$kCHC_objectToRunScript.defencenpc: ' + @$kCHC_objectToRunScript.defencenpc + ' ' + @$kCHC_objectToRunScript.defencenpc.knownname + ' ' + @$kCHC_objectToRunScript.defencenpc.idcode" chance="md.kuertee_chc.kCHC.$debugChance" />
								<do_if value="$kCHC_objectToRunScript">
									<start_script name="'kuertee_chc.witness.crime'" object="$kCHC_objectToRunScript.defencenpc">
										<param name="kCHC_criminalShip" value="$kCHC_criminalShip" />
										<param name="kCHC_victimShipStation" value="$kCHC_victimShipStation" />
										<param name="kCHC_crime" value="$kCHC_crime" />
										<param name="kCHC_isSelfDefense" value="$kCHC_isSelfDefense" />
									</start_script>
								</do_if>
							</do_if>
							<do_else>
								<debug_text text="'$kCHC_pendingCrime (crime already recorded): ' + $kCHC_pendingCrime" chance="md.kuertee_chc.kCHC.$debugChance" />
							</do_else>
							<do_if value="Step6_CleanUp.state == cuestate.waiting">
								<signal_cue cue="md.kuertee_chc.Step6_CleanUp" />
							</do_if>
						</do_if>
					</actions>
				</library>
				<cue name="Step4_ReportCrimesFromAI" instantiate="true">
					<conditions>
						<!-- <signal_objects object="player.galaxy" param="'kCHC_report_crime'" param2="table[$witness = $kCHC_witnessToReportImmediately]" /> -->
						<event_object_signalled object="player.galaxy" param="'kCHC_report_crime'" />
					</conditions>
					<actions>
						<debug_text text="'event.param2.$witness: ' + event.param2.$witness + ' ' + @event.param2.$witness.knownname + ' ' + @event.param2.$witness.idcode" chance="kCHC.$debugChance" />
						<run_actions ref="Step5_ReportCrimes">
							<param name="Witness" value="event.param2.$witness" />
							<param name="Station" value="@event.param2.$station" />
						</run_actions>
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<library name="Step5_ReportCrimes" purpose="run_actions">
					<params>
						<param name="Witness" />
						<param name="Station" />
					</params>
					<actions>
						<debug_text text="'$Witness: ' + $Witness + ' ' + $Witness.knownname + ' ' + $Witness.idcode" chance="md.kuertee_chc.kCHC.$debugChance" />
						<set_value name="$witnessEntity" exact="$Witness.pilot" />
						<do_if value="not $witnessEntity">
							<set_value name="$witnessEntity" exact="$Witness.defencenpc" />
						</do_if>
						<debug_text text="'$witnessEntity: ' + $witnessEntity + ' ' + @$witnessEntity.knownname + ' ' + @$witnessEntity.idcode" chance="md.kuertee_chc.kCHC.$debugChance" />
						<do_if value="$witnessEntity">
							<run_actions ref="GetObjectName" result="$reportedByName">
								<param name="Object" value="$Witness" />
							</run_actions>
							<run_actions ref="GetObjectName" result="$reportedAtName">
								<param name="Object" value="$Station" />
							</run_actions>
							<set_value name="$criminalIdsReported" exact="[]" />
							<set_value name="$criminalIds" exact="@$witnessEntity.$kCHC_criminalIdsWitnessed" />
							<debug_text text="'$criminalIds (' + $criminalIds.count + '): ' + $criminalIds" chance="md.kuertee_chc.kCHC.$debugChance" />
							<do_if value="@$criminalIds.count">
								<do_for_each name="$criminalId" in="$criminalIds">
									<debug_text text="'$criminalId: ' + $criminalId" chance="md.kuertee_chc.kCHC.$debugChance" />
									<set_value name="$crimes" exact="@md.kuertee_chc.kCHC.$pendingCrimesById.{'$' + $criminalId}" />
									<debug_text text="'$crimes ($crimes.count): ' + $crimes" chance="md.kuertee_chc.kCHC.$debugChance" />
									<do_if value="@$crimes.count">
										<do_all counter="$i" exact="@$crimes.count" reverse="true">
											<set_value name="$crime" exact="$crimes.{$i}" />
											<debug_text text="'    $crime ($isReported: ' + @$crime.$isReported + '): ' + $crime" chance="md.kuertee_chc.kCHC.$debugChance" />
											<do_if value="not @$crime.$isReported">
												<do_if value="not $criminalIdsReported.indexof.{$criminalId}">
													<append_to_list name="$criminalIdsReported" exact="$criminalId" />
												</do_if>
												<debug_text text="'    $crime.$witnesses: ' + $crime.$witnesses" chance="md.kuertee_chc.kCHC.$debugChance" />
												<do_if value="$crime.$witnesses.indexof.{$Witness}">
													<set_value name="$crimeData" exact="table[
														$criminalShip = $crime.$criminalShip,
														$criminalShipName = $crime.$criminalShipName,
														$victimShipStation = $crime.$victimShipStation,
														$victimShipStationName = $crime.$victimShipStationName,
														$crime = $crime.$crime,
														$crimeTime = if @$crime.$crimeTime then $crime.$crimeTime else player.age,
														$isSelfDefense = $crime.$isSelfDefense,
														$reportedByName = @$reportedByName,
														$reportedAtName = @$reportedAtName,
													]" />
													<do_if value="$crime.$crime == relationchangereason.attackedobject">
														<signal_cue_instantly cue="md.kuertee_chc.CrimeAttack" param="$crimeData" />
													</do_if>
													<do_elseif value="$crime.$crime == relationchangereason.killedobject">
														<signal_cue_instantly cue="md.kuertee_chc.CrimeKill" param="$crimeData" />
													</do_elseif>
													<do_elseif value="$crime.$crime == relationchangereason.boardedobject">
														<signal_cue_instantly cue="md.kuertee_chc.CrimeBoarding" param="$crimeData" />
													</do_elseif>
													<do_elseif value="$crime.$crime == relationchangereason.scanningdiscovered">
														<signal_cue_instantly cue="md.kuertee_chc.CrimeIllegalScan" param="$crimeData" />
													</do_elseif>
													<do_elseif value="$crime.$crime == relationchangereason.illegalcargo">
														<signal_cue_instantly cue="md.kuertee_chc.CrimeIllegalCargo" param="$crimeData" />
													</do_elseif>
													<do_elseif value="$crime.$crime == relationchangereason.illegalplot">
														<signal_cue_instantly cue="md.kuertee_chc.CrimeIllegalPlot" param="$crimeData" />
													</do_elseif>
													<set_value name="$crime.$isReported" exact="true" />
												</do_if>
											</do_if>
											<do_if comment="search for 'crime ready for cleaning step 1' to find other instances of this test"
												value="@$crime.$isReported and
												(
													(not $crime.$criminalShip.isoperational) or
													(not $crime.$victimShipStation.isoperational) or
													$crime.$victimShipStation.distanceto.{$crime.$criminalShip} gt $crime.$victimShipStation.maxradarrange
												)">
												<!-- remove recorded pending crimes only when criminal and victims are far from each so that no new pending crimes are added on each attack event -->
												<debug_text text="'    remove_value $crimes.{$i} (is reported and criminal and victim are no longer near each other or are destroyed): ' + $crimes.{$i}" chance="md.kuertee_chc.kCHC.$debugChance" />
												<remove_value name="$crimes.{$i}" />
											</do_if>
											<debug_text text="'    $crime.$witnesses.count: ' + $crime.$witnesses.count" chance="md.kuertee_chc.kCHC.$debugChance" />
											<do_if value="$crime.$witnesses.count" comment="search for 'crime ready for cleaning step 2' to find other instances of this test">
												<do_all counter="$j" exact="$crime.$witnesses.count" reverse="true">
													<set_value name="$witness" exact="$crime.$witnesses.{$j}" />
													<do_if value="not @$witness.isfunctional">
														<remove_value name="$crime.$witnesses.{$j}" />
													</do_if>
												</do_all>
												<debug_text text="'    $crime.$witnesses.count (post remove crimes with no witnesses left): ' + $crime.$witnesses.count" chance="md.kuertee_chc.kCHC.$debugChance" />
											</do_if>
											<do_if value="not $crime.$witnesses.count" comment="search for 'crime ready for cleaning step 3' to find other instances of this test">
												<debug_text text="'    remove_value $crimes.{$i} (no witnesses left): ' + $crimes.{$i}" chance="md.kuertee_chc.kCHC.$debugChance" />
												<remove_value name="$crimes.{$i}" />
											</do_if>
										</do_all>
										<debug_text text="'$crimes ($crimes.count, post-report crimes): ' + $crimes" chance="md.kuertee_chc.kCHC.$debugChance" />
										<do_if value="not $crimes.count">
											<remove_value name="md.kuertee_chc.kCHC.$pendingCrimesById.{'$' + $criminalId}" />
										</do_if>
										<debug_text text="'$pendingCrimesById.{$' + $criminalId + '} (post report crimes): ' + @md.kuertee_chc.kCHC.$pendingCrimesById.{'$' + $criminalId}" chance="md.kuertee_chc.kCHC.$debugChance" />
									</do_if>
								</do_for_each>
								<debug_text text="'$criminalIdsReported (' + $criminalIdsReported.count + '): ' + $criminalIdsReported" chance="md.kuertee_chc.kCHC.$debugChance" />
								<do_if value="$criminalIds.count == $criminalIdsReported.count">
									<!-- all witnessed crimes have been reported -->
									<remove_value name="$witnessEntity.$kCHC_criminalIdsWitnessed" />
									<debug_text text="'$witnessEntity.$kCHC_criminalIdsWitnessed (' + @$witnessEntity.$kCHC_criminalIdsWitnessed.count + '): ' + @$witnessEntity.$kCHC_criminalIdsWitnessed" chance="md.kuertee_chc.kCHC.$debugChance" />
								</do_if>
							</do_if>
						</do_if>
					</actions>
				</library>
				<cue name="Step6_CleanUp" namespace="this">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<cues>
						<cue name="Step6_CleanUp_Interval" checkinterval="10min">
							<actions>
								<!-- clean-up pending crimes -->
								<set_value name="$criminalShipIds" exact="kCHC.$pendingCrimesById.keys.list.clone" />
								<debug_text text="'$criminalShipIds: ' + $criminalShipIds" chance="kCHC.$debugChance" />
								<do_all counter="$i" exact="$criminalShipIds.count" reverse="true">
									<set_value name="$criminalShipId" exact="$criminalShipIds.{$i}" />
									<debug_text text="'$criminalShipId: ' + $criminalShipId" chance="kCHC.$debugChance" />
									<set_value name="$crimes" exact="kCHC.$pendingCrimesById.{$criminalShipId}" />
									<debug_text text="'$crimes.count: ' + $crimes.count" chance="kCHC.$debugChance" />
									<do_all counter="$j" exact="$crimes.count" reverse="true">
										<set_value name="$crime" exact="$crimes.{$j}" />
										<do_if comment="search for 'crime ready for cleaning step 1' to find other instances of this test"
											value="@$crime.$isReported and
											(
												(not $crime.$criminalShip.isoperational) or
												(not $crime.$victimShipStation.isoperational) or
												$crime.$victimShipStation.distanceto.{$crime.$criminalShip} gt $crime.$victimShipStation.maxradarrange
											)">
											<!-- remove recorded pending crimes only when criminal and victims are far from each so that no new pending crimes are added on each attack event -->
											<debug_text text="'remove_value $crimes.{$i} (is reported and criminal and victim are no longer near each other or are destroyed): ' + $crimes.{$i}" chance="md.kuertee_chc.kCHC.$debugChance" />
											<remove_value name="$crimes.{$i}" />
										</do_if>
										<debug_text text="'$crime.$witnesses.count: ' + $crime.$witnesses.count" chance="md.kuertee_chc.kCHC.$debugChance" />
										<do_if value="$crime.$witnesses.count" comment="search for 'crime ready for cleaning step 2' to find other instances of this test">
											<do_all counter="$i" exact="$crime.$witnesses.count" reverse="true">
												<set_value name="$witness" exact="$crime.$witnesses.{$i}" />
												<do_if value="not @$witness.isfunctional">
													<remove_value name="$crime.$witnesses.{$i}" />
												</do_if>
											</do_all>
											<debug_text text="'$crime.$witnesses.count (post remove crimes with no witnesses left): ' + $crime.$witnesses.count" chance="md.kuertee_chc.kCHC.$debugChance" />
										</do_if>
										<do_if value="not $crime.$witnesses.count" comment="search for 'crime ready for cleaning step 3' to find other instances of this test">
											<debug_text text="'remove_value $crimes.{$i} (no witnesses left): ' + $crimes.{$i}" chance="md.kuertee_chc.kCHC.$debugChance" />
											<remove_value name="$crimes.{$i}" />
										</do_if>
									</do_all>
									<debug_text text="'$crimes.count (post clean): ' + $crimes.count" chance="kCHC.$debugChance" />
									<do_if value="not $crimes.count">
										<remove_value name="kCHC.$pendingCrimesById.{$criminalShipId}" />
										<remove_value name="$criminalShipIds.{$i}" />
									</do_if>
								</do_all>
								<debug_text text="'$criminalShipIds (post clean, count: ' + $criminalShipIds.count + '): ' + $criminalShipIds" chance="kCHC.$debugChance" />
								<!-- clean-up self-defending against group -->
								<debug_text text="'kCHC.$selfDefendingAgainst.count: ' + kCHC.$selfDefendingAgainst.count" chance="kCHC.$debugChance" />
								<do_for_each name="$enemy" in="kCHC.$selfDefendingAgainst" reverse="true">
									<do_if value="not $enemy.isinliveview">
										<remove_from_group group="kCHC.$selfDefendingAgainst" object="$enemy" />
									</do_if>
								</do_for_each>
								<debug_text text="'kCHC.$selfDefendingAgainst (post clean, count: ' + kCHC.$selfDefendingAgainst.count + '): ' + kCHC.$selfDefendingAgainst" chance="kCHC.$debugChance" />
								<do_if value="(not $criminalShipIds.count) and (not kCHC.$selfDefendingAgainst.count)">
									<debug_text text="'reset_cue ' + Step6_CleanUp" chance="kCHC.$debugChance" />
									<reset_cue cue="Step6_CleanUp" />
								</do_if>
							</actions>
						</cue>
					</cues>
				</cue>
				<library name="GetObjectName" purpose="run_actions" comment="kuertee_chc_interrupts.kCHC_GetName and md.kuertee_chc.GetObjectName must be the same">
					<params>
						<param name="Object" />
					</params>
					<actions>
						<set_value name="$objectName" exact="{11383, 5003}" />
						<do_if value="$Object.exists">
							<do_if value="@$Object.idcode">
								<set_value name="$objectName" exact="$Object.knownname + ' (' + $Object.idcode + ')'" />
							</do_if>
							<do_else>
								<set_value name="$objectName" exact="$Object.knownname" />
							</do_else>
						</do_if>
						<do_elseif value="@$Object.macro">
							<set_value name="$objectName" exact="$Object.macro.name" />
						</do_elseif>
						<do_if value="$Object.isrealclass.station">
							<set_value name="$objectName" exact="$objectName + ', ' + $Object.sector.knownname" />
						</do_if>
						<return value="$objectName" />
					</actions>
				</library>
			</cues>
		</cue>
		<cue name="DebugChat" namespace="this">
			<conditions>
				<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
				<check_any>
					<check_value value="event.param3.$text == 'debug kuertee interval'" />
					<check_value value="event.param3.$text == 'debug chc list fines'" />
					<check_value value="event.param3.$text == 'debug chc station'" />
					<check_value value="event.param3.$text == 'debug chc fix fines'" />
					<check_value value="event.param3.$text == 'debug chc sanctioned'" />
					<check_value value="event.param3.$text == 'debug chc drone'" />
					<check_value value="event.param3.$text == 'debug chc record'" />
					<check_value value="event.param3.$text == 'debug chc transfer money'" />
					<check_value value="event.param3.$text == 'debug chc distress drone'" />
					<check_value value="event.param3.$text == 'debug staticdefense'" />
				</check_any>
			</conditions>
			<actions>
				<debug_text text="event.param3" />
				<do_if value="event.param3.$text == 'debug staticdefense'">
					<signal_objects object="player.galaxy" param="'StaticDefense_debugTotals'" />
				</do_if>
				<do_if value="event.param3.$text == 'debug chc distress drone'">
					<debug_text text="md.Notifications.DistressDroneReportsAttack" />
					<debug_text text="md.Notifications.DistressDroneReportsAttack.state" />
					<signal_objects object="player.galaxy" param="'report_attack'" />
					<signal_objects object="player.sector" param="'report_attack'" />
					<signal_objects object="player.entity" param="'report_attack'" />
				</do_if>
				<do_if value="event.param3.$text == 'debug chc transfer money'">
					<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
						$amount = 100Cr,
						$description = {161815, 801},
						$from = faction.player,
						$to = faction.argon,
						]" />
					<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
							$amount = 100Cr,
							$description = {161815, 802},
							$from = faction.player,
							$to = faction.argon,
							]" />
					<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
								$amount = 100Cr,
								$description = {161815, 803},
								$from = faction.player,
								$to = faction.argon,
								]" />
					<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
									$amount = 100Cr,
									$description = {161815, 804},
									$from = faction.player,
									$to = faction.argon,
									]" />
				</do_if>
				<do_if value="event.param3.$text == 'debug kuertee interval'">
					<do_if value="player.age - @md.$kuertee_interval_time gt 1s">
						<set_value name="md.$kuertee_interval_time" exact="player.age" />
						<do_if value="@md.$kuertee_interval">
							<remove_value name="md.$kuertee_interval" />
						</do_if>
						<do_else>
							<set_value name="md.$kuertee_interval" exact="100" />
						</do_else>
					</do_if>
					<debug_text text="'md.$kuertee_interval: ' + @md.$kuertee_interval" />
				</do_if>
				<do_elseif value="event.param3.$text == 'debug chc list fines'">
					<debug_text text="'$factionFines: ' + kCHC.$factionFines" />
					<do_for_each name="$faction" in="kCHC.$factionFines.keys.list">
						<debug_text text="'$faction: ' + $faction + ' $factionFines: ' + kCHC.$factionFines.{$faction}" />
					</do_for_each>
					<!-- kCHC.$crimesByShips.{$ship}.$victimFactions.indexof.{$attacker.owner} -->
					<debug_text text="'kCHC.$crimesByShips: ' + kCHC.$crimesByShips" />
					<do_for_each name="$ship" in="kCHC.$crimesByShips.keys.list">
						<debug_text text="'$ship: ' + $ship + ' (' + $ship.knownname + ', ' + $ship.idcode + ')'" />
						<do_for_each name="$key" in="kCHC.$crimesByShips.{$ship}.keys.list">
							<set_value name="$value" exact="kCHC.$crimesByShips.{$ship}.{$key}" />
							<do_if value="typeof $value == datatype.list or typeof $value == datatype.group">
								<debug_text text="'    ' + $key" />
								<set_value name="$list" exact="$value" />
								<do_for_each name="$item" in="$list">
									<debug_text text="'        ' + $item" />
								</do_for_each>
							</do_if>
							<do_else>
								<debug_text text="'    ' + $key + ': ' + kCHC.$crimesByShips.{$ship}.{$key}" />
							</do_else>
						</do_for_each>
					</do_for_each>
				</do_elseif>
				<do_elseif value="event.param3.$text == 'debug chc fix fines'">
					<set_value name="$debugChance_saved" exact="kCHC.$debugChance" />
					<set_value name="kCHC.$debugChance" exact="100" />
					<signal_cue_instantly cue="EnsureValidShipCrimeData" />
					<set_value exact="$debugChance_saved" name="kCHC.$debugChance" />
				</do_elseif>
				<do_elseif value="event.param3.$text == 'debug chc sanctioned'">
					<debug_text text="'player.target.assignedaipilot.$kCHC_isSanctioned: ' + @player.target.assignedaipilot.$kCHC_isSanctioned" />
					<debug_text text="'player.target.defencenpc.$kCHC_isSanctioned: ' + @player.target.defencenpc.$kCHC_isSanctioned" />
					<debug_text text="'player.target.defensible.assignedaipilot.$kCHC_isSanctioned: ' + @player.target.defensible.assignedaipilot.$kCHC_isSanctioned" />
					<debug_text text="'player.target.defensible.defencenpc.$kCHC_isSanctioned: ' + @player.target.defensible.defencenpc.$kCHC_isSanctioned" />
				</do_elseif>
				<do_elseif value="event.param3.$text == 'debug chc drone'">
					<debug_text text="'player.target.isunit: ' + player.target.isunit" />
					<debug_text text="'player.target.pilot.race: ' + player.target.pilot.race" />
				</do_elseif>
				<do_elseif value="event.param3.$text == 'debug chc station'">
					<debug_text text="'player.container.isclass.statikon: ' + @player.container.isclass.statikon" />
					<debug_text text="'player.container.isdefensestation: ' + @player.container.isdefensestation" />
					<debug_text text="'player.container.ispiratebase: ' + @player.container.ispiratebase" />
					<debug_text text="'player.container.isheadquarters: ' + @player.container.isheadquarters" />
					<debug_text text="'player.container.isfactionheadquarters: ' + @player.container.isfactionheadquarters" />
					<debug_text text="'player.container.container.isclass.station: ' + @player.container.container.isclass.station" />
					<debug_text text="'player.container.container.isdefensestation: ' + @player.container.container.isdefensestation" />
					<debug_text text="'player.container.container.ispiratebase: ' + @player.container.container.ispiratebase" />
					<debug_text text="'player.container.container.isheadquarters: ' + @player.container.container.isheadquarters" />
					<debug_text text="'player.container.container.isfactionheadquarters: ' + @player.container.container.isfactionheadquarters" />
				</do_elseif>
				<do_elseif value="event.param3.$text == 'debug chc record'">
					<do_if value="kCHC.$playerCriminalRecord.count">
						<do_for_each counter="$i" name="$record" in="kCHC.$playerCriminalRecord" reverse="true">
							<do_if value="not @$record.$isPaid">
								<run_actions ref="DebugData">
									<param name="Data" value="$record" />
								</run_actions>
								<set_value name="$isCrimeFound" exact="false" />
								<set_value name="$crimeShipFound" exact="null" />
								<do_for_each name="$ship" valuename="$crimeData" in="kCHC.$crimesByShips">
									<do_if value="$record.$shipName == $ship.knownname + ' (' + $ship.idcode + ')'">
										<set_value name="$crimeShipFound" exact="$ship" />
										<do_for_each counter="$j" name="$crime" in="$crimeData.$crimes">
											<do_if value="$crime == $record.$crime">
												<do_if value="$crimeData.$fines.{$j} == $record.$fines">
													<do_if value="$crimeData.$times.{$j} == $record.$time">
														<set_value name="$isCrimeFound" exact="true" />
														<break />
													</do_if>
												</do_if>
											</do_if>
										</do_for_each>
									</do_if>
								</do_for_each>
								<debug_text text="'$crimeShipFound: ' + $crimeShipFound + ' (' + @$crimeShipFound.idcode + ')'" />
								<do_if value="not $isCrimeFound">
									<signal_cue_instantly cue="CrimeConfirm" param="table[
										$crime = $record.$crime,
										$criminalShip = $crimeShipFound,
										$criminalShipName = $record.$shipName,
										$crimeTime = $record.$time,
										$crimeFines = $record.$fines,
										$victimShipStation = null,
										$victimShipStationName = $record.$victimName,
										$victimFaction = $record.$victimFaction,
										$isSelfDefense = false,
										$isIgnorePlayerCrime = true,
										$isSilent = true,
										$fromCue = namespace,
									]" />
								</do_if>
							</do_if>
						</do_for_each>
					</do_if>
				</do_elseif>
				<reset_cue cue="this" />
			</actions>
		</cue>
		<library name="DebugData" purpose="run_actions">
			<params>
				<param name="Data" />
				<param name="Depth" default="1" />
				<param name="Prefix" default="''" />
			</params>
			<actions>
				<set_value name="$indent" exact="''" />
				<do_all counter="$i" exact="$Depth - 1">
					<set_value name="$indent" exact="$indent + '    '" />
				</do_all>
				<do_if value="@$Prefix.knownname">
					<set_value name="$Prefix" exact="$Prefix + ' (' + $Prefix.knownname + ')'" />
				</do_if>
				<do_elseif value="@$Prefix.name">
					<set_value name="$Prefix" exact="$Prefix + ' (' + $Prefix.name + ')'" />
				</do_elseif>
				<do_if value="@$Data.knownname">
					<set_value name="$Data" exact="$Data + ' (' + $Data.knownname + ')'" />
				</do_if>
				<do_elseif value="@$Data.name">
					<set_value name="$Data" exact="$Data + ' (' + $Data.name + ')'" />
				</do_elseif>
				<debug_text text="$indent + $Prefix + ': ' + $Data" />
				<do_if value="(typeof $Data == datatype.list) or (typeof $Data == datatype.group)">
					<do_for_each name="$item" in="$Data" counter="$i">
						<run_actions ref="DebugData">
							<param name="Data" value="$item" />
							<param name="Depth" value="$Depth + 1" />
							<param name="Prefix" value="$i" />
						</run_actions>
					</do_for_each>
				</do_if>
				<do_elseif value="typeof $Data == datatype.table">
					<do_for_each name="$key" valuename="$value" in="$Data">
						<run_actions ref="DebugData">
							<param name="Data" value="$value" />
							<param name="Depth" value="$Depth + 1" />
							<param name="Prefix" value="$key" />
						</run_actions>
					</do_for_each>
				</do_elseif>
			</actions>
		</library>
	</cues>
</mdscript>
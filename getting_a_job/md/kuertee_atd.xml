<?xml version="1.0" encoding="utf-8"?>
<mdscript name="kuertee_atd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../xsd/md.xsd">
	<cues>
		<!-- <cue name="kATD" namespace="this" version="22"> -->
		<cue name="kATD" namespace="this" version="23">
			<conditions>
				<check_any>
					<event_cue_signalled cue="md.Setup.GameStart" />
					<event_game_loaded />
				</check_any>
				<check_value value="not @player.allmodules.{player.module}.isscenario" />
			</conditions>
			<actions>
				<debug_text text="'event.name: ' + event.name" />
				<debug_text text="'event.name: ' + event.name" />
				<set_value name="$debugChance" exact="100" />
				<set_value name="$isHideNotifications" exact="false" />
				<set_value name="kATD.$attentionNearbyAndNearer" exact="[attention.nearby, attention.adjacentroom, attention.inroom]" />
				<set_value name="$userDeadIsDead" exact="false" />
				<set_value name="$userSaveScumPenalty_timeMinutes" exact="60" />
				<set_value name="$userSaveScumPenalty_creditsPerc" exact="50" />
				<set_value name="$userSaveScumPenalty_death" exact="false" />
				<set_value name="$userIsIronManMode" exact="false" />
				<set_value name="$userIsNewStartMiner" exact="false" />
				<set_value name="$userIsNewStartTrader" exact="false" />
				<set_value name="$userIsNewStartFighter" exact="true" />
				<set_value name="$userIsNewStartSmallShip" exact="true" />
				<set_value name="$userIsNewStartMediumShip" exact="false" />
				<set_value name="$userIsNewStartLargeShip" exact="false" />
				<set_value name="$gameStartSector" exact="player.sector" />
				<run_actions ref="GetFriendliestFaction" result="$gameStartFaction" />
			</actions>
			<patch sinceversion="2">
				<debug_text text="'patch sinceversion 2, state: ' + this.state" />
				<remove_value name="kATD.$userIsInheritTrustOnMoney" />
			</patch>
			<patch sinceversion="3">
				<debug_text text="'patch sinceversion 3, state: ' + this.state" />
				<set_value name="kATD.$userExtraCountdownSecs" exact="0" />
			</patch>
			<patch sinceversion="4">
				<debug_text text="'patch sinceversion 4, state: ' + this.state" />
				<set_value name="kATD.$attentionNearbyAndNearer" exact="[attention.nearby, attention.adjacentroom, attention.inroom]" />
			</patch>
			<patch sinceversion="5">
				<debug_text text="'patch sinceversion 5, state: ' + this.state" />
				<reset_cue cue="K_ArriveAndLeaveStations" />
			</patch>
			<patch sinceversion="6">
				<debug_text text="'patch sinceversion 6, state: ' + this.state" />
				<set_value name="$userIsCloneInheritance" exact="false" />
				<set_value name="$userIsDescendantInheritance" exact="true" />
			</patch>
			<patch sinceversion="7">
				<debug_text text="'patch sinceversion 7, state: ' + this.state" />
				<set_value name="$userOwnershipOnDeath_clone" exact="$ownershipOnDeath_retained" />
				<set_value name="$userOwnershipOnDeath_descendant" exact="$ownershipOnDeath_inherited" />
				<set_value name="$userOwnershipOnDeath_assimilated" exact="$ownershipOnDeath_retained" />
				<remove_value name="$userIsCloneInheritance" />
				<remove_value name="$userIsDescendantInheritance" />
			</patch>
			<patch sinceversion="8">
				<debug_text text="'patch sinceversion 8, state: ' + this.state" />
				<set_value name="$userIsClonesRetainRelationships" exact="true" />
			</patch>
			<patch sinceversion="10">
				<debug_text text="'patch sinceversion 10, state: ' + this.state" />
				<set_value name="$userIsUseNoPenalty" exact="false" />
			</patch>
			<patch sinceversion="11">
				<debug_text text="'patch sinceversion 11, state: ' + this.state" />
				<set_value name="$userDestructionAtHullPerc" exact="1" />
			</patch>
			<patch sinceversion="12">
				<debug_text text="'patch sinceversion 12, state: ' + this.state" />
				<remove_value name="$isDoDebug1" />
				<remove_value name="$isDoDebug2" />
			</patch>
			<patch sinceversion="13">
				<debug_text text="'patch sinceversion 13, state: ' + this.state" />
				<set_value name="$userDeadIsDead" exact="false" />
				<set_value name="$userSaveScumPenalty_timeMinutes" exact="60" />
				<set_value name="$userSaveScumPenalty_creditsPerc" exact="50" />
				<set_value name="$userSaveScumPenalty_death" exact="false" />
			</patch>
			<patch sinceversion="20">
				<debug_text text="'patch sinceversion 20, state: ' + this.state" />
				<set_value name="$userIsIronManMode" exact="false" />
			</patch>
			<patch sinceversion="21">
				<debug_text text="'patch sinceversion 21, state: ' + this.state" />
				<set_value name="$userDeadIsDead" exact="false" />
			</patch>
			<patch sinceversion="22">
				<debug_text text="'patch sinceversion 22, state: ' + this.state" />
				<set_value name="$userIsNewStartMiner" exact="false" />
				<set_value name="$userIsNewStartTrader" exact="false" />
				<set_value name="$userIsNewStartFighter" exact="true" />
				<set_value name="$userIsNewStartSmallShip" exact="true" />
				<set_value name="$userIsNewStartMediumShip" exact="false" />
				<set_value name="$userIsNewStartLargeShip" exact="false" />
			</patch>
			<!-- getting a job override patch -->
			<patch sinceversion="23">
				<set_value name="$inheritanceTax" exact="true" />
				<set_value name="$losePersonalCash" exact="true" />
				<set_value name="$userIsNewStartMiner" exact="false" />
				<set_value name="$userIsNewStartTrader" exact="false" />
				<set_value name="$userIsNewStartFighter" exact="true" />
				<set_value name="$userIsNewStartSmallShip" exact="true" />
				<set_value name="$userIsNewStartMediumShip" exact="false" />
				<set_value name="$userIsNewStartLargeShip" exact="false" />
				<set_value name="$userIsUseClones" exact="true" />
				<set_value name="$userCloneCostLevel" exact="level.hard" />
				<set_value name="$userCloneCost" exact="500000Cr" />
				<set_value name="$userIsUseDescendants" exact="true" />
				<set_value name="$userIsUseTeleportToSafety" exact="false" />
				<set_value name="$userIsUseRansom" exact="false" />
				<set_value name="$userRansomPerc" exact="25" />
				<set_value name="$userIsUseAssimilation" exact="false" />
				<set_value name="$userIsLoseInventoryItems" exact="true" />
				<set_value name="$userInheritTrustOnMoney" exact="0Cr" />
				<set_value name="$userIsAllowKhaakAssimilation" exact="false" />
				<set_value name="$userIsAllowXenonAssimilation" exact="false" />
				<set_value name="$userIsLoseHQ" exact="false" />
				<set_value name="$userOwnershipOnDeath_clone" exact="$ownershipOnDeath_retained" />
				<set_value name="$userOwnershipOnDeath_descendant" exact="$ownershipOnDeath_inherited" />
				<set_value name="$userOwnershipOnDeath_assimilated" exact="$ownershipOnDeath_retained" />
				<set_value name="$userIsUseNoPenalty" exact="false" />
			</patch>
			<cues>
				<cue name="Init" version="5">
					<conditions>
						<check_any>
							<event_cue_signalled />
							<event_game_loaded />
						</check_any>
						<check_value value="not @player.allmodules.{player.module}.isscenario" />
					</conditions>
					<actions>
						<debug_text text="'$debugChance: ' + $debugChance" />
						<do_if value="not $debugChance?">
							<set_value name="$debugChance" exact="0" />
						</do_if>
						<debug_text text="'$debugChance: ' + $debugChance" />
						<debug_text text="'player.module: ' + player.module" chance="$debugChance" />
						<do_if value="not @$isConfigSet">
							<set_value name="$isConfigSet" exact="true" />
							<set_value name="$userIsUseClones" exact="true" />
							<set_value name="$userCloneCostLevel" exact="level.hard" />
							<set_value name="$userCloneCost" exact="500000Cr" />
							<set_value name="$cloneCount" exact="0" />
							<set_value name="$userIsUseDescendants" exact="true" />
							<set_value name="$userIsUseTeleportToSafety" exact="false" />
							<set_value name="$userIsUseRansom" exact="false" />
							<set_value name="$userRansomPerc" exact="25" />
							<set_value name="$userIsUseAssimilation" exact="false" />
							<set_value name="$userIsLoseInventoryItems" exact="true" />
							<!-- <set_value name="$userIsInheritTrustOnMoney" exact="true" /> -->
							<set_value name="$userInheritTrustOnMoney" exact="0Cr" />
							<set_value name="$userIsAllowKhaakAssimilation" exact="false" />
							<set_value name="$userIsAllowXenonAssimilation" exact="false" />
							<set_value name="$userIsLoseHQ" exact="false" />
							<set_value name="$ownershipOnDeath_retained" exact="31" />
							<set_value name="$ownershipOnDeath_inherited" exact="32" />
							<set_value name="$ownershipOnDeath_confiscated" exact="33" />
							<set_value name="$ownershipOnDeath_destroyed" exact="34" />
							<set_value name="$ownershipOnDeath_confiscated_by_killer" exact="35" />
							<set_value name="$userOwnershipOnDeath_clone" exact="$ownershipOnDeath_retained" />
							<set_value name="$userOwnershipOnDeath_descendant" exact="$ownershipOnDeath_inherited" />
							<set_value name="$userOwnershipOnDeath_assimilated" exact="$ownershipOnDeath_retained" />
							<set_value name="$userIsUseNoPenalty" exact="false" />
							<!-- getting a job -->
							<set_value name="$inheritanceTax" exact="true" />
							<set_value name="$losePersonalCash" exact="true" />
						</do_if>
						<do_if value="not $userDestructionAtHullPerc?">
							<set_value name="$userDestructionAtHullPerc" exact="1" />
						</do_if>
						<do_if value="not $ship?">
							<set_value name="$ship" exact="null" />
						</do_if>
						<do_if value="not $shipCountdownCues?">
							<set_value name="$shipCountdownCues" exact="table[]" />
						</do_if>
						<do_if value="not $propertiesInTrust?">
							<create_group groupname="$propertiesInTrust" />
						</do_if>
						<do_if value="not $playerMoneyInTrust?">
							<set_value name="$playerMoneyInTrust" exact="0" />
						</do_if>
						<set_value name="$getPlayerPropertiesCallback" exact="null" />
						<do_if value="not $cloningStations?">
							<set_value name="$cloningStations" exact="table[]" />
						</do_if>
						<do_if value="not $cloneLocations?">
							<create_group groupname="$cloneLocations" />
						</do_if>
						<do_if value="not $station?">
							<set_value name="$station" exact="null" />
						</do_if>
						<do_if value="not $isPropertiesInTrust?">
							<set_value name="$isPropertiesInTrust" exact="false" />
						</do_if>
						<do_if value="not $deathNotice?">
							<set_value name="$deathNotice" exact="''" />
						</do_if>
						<do_if value="not $oldPlayerName?">
							<set_value name="$oldPlayerName" exact="''" />
						</do_if>
						<do_if value="not $deathAlternative?">
							<set_value name="$deathAlternative" exact="null" />
						</do_if>
						<do_if value="not $shipsToDestroy?">
							<create_group groupname="$shipsToDestroy" />
						</do_if>
						<do_if value="not $isHideNotifications?">
							<set_value name="$isHideNotifications" exact="false" />
						</do_if>
						<do_if value="not $clonedCounter?">
							<set_value name="$clonedCounter" exact="0" />
						</do_if>
						<do_if value="not $ransomedItems?">
							<set_value name="$ransomedItems" exact="[]" />
						</do_if>
						<do_if value="not $boardingOperationCuesByTargets?">
							<set_value name="$boardingOperationCuesByTargets" exact="table[]" />
						</do_if>
						<do_if value="not $userCountdownAtHullSecs?">
							<set_value name="$userCountdownAtHullSecs" exact="15" />
							<set_value name="$userExtraCountdownSecs" exact="0" />
						</do_if>
						<do_if value="not kATD.$userIsPrioritiseClone?">
							<set_value name="kATD.$userIsPrioritiseClone" exact="true" />
						</do_if>
						<do_if value="not $userBonusShieldOnEvadeSuccess_s?">
							<set_value name="$userBonusShieldOnEvadeSuccess_s" exact="75" />
							<set_value name="$userBonusShieldOnEvadeSuccess_m" exact="50" />
							<set_value name="$userBonusShieldOnEvadeSuccess_lxl" exact="25" />
						</do_if>
						<do_if value="not $userIsClonesRetainRelationships?">
							<set_value name="$userIsClonesRetainRelationships" exact="true" />
						</do_if>
						<get_factions_by_tag result="kATD.$validFactions" tag="tag.economic" />
						<get_factions_by_tag result="$validFactions2" tag="tag.plunder" />
						<do_all counter="$i" exact="$validFactions2.count">
							<do_if value="not $validFactions.indexof.{$validFactions2.{$i}}">
								<append_to_list name="$validFactions" exact="$validFactions2.{$i}" />
							</do_if>
						</do_all>
						<remove_value name="$validFactions2" />
						<reset_cue cue="BoardingOperationStarted" />
						<reset_cue cue="BoardingOperationFinished" />
						<debug_text text="'player.hasemergencyeject: ' + player.hasemergencyeject" />
						<debug_text text="'player.isemergencyejectactive: ' + player.isemergencyejectactive" />
						<set_emergency_eject_active active="false" />
						<debug_text text="'player.hasemergencyeject (post): ' + player.hasemergencyeject" />
						<debug_text text="'player.isemergencyejectactive (post): ' + player.isemergencyejectactive" />
						<signal_cue cue="OnPlayerChangedRoom" />
						<run_actions ref="ResetObjectMinHulls" />
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="CheckEscapePodAvailability">
					<conditions>
						<check_any>
							<event_player_started_control />
							<event_player_stopped_control />
							<event_cue_signalled />
						</check_any>
					</conditions>
					<actions>
						<!-- getting a job -->
						<!--<debug_text text="'md.EscapePod.EscapePodMain.exists: ' + @md.EscapePod.EscapePodMain.exists" chance="$debugChance" />
						<do_if value="@md.EscapePod.EscapePodMain.exists"> -->
						<!-- <raise_lua_event name="'kATD.SetEscapePodAvailability'" param="player.ship and @player.ship.owner == faction.player" /> -->
						<raise_lua_event name="'kATD.SetEscapePodAvailability'" param="player.ship" />
						<raise_lua_event name="'kATD.EnableEscapePodButton'" param="not @player.ship.dock" />
						<!-- </do_if> -->
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="OnPlayerChangedRoom">
					<conditions>
						<check_any>
							<event_object_changed_room object="player.entity" />
							<event_cue_signalled />
						</check_any>
					</conditions>
					<actions>
						<debug_text text="'event.name: ' + event.name + ' param: ' + @event.param" chance="$debugChance" />
						<signal_cue cue="CheckEscapePodAvailability" />
						<do_if value="ShipCleanUp.state == cuestate.waiting">
							<signal_cue_instantly cue="ShipCleanUp" />
						</do_if>
					</actions>
					<cues>
						<cue name="OnPlayerChangedRoom2"><!-- required because needs time for clean-up cues -->
							<actions>
								<debug_text text="'event.name: ' + event.name + ' param: ' + @event.param" chance="$debugChance" />
								<do_if value="
									(not @md.kuertee_chc.kCHC.$impoundingShips.indexof.{player.ship}) and
									(not @md.kuertee_chc.kCHC.$impoundedShips.indexof.{player.ship})
								">
									<set_value name="$ship" exact="player.ship" />
								</do_if>
								<do_else>
									<set_value name="$ship" exact="null" />
								</do_else>
								<debug_text text="'$ship: ' + @$ship + ' (' + @$ship.knownname + ')'" chance="$debugChance" />
								<do_if value="$ship and $ship.isplayerowned">
									<signal_cue cue="ShipEntered" />
								</do_if>
								<do_if value="player.station != $station">
									<set_value name="$station" exact="player.station" />
									<debug_text text="'$station: ' + @$station + ' (' + @$station.knownname + ')'" chance="$debugChance" />
								</do_if>
								<reset_cue cue="parent" />
								<cancel_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="ShipEntered">
					<conditions>
						<event_cue_signalled />
						<check_value value="$ship.isplayerowned" />
					</conditions>
					<actions>
						<set_value name="$hull" exact="$ship.hullpercentage" />
						<set_value name="$dps" exact="0" />
						<set_value name="$attacker" exact="null" />
						<set_value name="$savedDamages" exact="[]" />
						<set_value name="$bonusShieldCount" exact="0" />
					</actions>
					<cues>
						<cue name="CheckCHCImpounded">
							<conditions>
								<event_player_stopped_control />
							</conditions>
							<cues>
								<cue name="CheckCHCImpounded2" checktime="player.age + 1s">
									<actions>
										<do_if value="
											@md.kuertee_chc.kCHC.$impoundingShips.indexof.{player.ship} or
											@md.kuertee_chc.kCHC.$impoundedShips.indexof.{player.ship}
										">
											<signal_cue_instantly cue="ShipCleanUp" param="table[$isKeepInvincible = true]" />
										</do_if>
										<reset_cue cue="parent" />
										<reset_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
						<cue name="ShipCleanUp">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<!-- <do_if value="not @event.param.$isKeepInvincible">
									<debug_text text="'set_object_min_hull ' + $ship + ' (' + @$ship.knownname + ') to 0'" />
									<set_object_min_hull object="$ship" exact="0" />
								</do_if> -->
								<set_value name="$ship" exact="null" />
								<reset_cue cue="parent" />
								<reset_cue cue="this" />
							</actions>
						</cue>
						<library name="GetIsAttackerCanImpoundShip" purpose="run_actions">
							<params>
								<param name="Attacker" />
								<param name="Ship" />
							</params>
							<actions>
								<set_value name="$isAttackerCanImpoundShip" exact="false" />
								<do_if value="@md.kuertee_chc.kCHC.$userIsImpoundPlayerShipOnAttack and @md.kuertee_chc.GetIsAttackerCanImpoundShip and @$Ship.assignedaipilot.isclass.npc">
									<set_value name="$isAttackerCanImpoundShip" exact="false" />
									<signal_cue_instantly cue="md.kuertee_chc.GetIsAttackerCanImpoundShip" param="table[
										$cue = this,
										$attacker = $Attacker,
										$ship = $Ship
									]" />
									<debug_text text="'$isAttackerCanImpoundShip: ' + @$isAttackerCanImpoundShip + ' ($Attacker: ' + @$Attacker.knownname + ', owner: ' + @$Attacker.owner + ')'" chance="kATD.$debugChance" />
								</do_if>
								<return value="$isAttackerCanImpoundShip" />
							</actions>
						</library>
						<cue name="OnPlayerShipHit" instantiate="true">
							<conditions>
								<check_any>
									<event_object_attacked object="$ship" />
									<event_object_shield_damaged object="$ship" />
									<event_object_hull_damaged object="$ship" />
									<event_player_ship_hit />
								</check_any>
								<check_any>
									<check_value value="not $time_OnPlayerShipHit?" />
									<check_value value="player.age gt $time_OnPlayerShipHit + 0.25s" />
								</check_any>
								<check_value value="not @md.kuertee_chc.kCHC.$impoundingShips.indexof.{$ship}" />
								<check_value value="not @md.kuertee_chc.kCHC.$impoundedShips.indexof.{$ship}" />
							</conditions>
							<actions>
								<set_value name="$time_OnPlayerShipHit" exact="player.age" />
								<do_if value="not $ship.isindestructible">
									<debug_text text="'set_object_min_hull ' + $ship + ' (' + @$ship.knownname + ') to 1'" />
									<set_object_min_hull object="$ship" exact="1" />
								</do_if>
								<do_if value="$ship.hull == 1">
									<signal_cue_instantly cue="PlayerDeath" param="table[$ship = $ship, $attackerFaction = $attackerFaction]" />
								</do_if>
								<set_value name="$attacker_last" exact="$attacker" />
								<set_value name="$attacker" exact="null" />
								<do_if value="event.name == 'event_object_attacked'">
									<set_value name="$attacker" exact="event.param" />
								</do_if>
								<do_elseif value="event.name == 'event_player_ship_hit'">
									<set_value name="$attacker" exact="event.param2" />
								</do_elseif>
								<do_else>
									<set_value name="$attacker" exact="$attacker_last" />
								</do_else>
								<do_if value="@$attacker.defensible">
									<set_value name="$attacker" exact="$attacker.defensible" />
								</do_if>
								<debug_text text="'$attacker: ' + @$attacker.knownname + ' (' + @$attacker.idcode + ')'" chance="$debugChance" />
								<do_if value="$attacker != $attacker_last">
									<reset_cue cue="AttackerDestroyed" />
								</do_if>
								<set_value name="$time_lastDamage" exact="player.age" />
								<do_if value="PlayerShipDPSChecker.state == cuestate.waiting">
									<signal_cue cue="PlayerShipDPSChecker" />
								</do_if>
								<do_else>
									<set_value name="$isPlayerHit" exact="true" />
								</do_else>
								<!-- <do_if value="ResetBonusShieldCounter_After10Min.state == cuestate.complete">
									<reset_cue cue="ResetBonusShieldCounter_After10Min" />
								</do_if> -->
								<cancel_cue cue="this" />
							</actions>
						</cue>
						<cue name="AttackerDestroyed">
							<conditions>
								<event_object_destroyed object="$attacker" check="false" />
							</conditions>
							<actions>
								<do_if value="@kATD.$shipCountdownCues.{$ship}">
									<!-- destruction averted -->
									<signal_cue_instantly cue="StopDestructionCountdown" param="table[$ship = $ship, $isDestroy = false, $attacker = $attacker, $attackerFaction = @$attackerFaction, $isDestructionAverted = true]" />
								</do_if>
								<reset_cue cue="PlayerShipDPSChecker" />
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="PlayerShipDPSChecker">
							<conditions>
								<event_cue_signalled />
								<check_value value="
									(not @md.kuertee_chc.kCHC.$impoundingShips.indexof.{$ship}) and
									(not @md.kuertee_chc.kCHC.$impoundedShips.indexof.{$ship})
								" />
							</conditions>
							<actions>
								<do_if value="not $ship.isindestructible">
									<debug_text text="'set_object_min_hull ' + $ship + ' (' + @$ship.knownname + ') to 1'" />
									<set_object_min_hull object="$ship" exact="1" />
								</do_if>
								<set_value name="$isPlayerHit" exact="true" />
								<set_value name="$savedDamages" exact="[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]" />
								<set_value name="$hull" exact="$ship.hullpercentage" />
								<set_value name="$shield" exact="$ship.shieldpercentage" />
							</actions>
							<cues>
								<cue name="PlayerShipDPSCheckerInterval" instantiate="true" checkinterval="1s">
									<conditions>
										<check_value value="not $ship.boost.active" />
									</conditions>
									<actions>
										<debug_text text="''" chance="@md.$kuertee_interval" />
										<do_if value="
											@md.kuertee_chc.kCHC.$impoundingShips.indexof.{$ship} or
											@md.kuertee_chc.kCHC.$impoundedShips.indexof.{$ship}
										">
											<reset_cue cue="PlayerShipDPSChecker" />
										</do_if>
										<do_else>
											<set_value name="$damage" exact="($hull + $shield) - ($ship.hullpercentage + $ship.shieldpercentage)" />
											<do_if value="$damage">
												<!-- save damage -->
												<debug_text text="'1. DAMAGE RECEIVED, INCREASE DPS'" chance="kATD.$debugChance" />
												<set_value operation="insert" name="$savedDamages.{1}" exact="$damage" />
											</do_if>
											<do_else>
												<!-- no damage received or damage received but hull is already at 1 and hull is protected at 1 -->
												<!-- only record this no-damage, if player is NOT hit -->
												<!-- if hit, do NOT record this no-damage to maintain the previous dps -->
												<!-- getting a job death -->
												<do_if value="$ship.hull == 1">
													<do_if value="not @kATD.$shipCountdownCues.{$ship}">
														<signal_cue_instantly cue="PlayerDeath" param="table[$ship = $ship, $attackerFaction = $attackerFaction]" />
													</do_if>
													<do_else>
														<signal_cue_instantly cue="CancelAlarm" param="table[$ship = $ship, $isDestroy = true, $attackerFaction = @$attackerFaction, $isDestructionAverted = false]" />
													</do_else>
												</do_if>
												<do_if value="not $isPlayerHit">
													<debug_text text="'1. NO DAMAGE RECORDED AND NOT HIT, DECREASE DPS'" chance="kATD.$debugChance" />
													<set_value operation="insert" name="$savedDamages.{1}" exact="$damage" />
												</do_if>
												<do_else>
													<debug_text text="'1. NO DAMAGE RECORDED BUT HIT, MAINTAIN DPS'" chance="kATD.$debugChance" />
												</do_else>
											</do_else>
											<set_value name="$isPlayerHit" exact="false" />
											<do_if value="$savedDamages.count gt $userCountdownAtHullSecs">
												<resize_list list="$savedDamages" count="$userCountdownAtHullSecs" />
											</do_if>
											<debug_text text="'$savedDamages: ' + $savedDamages" chance="kATD.$debugChance" />
											<set_value name="$hull" exact="$ship.hullpercentage" />
											<set_value name="$shield" exact="$ship.shieldpercentage" />
											<do_if value="$savedDamages.count">
												<set_value name="$damageOverTime" exact="0" />
												<do_all counter="$i" exact="$savedDamages.count">
													<set_value name="$damageOverTime" exact="$damageOverTime + $savedDamages.{$i}" />
												</do_all>
												<set_value name="$dps" exact="$damageOverTime / ($savedDamages.count)f" />
												<remove_value name="$damageOverTime" />
												<debug_text text="'$dps: ' + $dps + ' ($hull + $shield) / $userCountdownAtHullSecs: ' + (($hull + $shield) / ($userCountdownAtHullSecs)f)" chance="kATD.$debugChance" />
												<!-- <do_if value="
													$hull + $shield lt kATD.$userDestructionAtHullPerc + 1
													or
													$dps ge ($hull + $shield) / ($userCountdownAtHullSecs)f
												">
													<!- dps ge (hull / $userCountdownAtHullSecs seconds) AND le $userDestructionAtHullPerc ->
													<debug_text text="'2. HULL+SHIELD TOO LOW, DPS GREATER THAN HULL+SHIELD / $userCountdownAtHullSecs'" chance="kATD.$debugChance" />
													<do_if value="not @kATD.$shipCountdownCues.{$ship}">
														<signal_cue_instantly cue="StartDestructionCountdown" param="table[$ship = $ship, $attacker = $attacker, $attackerFaction = @$attacker.owner]" />
													</do_if>
													<do_elseif value="$hull + $shield lt kATD.$userDestructionAtHullPerc + 1">
														<set_value name="kATD.$shipCountdownCues.{$ship}.$isDestructionCertain" exact="true" />
													</do_elseif>
													<set_value name="$time_countdownLastShown" exact="player.age" />
												</do_if>
												<do_elseif value="$dps ge ($hull + $shield) / ($userCountdownAtHullSecs)f"> -->
												<do_if value="$dps ge ($hull + $shield) / ($userCountdownAtHullSecs)f">
													<!-- dps ge (hull / $userCountdownAtHullSecs seconds) -->
													<debug_text text="'2. DPS GREATER THAN HULL+SHIELD / $userCountdownAtHullSecs'" chance="kATD.$debugChance" />
													<do_if value="not @kATD.$shipCountdownCues.{$ship}">
														<!-- <signal_cue_instantly cue="StartDestructionCountdown" param="table[$ship = $ship, $attacker = $attacker, $attackerFaction = @$attacker.owner]" /> -->
														<signal_cue_instantly cue="TriggerAlarm" param="table[$ship = $ship, $attacker = $attacker, $attackerFaction = @$attacker.owner]" />
													</do_if>
													<!-- <do_elseif value="$hull + $shield lt kATD.$userDestructionAtHullPerc + 1">
														<set_value name="kATD.$shipCountdownCues.{$ship}.$isDestructionCertain" exact="true" />
													</do_elseif> -->
													<set_value name="$time_countdownLastShown" exact="player.age" />
													<!-- </do_elseif> -->
												</do_if>
												<do_elseif value="
													player.age gt @$time_countdownLastShown + 3 and
													$dps lt ($hull + $shield) / ($userCountdownAtHullSecs)f
												">
													<!-- <do_elseif value="
													(not @kATD.$shipCountdownCues.{$ship}.$isDestructionCertain) and
													player.age gt @$time_countdownLastShown + 3 and
													$dps lt ($hull + $shield) / ($userCountdownAtHullSecs)f
												"> -->
													<!-- dps le (hull / $userCountdownAtHullSecs seconds) -->
													<debug_text text="'2. DPS LESS THAN HULL+SHIELD / $userCountdownAtHullSecs'" chance="kATD.$debugChance" />
													<do_if value="@kATD.$shipCountdownCues.{$ship}">
														<!-- destruction averted -->
														<!-- <signal_cue_instantly cue="StopDestructionCountdown" param="table[$ship = $ship, $isDestroy = false, $attacker = $attacker, $attackerFaction = @$attackerFaction, $isDestructionAverted = true]" /> -->
														<signal_cue_instantly cue="CancelAlarm" param="table[$ship = $ship, $isDestroy = false, $attackerFaction = @$attackerFaction, $isDestructionAverted = true]" />
													</do_if>
													<debug_text text="'$dps: ' + $dps + ' time: ' + (player.age - @$time_lastDamage)" chance="kATD.$debugChance" />
													<do_if value="(not $dps) and player.age - @$time_lastDamage gt 2min">
														<reset_cue cue="PlayerShipDPSChecker" />
													</do_if>
												</do_elseif>
												<set_value name="this.static.$dps" exact="$dps" />
											</do_if>
											<!-- </do_if> -->
										</do_else>
										<cancel_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
					</cues>
				</cue>
				<cue name="ResetBonusShieldCounter_After10Min">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<cues>
						<cue name="ResetBonusShieldCounter_After10Min2" checktime="player.age + 10min">
							<actions>
								<set_value name="$bonusShieldCount" exact="0" />
								<reset_cue cue="parent" />
								<cancel_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="TriggerAlarm" namespace="this" instantiate="true">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="$ship" exact="@event.param.$ship" />
						<set_value name="$attacker" exact="@event.param.$attacker" />
						<set_value name="$attackerFaction" exact="@event.param.$attackerFaction" />
						<do_if value="$ship">
							<do_if value="@kATD.$shipCountdownCues.{$ship}">
								<!-- already an alarm, cancel this one, and let the other continue -->
								<cancel_cue cue="this" />
							</do_if>
							<do_elseif value="$ship.isclass.spacesuit or $ship.hull == 1">
								<!-- no alarm, just death -->
								<signal_cue_instantly cue="PlayerDeath" param="table[$ship = $ship, $attackerFaction = $attackerFaction]" />
								<cancel_cue cue="this" />
							</do_elseif>
							<do_else>
								<set_value name="kATD.$shipCountdownCues.{$ship}" exact="this" />
								<!-- getting a job alarm and lighting -->
								<play_sound object="player.entity.room" sound="'abandon_ship_alarm'" />
								<set_cockpit_tint r="125" g="10" b="10" frequency="0.25" amplitude="0.85" />
							</do_else>
						</do_if>
						<do_else>
							<cancel_cue cue="this" />
						</do_else>
					</actions>
				</cue>

				<cue name="CancelAlarm" namespace="this">
					<conditions>
						<event_cue_signalled />
						<check_value value="PlayerDeath.state == cuestate.waiting" />
					</conditions>
					<actions>
						<reset_cue cue="TriggerAlarm" />
						<debug_text text="'event.param: ' + event.param" chance="kATD.$debugChance" />
						<set_value name="$ship" exact="@event.param.$ship" />
						<set_value name="$isDestroy" exact="@event.param.$isDestroy" />
						<set_value name="$attackerFaction" exact="@event.param.$attackerFaction" />
						<set_value name="$isDestructionAverted" exact="@event.param.$isDestructionAverted" />
						<do_if value="@kATD.$shipCountdownCues.{$ship}">
							<cancel_cue cue="kATD.$shipCountdownCues.{$ship}" />
							<remove_value name="kATD.$shipCountdownCues.{$ship}" />
						</do_if>
						<do_if value="$ship.assignedaipilot.isclass.npc">
							<signal_objects object="$ship.assignedaipilot" param="'npc__return_to_post'" />
						</do_if>
						<do_if value="$isDestroy">
							<do_if value="$ship == @player.ship">
								<!-- still in the ship, player death -->
								<signal_cue_instantly cue="PlayerDeath" param="table[$ship = $ship, $attackerFaction = $attackerFaction]" />
								<reset_cue cue="this" />
							</do_if>
							<do_else>
								<!-- not used: -->
								<!-- player must have escaped from the ship -->
								<!-- continue into cues to destroy the ship in a cutscene in the targetmonitor -->
								<!-- note: destruction cutscene can't play in target monitor -->
								<!-- used: -->
								<!-- just destroy the ship -->
								<destroy_object object="$ship" explosion="true" />
								<reset_cue cue="this" />
							</do_else>
						</do_if>
						<do_elseif value="not $isDestructionAverted">
							<reset_cue cue="this" />
						</do_elseif>
					</actions>
					<cues>
						<cue name="ClearAlarmDPS" checktime="player.age + 3s">
							<actions>
								<debug_text text="'reset_cue ' + PlayerShipDPSChecker" chance="kATD.$debugChance" />
								<reset_cue cue="PlayerShipDPSChecker" />
								<reset_cue cue="parent" />
								<cancel_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>

				<cue name="StartDestructionCountdown" namespace="this" instantiate="true">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<debug_text text="'event.param: ' + event.param" chance="kATD.$debugChance" />
						<set_value name="$ship" exact="@event.param.$ship" />
						<set_value name="$playerOccupiedShip" exact="player.occupiedship" />
						<debug_text text="'$ship: ' + $ship.knownname + ', ' + $ship.idcode" chance="kATD.$debugChance" />
						<set_value name="$attacker" exact="@event.param.$attacker" />
						<set_value name="$attackerFaction" exact="@event.param.$attackerFaction" />
						<set_value name="$isShown" exact="false" />
						<do_if value="$ship">
							<do_if value="$ship.isclass.spacesuit">
								<!-- no countdown -->
								<signal_cue_instantly cue="PlayerDeath" param="table[$ship = $ship, $attackerFaction = $attackerFaction]" />
								<cancel_cue cue="this" />
							</do_if>
							<do_else>
								<do_if value="@kATD.$shipCountdownCues.{$ship}">
									<!-- alread a countdown, cancel this one, and let the other continue -->
									<cancel_cue cue="this" />
								</do_if>
								<do_else>
									<set_value name="kATD.$shipCountdownCues.{$ship}" exact="this" />
									<debug_text text="'kATD.$shipCountdownCues.{$ship}: ' + kATD.$shipCountdownCues.{$ship}" chance="kATD.$debugChance" />
									<set_value name="$countdown" exact="kATD.$userCountdownAtHullSecs + kATD.$userExtraCountdownSecs" />
									<set_value name="$isShown" exact="true" />
								</do_else>
								<set_value name="kATD.$shipCountdownCues.{$ship}.$isDestructionCertain" exact="$ship.shieldpercentage + $ship.hullpercentage lt kATD.$userDestructionAtHullPerc + 1" />
								<do_if value="$isShown">
									<run_actions ref="GetIsAttackerCanImpoundShip" result="$isAttackerCanImpoundShip">
										<param name="Attacker" value="$attacker" />
										<param name="Ship" value="$ship" />
									</run_actions>
									<debug_text text="$ship + ' kATD.$shipCountdownCues.{$ship}: ' + kATD.$shipCountdownCues.{$ship}" chance="kATD.$debugChance" />
									<do_if value="(not $isAttackerCanImpoundShip) and @$ship.assignedaipilot.isclass.npc">
										<signal_objects object="$ship.assignedaipilot" param="'npc__leave_post'" />
									</do_if>
									<set_value name="$dps_old" exact="0" />
									<set_value name="$dps_trend" exact="0" />
									<include_actions ref="Countdown_SetDPSData" />
									<debug_text text="'$countdown: ' + $countdown" chance="kATD.$debugChance" />
									<raise_lua_event name="'kATDHUD.ShowCountdown'" param="$countdown" />
								</do_if>
							</do_else>
						</do_if>
						<do_else>
							<cancel_cue cue="this" />
						</do_else>
					</actions>
					<cues>
						<cue name="Countdown">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<set_value name="$isCountdownPaused" exact="false" />
							</actions>
							<cues>
								<cue name="Countdown_Pause" instantiate="true">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<event_ui_triggered screen="'TransporterMenu'" />
											<event_ui_triggered screen="'MapMenu'" />
										</check_any>
									</conditions>
									<actions>
										<debug_text text="event.name + ' event.param: ' + event.param + ' event.param2: ' + event.param2" chance="kATD.$debugChance" />
										<do_if value="event.name == 'event_cue_signalled'">
											<set_value name="$isCountdownPaused" exact="not $isCountdownPaused" />
										</do_if>
										<do_elseif value="event.name == 'event_ui_triggered'">
											<do_if value="event.param2 == 'menu_close'">
												<set_value name="$isCountdownPaused" exact="false" />
											</do_if>
											<do_else>
												<set_value name="$isCountdownPaused" exact="true" />
											</do_else>
										</do_elseif>
										<debug_text text="'$isCountdownPaused: ' + $isCountdownPaused" chance="kATD.$debugChance" />
										<cancel_cue cue="this" />
									</actions>
								</cue>
								<cue name="CountdownActual" instantiate="true" checkinterval="1s">
									<actions>
										<debug_text text="''" chance="@md.$kuertee_interval" />
										<debug_text text="'$isCountdownPaused: ' + $isCountdownPaused" chance="kATD.$debugChance" />
										<do_if value="not $isCountdownPaused">
											<do_if value="$ship == $playerOccupiedShip">
												<debug_text text="'$isDestructionCertain: ' + @kATD.$shipCountdownCues.{$ship}.$isDestructionCertain" chance="kATD.$debugChance" />
												<do_if value="not @kATD.$shipCountdownCues.{$ship}.$isDestructionCertain">
													<include_actions ref="Countdown_SetDPSData" />
													<debug_text text="'$countdown (raise_lua_event kATDHUD.ShowCountdown): ' + $countdown" chance="kATD.$debugChance" />
													<raise_lua_event name="'kATDHUD.ShowCountdown'" param="$countdown" />
												</do_if>
												<do_else>
													<debug_text text="'$isDestructionCertain (confirmed): ' + @kATD.$shipCountdownCues.{$ship}.$isDestructionCertain" chance="kATD.$debugChance" />
													<include_actions ref="Countdown_SetDPSData" />
													<debug_text text="'$countdown (raise_lua_event kATDHUD.ShowCountdownDestructionCertain): ' + $countdown" chance="kATD.$debugChance" />
													<raise_lua_event name="'kATDHUD.ShowCountdownDestructionCertain'" param="$countdown" />
												</do_else>
												<set_value name="$isShown" exact="true" />
												<!-- <show_notification text="{111204, 101} + ' ' + $ship.knownname + ': ' + $countdown + 's.'" timeout="0.5s" /> -->
											</do_if>
											<do_else>
												<include_actions ref="Countdown_SetDPSData" />
												<do_if value="$isShown">
													<debug_text text="'$countdown (raise_lua_event kATDHUD.HideCountdown): ' + $countdown" chance="kATD.$debugChance" />
													<raise_lua_event name="'kATDHUD.HideCountdown'" />
													<set_value name="$isShown" exact="false" />
												</do_if>
												<show_notification text="{111204, 101} + ' ' + $ship.knownname + ': ' + $countdown + 's.'" timeout="0.5s" />
											</do_else>
											<do_if value="$countdown gt 0">
												<set_value name="$countdown" exact="$countdown - 1" />
											</do_if>
											<do_elseif value="$countdown le 0">
												<include_actions ref="Countdown_SetDPSData" />
												<set_value name="$hull" exact="$ship.hullpercentage" />
												<set_value name="$shield" exact="$ship.shieldpercentage" />
												<do_if value="kATD.$shipCountdownCues.{$ship}.$isDestructionCertain or ($hull + $shield lt kATD.$userDestructionAtHullPerc + 1)">
													<signal_cue_instantly cue="StopDestructionCountdown" param="table[$ship = $ship, $isDestroy = true, $attacker = $attacker, $attackerFaction = @$attackerFaction]" />
												</do_if>
												<do_else>
													<signal_cue_instantly cue="StopDestructionCountdown" param="table[$ship = $ship, $isDestroy = false, $attacker = $attacker, $attackerFaction = @$attackerFaction, $isDestructionAverted = true]" />
												</do_else>
												<reset_cue cue="parent" />
											</do_elseif>
										</do_if>
										<cancel_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
						<library name="Countdown_SetDPSData">
							<actions>
								<set_value name="$dps" exact="@PlayerShipDPSCheckerInterval.$dps" />
								<do_if value="$dps gt $dps_old">
									<set_value name="$dps_trend" exact="1" operation="add" />
								</do_if>
								<do_else>
									<set_value name="$dps_trend" exact="[0, $dps_trend - 1].max" />
								</do_else>
								<set_value name="$dps_old" exact="$dps" />
								<set_value name="player.entity.$kATD_countdownData" exact="table[
									$countdown = $countdown,
									$dps = $dps,
									$dps_trend = $dps_trend,
									$isDestructionCertain = @kATD.$shipCountdownCues.{$ship}.$isDestructionCertain,
								]" />
							</actions>
						</library>
						<cue name="StartDestructionCountdown_FirstRun">
							<actions>
								<signal_cue cue="Countdown" />
								<cancel_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="StopDestructionCountdown" namespace="this">
					<conditions>
						<event_cue_signalled />
						<check_value value="PlayerDeath.state == cuestate.waiting" />
					</conditions>
					<actions>
						<reset_cue cue="StartDestructionCountdown" />
						<debug_text text="'event.param: ' + event.param" chance="kATD.$debugChance" />
						<set_value name="$ship" exact="@event.param.$ship" />
						<set_value name="$attacker" exact="@event.param.$attacker" />
						<set_value name="$isDestroy" exact="@event.param.$isDestroy" />
						<set_value name="$attackerFaction" exact="@event.param.$attackerFaction" />
						<set_value name="$isDestructionAverted" exact="@event.param.$isDestructionAverted" />
						<do_if value="$isDestroy or (not $isDestructionAverted)">
							<raise_lua_event name="'kATDHUD.HideCountdown'" />
						</do_if>
						<do_else>
							<do_if value="not @$bonusShieldCount">
								<set_value name="$bonusShieldCount" exact="1" />
								<do_if value="ResetBonusShieldCounter_After10Min.state == cuestate.waiting">
									<signal_cue cue="ResetBonusShieldCounter_After10Min" />
								</do_if>
								<do_if value="$ship.isclass.ship_s and kATD.$userBonusShieldOnEvadeSuccess_s">
									<set_object_shield object="$ship" exact="kATD.$userBonusShieldOnEvadeSuccess_s" />
								</do_if>
								<do_elseif value="$ship.isclass.ship_m and kATD.$userBonusShieldOnEvadeSuccess_m">
									<set_object_shield object="$ship" exact="kATD.$userBonusShieldOnEvadeSuccess_m" />
								</do_elseif>
								<do_elseif value="($ship.isclass.ship_l or $ship.isclass.ship_xl) and kATD.$userBonusShieldOnEvadeSuccess_lxl">
									<set_object_shield object="$ship" exact="kATD.$userBonusShieldOnEvadeSuccess_lxl" />
								</do_elseif>
							</do_if>
							<raise_lua_event name="'kATDHUD.HideCountdownDestructionAverted'" />
						</do_else>
						<do_if value="@kATD.$shipCountdownCues.{$ship}">
							<cancel_cue cue="kATD.$shipCountdownCues.{$ship}" />
							<remove_value name="kATD.$shipCountdownCues.{$ship}" />
						</do_if>
						<do_if value="$ship.assignedaipilot.isclass.npc">
							<signal_objects object="$ship.assignedaipilot" param="'npc__return_to_post'" />
						</do_if>
						<do_if value="$isDestroy">
							<set_value name="$isAttackerCanImpoundShip" exact="false" />
							<do_if value="@$attacker.exists">
								<run_actions ref="GetIsAttackerCanImpoundShip" result="$isAttackerCanImpoundShip">
									<param name="Attacker" value="$attacker" />
									<param name="Ship" value="$ship" />
								</run_actions>
							</do_if>
							<debug_text text="'$attacker: ' + @$attacker + ' (owner: ' + @$attacker.owner + ')'" chance="kATD.$debugChance" />
							<debug_text text="'$isAttackerCanImpoundShip: ' + $isAttackerCanImpoundShip" chance="kATD.$debugChance" />
							<do_if value="$isAttackerCanImpoundShip">
								<do_if value="md.kuertee_chc.ImpoundShip.state == cuestate.waiting">
									<signal_cue_instantly cue="md.kuertee_chc.ImpoundShip" param="table[
										$ship = $ship,
										$impoundedByFaction = $attackerFaction
									]" />
								</do_if>
								<reset_cue cue="this" />
							</do_if>
							<do_elseif value="$ship == @player.ship">
								<!-- still in the ship, player death -->
								<signal_cue_instantly cue="PlayerDeath" param="table[$ship = $ship, $attackerFaction = $attackerFaction]" />
								<reset_cue cue="this" />
							</do_elseif>
							<do_else>
								<!-- not used: -->
								<!-- player must have escaped from the ship -->
								<!-- continue into cues to destroy the ship in a cutscene in the targetmonitor -->
								<!-- note: destruction cutscene can't play in target monitor -->
								<!-- used: -->
								<!-- just destroy the ship -->
								<destroy_object object="$ship" explosion="true" />
								<reset_cue cue="this" />
							</do_else>
						</do_if>
						<do_elseif value="not $isDestructionAverted">
							<reset_cue cue="this" />
						</do_elseif>
					</actions>
					<cues>
						<cue name="ClearDestructionCountdown" checktime="player.age + 3s">
							<actions>
								<do_if value="$isDestructionAverted">
									<raise_lua_event name="'kATDHUD.HideCountdown'" />
								</do_if>
								<remove_value name="player.entity.$kATD_countdownData" />
								<debug_text text="'reset_cue ' + PlayerShipDPSChecker" chance="kATD.$debugChance" />
								<reset_cue cue="PlayerShipDPSChecker" />
								<reset_cue cue="parent" />
								<cancel_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<library name="FindNearestContainers">
					<actions>
						<!-- nearest neutral station -->
						<do_if value="kATD.$deathAlternative == 'assimilation'">
							<find_station name="$nearestNeutralStation" space="player.galaxy" sortbydistanceto="$nearestContainerTo">
								<match_relation_to faction="$attackerFaction" comparison="ge" relation="neutral" />
							</find_station>
							<do_if value="not $nearestNeutralStation">
								<find_station name="$nearestNeutralStation" space="player.galaxy" sortbydistanceto="$nearestContainerTo">
									<match_relation_to faction="$attackerFaction" comparison="ge" relation="kill" />
								</find_station>
							</do_if>
						</do_if>
						<do_else>
							<find_station name="$nearestNeutralStation" space="player.galaxy" sortbydistanceto="$nearestContainerTo">
								<match_relation_to faction="faction.player" comparison="ge" relation="neutral" />
								<match owner="faction.player" negate="true" />
							</find_station>
							<do_if value="not $nearestNeutralStation">
								<find_station name="$nearestNeutralStation" space="player.galaxy" sortbydistanceto="$nearestContainerTo">
									<match_relation_to faction="faction.player" comparison="ge" relation="kill" />
									<match owner="faction.player" negate="true" />
								</find_station>
							</do_if>
						</do_else>
						<!-- nearest player container -->
						<do_if value="@md.kuertee_teleport_from_transporter_room.kTFTR.$userIsTeleportOnlyToHQ and @player.headquarters.isoperational">
							<set_value name="$nearestPlayerContainers" exact="[player.headquarters]" />
						</do_if>
						<do_elseif value="@md.kuertee_teleport_from_transporter_room.kTFTR.$userIsTeleportOnlyToStations">
							<find_object name="$nearestPlayerContainers" owner="faction.player" space="player.galaxy" class="class.station" sortbydistanceto="$nearestContainerTo" multiple="true">
								<match_distance object="player.entity" min="5km" />
							</find_object>
						</do_elseif>
						<do_else>
							<find_object name="$nearestPlayerContainers" owner="faction.player" space="player.galaxy" class="[class.ship, class.station]" sortbydistanceto="$nearestContainerTo" multiple="true">
								<match_distance object="player.entity" min="5km" />
							</find_object>
						</do_else>
						<set_value name="$nearestPlayerContainer" exact="null" />
						<do_if value="$nearestPlayerContainers.count">
							<do_for_each name="$container_inList" in="$nearestPlayerContainers">
								<do_if value="$container_inList.isclass.ship_xs or @$container_inList.pilot.race == race.drone or @$container_inList.islasertower">
									<!-- invalid container -->
								</do_if>
								<do_else>
									<set_value name="$nearestPlayerContainer" exact="$container_inList" />
									<break />
								</do_else>
							</do_for_each>
						</do_if>
						<do_if value="not @$nearestPlayerContainer.exists">
							<set_value name="$nearestPlayerContainer" exact="$nearestNeutralStation" />
						</do_if>
						<debug_text text="'$nearestPlayerContainer: ' + $nearestPlayerContainer + ' (' + $nearestPlayerContainer.knownname + ')'" chance="kATD.$debugChance" />
						<debug_text text="'$nearestNeutralStation: ' + $nearestNeutralStation + ' (' + $nearestNeutralStation.knownname + ')'" chance="kATD.$debugChance" />
					</actions>
				</library>
				<cue name="BoardingOperationStarted">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="$target" exact="event.param.$target" />
						<set_value name="$cue" exact="event.param.$cue" />
						<debug_text text="'$cue: ' + $cue" chance="kATD.$debugChance" />
						<do_if value="not @kATD.$boardingOperationCuesByTargets.{$target}">
							<set_value name="kATD.$boardingOperationCuesByTargets.{$target}" exact="$cue" />
						</do_if>
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="BoardingOperationFinished">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="$target" exact="event.param.$target" />
						<do_if value="@kATD.$boardingOperationCuesByTargets.{$target}">
							<remove_value name="kATD.$boardingOperationCuesByTargets.{$target}" />
						</do_if>
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="PlayerDeath" namespace="this">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<!-- getting a job: lose cash on hand -->
						<do_if value="$losePersonalCash">
							<reward_player money="player.money * -1" />
						</do_if>
						<!-- <run_actions ref="DeadIsDead_SaveTimeDeath" /> -->
						<run_actions ref="SavedGames_SetSaveScumDeath" />
						<set_value name="$isDestroyShip" exact="not @event.param.$isSaveShip" />
						<set_value name="kATD.$isHideNotifications" exact="true" />
						<set_value name="$ship" exact="@event.param.$ship" />
						<set_value name="$shipType" exact="@$ship.type" />
						<do_if value="not $ship">
							<set_value name="$ship" exact="player.ship" />
						</do_if>
						<do_if value="@$ship.exists">
							<debug_text text="'$ship: ' + $ship + ' (' + $ship.knownname + ')'" chance="kATD.$debugChance" />
							<add_to_group groupname="kATD.$shipsToDestroy" object="$ship" />
							<set_value name="$attackerFaction" exact="@event.param.$attackerFaction" />
						</do_if>
						<set_value name="kATD.$deathAlternative" exact="null" />
						<set_value name="$nearestContainerTo" exact="player.entity" />
						<!-- <include_actions ref="FindNearestContainers" /> -->
						<set_value name="$cloneLocation" exact="null" />
						<set_value name="$deathAlternatives" exact="[]" />
						<do_if value="kATD.$userIsUseClones and kATD.$cloneCount and kATD.$userIsPrioritiseClone">
							<append_to_list name="$deathAlternatives" exact="'clone'" />
							<append_to_list name="$deathAlternatives" exact="'clone'" />
							<append_to_list name="$deathAlternatives" exact="'clone'" />
							<do_if value="kATD.$userIsUseTeleportToSafety and $nearestPlayerContainer.exists and $nearestPlayerContainer.isplayerowned and player.canteleportto.{$nearestPlayerContainer}">
								<append_to_list name="$deathAlternatives" exact="'teleport'" />
								<append_to_list name="$deathAlternatives" exact="'teleport'" />
								<append_to_list name="$deathAlternatives" exact="'teleport'" />
								<append_to_list name="$deathAlternatives" exact="'teleport'" />
								<append_to_list name="$deathAlternatives" exact="'teleport'" />
							</do_if>
						</do_if>
						<do_else>
							<!-- randomly pick from selected options -->
							<do_if value="kATD.$userIsUseClones and kATD.$cloneCount">
								<append_to_list name="$deathAlternatives" exact="'clone'" />
								<append_to_list name="$deathAlternatives" exact="'clone'" />
								<append_to_list name="$deathAlternatives" exact="'clone'" />
							</do_if>
							<do_if value="kATD.$userIsUseDescendants">
								<append_to_list name="$deathAlternatives" exact="'descendant'" />
							</do_if>
							<do_if value="kATD.$userIsUseTeleportToSafety and $nearestPlayerContainer.exists and $nearestPlayerContainer.isplayerowned and player.canteleportto.{$nearestPlayerContainer}">
								<append_to_list name="$deathAlternatives" exact="'teleport'" />
								<append_to_list name="$deathAlternatives" exact="'teleport'" />
								<append_to_list name="$deathAlternatives" exact="'teleport'" />
								<append_to_list name="$deathAlternatives" exact="'teleport'" />
								<append_to_list name="$deathAlternatives" exact="'teleport'" />
							</do_if>
							<do_if value="kATD.$userIsUseRansom and ($attackerFaction and kATD.$deathAlternative != 'assimilation')">
								<do_if value="not [faction.khaak, faction.xenon].indexof.{$attackerFaction}">
									<append_to_list name="$deathAlternatives" exact="'ransom'" />
								</do_if>
							</do_if>
							<do_if value="kATD.$userIsUseAssimilation and ($attackerFaction and kATD.$deathAlternative != 'assimilation')">
								<do_if value="$attackerFaction == faction.khaak and kATD.$userIsAllowKhaakAssimilation">
									<append_to_list name="$deathAlternatives" exact="'assimilation'" />
								</do_if>
								<do_elseif value="$attackerFaction == faction.xenon and kATD.$userIsAllowXenonAssimilation">
									<append_to_list name="$deathAlternatives" exact="'assimilation'" />
								</do_elseif>
								<do_elseif value="$attackerFaction != faction.khaak and $attackerFaction != faction.xenon">
									<append_to_list name="$deathAlternatives" exact="'assimilation'" />
								</do_elseif>
							</do_if>
							<do_if value="kATD.$userIsUseNoPenalty">
								<append_to_list name="$deathAlternatives" exact="'nopenalty'" />
							</do_if>
						</do_else>
						<set_value name="kATD.$deathAlternative" exact="$deathAlternatives.random" />
						<debug_text text="'kATD.$deathAlternative: ' + kATD.$deathAlternative" chance="kATD.$debugChance" />
						<do_if value="not kATD.$deathAlternative">
							<!-- just destroy the ship with the player for gameover -->
							<do_if value="@$ship.exists and $isDestroyShip">
								<destroy_object object="$ship" explosion="true" />
							</do_if>
							<reset_cue cue="this" />
						</do_if>
						<do_else>
							<do_if value="kATD.$deathAlternative != 'teleport'">
								<!-- start boarding operations to a stalemate -->
								<do_all counter="$i" exact="@kATD.$boardingOperationCuesByTargets.keys.count">
									<set_value name="$boardingTarget" exact="kATD.$boardingOperationCuesByTargets.keys.{$i}" />
									<set_value name="$cue" exact="kATD.$boardingOperationCuesByTargets.{$boardingTarget}" />
									<do_if value="$cue.$PlayerInvolved">
										<debug_text text="'$cue: ' + $cue" chance="kATD.$debugChance" />
										<debug_text text="'$cue.Boarding_Stalemate: ' + $cue.Boarding_Stalemate" chance="kATD.$debugChance" />
										<signal_cue_instantly cue="$cue.Boarding_Stalemate" />
									</do_if>
								</do_all>
								<!-- end boarding operations to a stalemate -->
							</do_if>
							<set_value name="$teleportToContainer" exact="null" />
							<do_if value="kATD.$deathAlternative == 'clone'">
								<do_if value="kATD.$cloneCount lt 0">
									<set_value name="kATD.$cloneCount" exact="0" />
								</do_if>
								<run_actions ref="FindACloneLocation" result="$cloneLocation" />
								<set_value name="$teleportToContainer" exact="$cloneLocation" />
							</do_if>
							<do_elseif value="kATD.$deathAlternative == 'nopenalty'">
								<set_value name="$isDestroyShip" exact="false" />
							</do_elseif>
							<do_if value="not @$teleportToContainer.exists">
								<do_if value="kATD.$deathAlternative == 'teleport'">
									<set_value name="$teleportToContainer" exact="$nearestPlayerContainer" />
								</do_if>
								<do_elseif value="kATD.$deathAlternative == 'nopenalty'">
									<set_value name="$teleportToContainer" exact="$nearestNeutralStation" />
								</do_elseif>
								<do_else>
									<set_value name="$teleportToContainer" exact="$nearestNeutralStation" />
								</do_else>
							</do_if>
							<debug_text text="'$teleportToContainer: ' + $teleportToContainer + ' (' + $teleportToContainer.knownname + ')'" chance="kATD.$debugChance" />
						</do_else>
						<set_value name="$count_teleportFailed" exact="0" />
					</actions>
					<cues>
						<cue name="PlayerDeathTeleportToViewDeath">
							<cues>
								<cue name="PlayerDeathTeleportFailed">
									<conditions>
										<event_player_teleport_failed />
									</conditions>
									<actions>
										<set_value name="$count_teleportFailed" exact="$count_teleportFailed + 1" />
										<do_if value="$count_teleportFailed lt 3">
											<set_value name="$teleportToContainer_new" exact="null" />
											<do_if value="kATD.$deathAlternative == 'clone'">
												<run_actions ref="FindACloneLocation" result="$cloneLocation" />
												<set_value name="$teleportToContainer_new" exact="$cloneLocation" />
											</do_if>
										</do_if>
										<do_if value="not @$teleportToContainer_new.exits">
											<set_value name="$nearestContainerTo" exact="$teleportToContainer" />
											<include_actions ref="FindNearestContainers" />
											<do_if value="kATD.$deathAlternative == 'teleport'">
												<set_value name="$teleportToContainer_new" exact="$nearestPlayerContainer" />
											</do_if>
											<do_else>
												<set_value name="$teleportToContainer_new" exact="$nearestNeutralStation" />
											</do_else>
										</do_if>
										<set_value name="$teleportToContainer" exact="$teleportToContainer_new" />
										<debug_text text="'$teleportToContainer: ' + $teleportToContainer + ' (' + $teleportToContainer.knownname + ', ' + @$teleportToContainer.sector.knownname + ')'" chance="kATD.$debugChance" />
										<signal_cue cue="PlayerDeathTryTeleport" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="PlayerDeathPlayCutsceneDestroyShip">
									<conditions>
										<event_player_teleport_successful />
									</conditions>
									<actions>
										<debug_text text="'play_cutscene'" chance="kATD.$debugChance" />
										<do_if value="@$ship.exists">
											<set_value name="$isCutscenePlaying" exact="true" />
											<play_cutscene key="'Cutscene_orbit_and_zoom_1'" abortable="false">
												<param name="target_object" object="$ship" />
											</play_cutscene>
										</do_if>
										<do_else>
											<set_value name="$isCutscenePlaying" exact="true" />
											<play_cutscene key="'Cutscene_orbit_and_zoom_1'" abortable="false">
												<param name="target_object" object="player.container" />
											</play_cutscene>
										</do_else>
										<do_if value="kATD.$deathAlternative == 'clone'">
											<set_value name="kATD.$cloneCount" exact="kATD.$cloneCount - 1" />
											<set_value name="kATD.$clonedCounter" exact="kATD.$clonedCounter + 1" />
											<do_if value="@kATD.$cloningStations.{$cloneLocation}">
												<!-- some clone locations were created with debug -->
												<!-- these debug clone locations have no clone count  -->
												<do_if value="kATD.$cloningStations.{$cloneLocation}.$cloneCount gt 0">
													<set_value name="kATD.$cloningStations.{$cloneLocation}.$cloneCount" exact="kATD.$cloningStations.{$cloneLocation}.$cloneCount - 1" />
												</do_if>
											</do_if>
										</do_if>
									</actions>
									<cues>
										<cue name="PlayerDeathOptionsMenu">
											<conditions>
												<event_ui_triggered screen="'OptionsMenu'" />
												<check_value value="$isCutscenePlaying" />
											</conditions>
											<actions>
												<set_value name="$isCutscenePlaying" exact="false" />
												<stop_cutscene key="'Cutscene_orbit_and_zoom_1'" />
												<reset_cue cue="PlayerDeathOptionsMenu" />
											</actions>
										</cue>
										<cue name="PlayerDeathInheritanceOrRansom">
											<actions>
												<reset_cue cue="PlayerInheritance" />
												<reset_cue cue="OwnershipOnDeath_Confiscation" />
												<reset_cue cue="OwnershipOnDeath_Destruction" />
												<reset_cue cue="PayPlayerRansom" />
											</actions>
											<cues>
												<cue name="SignalInheritance" onfail="cancel">
													<conditions>
														<check_any>
															<check_all>
																<check_value value="kATD.$deathAlternative == 'clone'" />
																<check_value value="kATD.$userOwnershipOnDeath_clone == kATD.$ownershipOnDeath_inherited" />
															</check_all>
															<check_all>
																<check_value value="kATD.$deathAlternative == 'descendant'" />
																<check_value value="kATD.$userOwnershipOnDeath_descendant == kATD.$ownershipOnDeath_inherited" />
															</check_all>
															<check_all>
																<check_value value="kATD.$deathAlternative == 'assimilation'" />
																<check_value value="kATD.$userOwnershipOnDeath_assimilated == kATD.$ownershipOnDeath_inherited" />
															</check_all>
														</check_any>
													</conditions>
													<actions>
														<signal_cue_instantly cue="PlayerInheritance" />
														<cancel_cue cue="parent" />
														<cancel_cue cue="this" />
													</actions>
												</cue>
												<cue name="SignalRansom" onfail="cancel">
													<conditions>
														<check_value value="kATD.$deathAlternative == 'ransom'" />
													</conditions>
													<actions>
														<signal_cue_instantly cue="PayPlayerRansom" param="table[$attackerFaction = $attackerFaction]" />
														<cancel_cue cue="parent" />
														<cancel_cue cue="this" />
													</actions>
												</cue>
												<cue name="SignalConfiscation" onfail="cancel">
													<conditions>
														<check_any>
															<check_all>
																<check_value value="kATD.$deathAlternative == 'clone'" />
																<check_any>
																	<check_value value="kATD.$userOwnershipOnDeath_clone == kATD.$ownershipOnDeath_confiscated" />
																	<check_value value="kATD.$userOwnershipOnDeath_clone == kATD.$ownershipOnDeath_confiscated_by_killer" />
																</check_any>
															</check_all>
															<check_all>
																<check_value value="kATD.$deathAlternative == 'descendant'" />
																<check_any>
																	<check_value value="kATD.$userOwnershipOnDeath_descendant == kATD.$ownershipOnDeath_confiscated" />
																	<check_value value="kATD.$userOwnershipOnDeath_descendant == kATD.$ownershipOnDeath_confiscated_by_killer" />
																</check_any>
															</check_all>
															<check_all>
																<check_value value="kATD.$deathAlternative == 'assimilation'" />
																<check_any>
																	<check_value value="kATD.$userOwnershipOnDeath_assimilated == kATD.$ownershipOnDeath_confiscated" />
																	<check_value value="kATD.$userOwnershipOnDeath_assimilated == kATD.$ownershipOnDeath_confiscated_by_killer" />
																</check_any>
															</check_all>
														</check_any>
													</conditions>
													<actions>
														<do_if value="kATD.$userOwnershipOnDeath_assimilated == kATD.$ownershipOnDeath_confiscated">
															<signal_cue_instantly cue="OwnershipOnDeath_Confiscation" />
														</do_if>
														<do_elseif value="kATD.$userOwnershipOnDeath_assimilated == kATD.$ownershipOnDeath_confiscated_by_killer">
															<signal_cue_instantly cue="OwnershipOnDeath_Confiscation" param="table[$attackerFaction = $attackerFaction]" />
														</do_elseif>
														<cancel_cue cue="parent" />
														<cancel_cue cue="this" />
													</actions>
												</cue>
												<cue name="SignalDestruction" onfail="cancel">
													<conditions>
														<check_any>
															<check_all>
																<check_value value="kATD.$deathAlternative == 'clone'" />
																<check_value value="kATD.$userOwnershipOnDeath_clone == kATD.$ownershipOnDeath_destroyed" />
															</check_all>
															<check_all>
																<check_value value="kATD.$deathAlternative == 'descendant'" />
																<check_value value="kATD.$userOwnershipOnDeath_descendant == kATD.$ownershipOnDeath_destroyed" />
															</check_all>
															<check_all>
																<check_value value="kATD.$deathAlternative == 'assimilation'" />
																<check_value value="kATD.$userOwnershipOnDeath_assimilated == kATD.$ownershipOnDeath_destroyed" />
															</check_all>
														</check_any>
													</conditions>
													<actions>
														<signal_cue_instantly cue="OwnershipOnDeath_Destruction" />
														<cancel_cue cue="parent" />
														<cancel_cue cue="this" />
													</actions>
												</cue>
											</cues>
										</cue>
										<cue name="PlayerDeathDestroyShip" checktime="player.age + 3s">
											<actions>
												<do_if value="@$ship.exists and $isDestroyShip">
													<destroy_object object="$ship" explosion="true" />
												</do_if>
												<do_if value="kATD.$shipsToDestroy.indexof.{$ship}">
													<remove_from_group group="kATD.$shipsToDestroy" object="$ship" />
												</do_if>
											</actions>
										</cue>
										<cue name="PlayerDeathNotices" checktime="player.age + 10s">
											<actions>
												<do_if value="kATD.$deathAlternative != 'nopenalty'">
													<signal_cue_instantly cue="ShowDeathNoticeAndUpdateName" param="table[$attackerFaction = $attackerFaction, $shipType = $shipType]" />
												</do_if>
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="PlayerDeathTryTeleport">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$teleportStep" exact="0" />
										<do_if value="kATD.$deathAlternative == 'nopenalty'">
											<get_safe_pos result="$pos_station" sector="$teleportToContainer.sector" object="$teleportToContainer" radius="$ship.size / 2.0" ignored="$ship" />
											<do_if value="@$ship.exists">
												<warp object="$ship" sector="$teleportToContainer.sector">
													<safepos value="$pos_station" />
												</warp>
											</do_if>
											<signal_cue cue="PlayerDeathSignalNewStart" />
										</do_if>
										<do_else>
											<teleport_player object="$teleportToContainer" force="true" instant="true" />
										</do_else>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="PlayerDeathTeleportToViewDeath_RunOnce">
									<actions>
										<signal_cue cue="PlayerDeathTryTeleport" />
										<cancel_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
						<cue name="PlayerDeathSignalNewStart">
							<conditions>
								<check_any>
									<check_all>
										<event_cue_signalled />
										<check_value value="kATD.$deathAlternative == 'nopenalty'" />
									</check_all>
									<check_all>
										<event_ui_triggered screen="'UserQuestionMenu'" control="'selected'" />
										<check_value value="event.param3 == 'kATD_on_death_notice_read'" />
									</check_all>
									<event_ui_triggered screen="'UserQuestionMenu'" control="'menu_close'" />
								</check_any>
							</conditions>
							<actions>
								<debug_text text="event.name" chance="kATD.$debugChance" />
								<set_value name="kATD.$isRetainRelationships" exact="true" />
								<do_if value="kATD.$deathAlternative == 'clone'">
									<set_value name="kATD.$isRetainRelationships" exact="kATD.$userIsClonesRetainRelationships" />
									<do_if value="kATD.$userOwnershipOnDeath_clone != kATD.$ownershipOnDeath_retained">
										<signal_cue_instantly cue="NewStart" />
									</do_if>
									<do_if value="not kATD.$userIsClonesRetainRelationships">
										<do_if value="@md.kuertee_professions.InitReputations.state == cuestate.waiting">
											<signal_cue_instantly cue="md.kuertee_professions.InitReputations" param="table[$isInit = true]" />
										</do_if>
										<do_if value="@md.kuertee_ssac.ResetSocialStandingsAndCitizenships">
											<run_actions ref="md.kuertee_ssac.ResetSocialStandingsAndCitizenships" />
										</do_if>
									</do_if>
								</do_if>
								<do_elseif value="kATD.$deathAlternative == 'descendant'">
									<do_if value="kATD.$userOwnershipOnDeath_descendant != kATD.$ownershipOnDeath_retained">
										<signal_cue_instantly cue="NewStart" />
									</do_if>
									<do_if value="@md.kuertee_professions.InitProfessions.state == cuestate.waiting">
										<signal_cue_instantly cue="md.kuertee_professions.InitProfessions" />
									</do_if>
									<do_if value="@md.kuertee_professions.InitReputations.state == cuestate.waiting">
										<signal_cue_instantly cue="md.kuertee_professions.InitReputations" param="table[$isInit = true]" />
									</do_if>
									<do_if value="@md.kuertee_ssac.ResetSocialStandingsAndCitizenships">
										<run_actions ref="md.kuertee_ssac.ResetSocialStandingsAndCitizenships" />
									</do_if>
								</do_elseif>
								<do_elseif value="kATD.$deathAlternative == 'assimilation'">
									<do_if value="kATD.$userOwnershipOnDeath_assimilated != kATD.$ownershipOnDeath_retained">
										<signal_cue_instantly cue="NewStart" />
									</do_if>
									<signal_cue_instantly cue="AssimilatePlayer" param="table[$attackerFaction = $attackerFaction]" />
									<do_if value="@md.kuertee_professions.InitReputations.state == cuestate.waiting">
										<signal_cue_instantly cue="md.kuertee_professions.InitReputations" param="table[$isInit = true]" />
									</do_if>
									<do_if value="@md.kuertee_ssac.ResetSocialStandingsAndCitizenships">
										<run_actions ref="md.kuertee_ssac.ResetSocialStandingsAndCitizenships" />
									</do_if>
								</do_elseif>
								<do_elseif value="kATD.$deathAlternative == 'nopenalty'">
									<set_value name="kATD.$isRetainRelationships" exact="true" />
								</do_elseif>
								<do_if value="kATD.$deathAlternative != 'nopenalty'">
									<find_ship_by_true_owner name="$playerShip" space="player.galaxy" faction="faction.player" />
									<do_if value="not $playerShip">
										<!-- no player ship, so give player a new start -->
										<signal_cue_instantly cue="NewStart" />
									</do_if>
								</do_if>
							</actions>
							<cues>
								<cue name="PlayerDeathDelayCompletion">
									<delay exact="5s" />
									<actions>
										<set_value name="kATD.$isHideNotifications" exact="false" />
										<reset_cue cue="PlayerDeath" />
										<reset_cue cue="parent" />
										<reset_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
					</cues>
				</cue>
				<library name="FindACloneLocation" purpose="run_actions">
					<actions>
						<shuffle_group group="kATD.$cloneLocations" />
						<set_value name="$cloneLocation" exact="null" />
						<do_for_each name="$cloneLocation_inList" in="kATD.$cloneLocations">
							<do_if value="kATD.$cloningStations.{$cloneLocation_inList}.$cloneCount gt 0">
								<set_value name="$cloneLocation" exact="$cloneLocation_inList" />
								<break />
							</do_if>
						</do_for_each>
						<return value="$cloneLocation" />
					</actions>
				</library>
				<cue name="OnEscapePodEntered" namespace="this">
					<conditions>
						<event_ui_triggered screen="'kATD'" control="'on_escape_pod_click'" />
					</conditions>
					<actions>
						<do_if value="PlayerDeath.state != cuestate.waiting or player.ship.dock">
							<reset_cue cue="this" />
						</do_if>
					</actions>
					<cues>
						<cue name="OnEscapePodEntered2">
							<actions>
								<signal_cue cue="md.GAJ_EscapePod.LaunchPod" />
								<reset_cue cue="parent" />
								<cancel_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="PlayerInheritance" namespace="this">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<debug_text text="event.name" chance="kATD.$debugChance" />
						<do_if value="
							(kATD.$deathAlternative == 'clone' and kATD.$userOwnershipOnDeath_clone == kATD.$ownershipOnDeath_inherited)
							or
							(kATD.$deathAlternative == 'descendant' and kATD.$userOwnershipOnDeath_descendant == kATD.$ownershipOnDeath_inherited)
							or
							(kATD.$deathAlternative == 'assimilation' and kATD.$userOwnershipOnDeath_assimilated == kATD.$ownershipOnDeath_inherited)
						">
							<!-- Getting A Job: Inheritance tax -->
							<do_if value="$inheritanceTax">
								<do_for_each name="$account" in="md.GalacticBank.Vault.$Accounts.keys.list">
									<set_value name="md.GalacticBank.Vault.$Accounts.{$account}.$balance" exact="md.GalacticBank.Vault.$Accounts.{$account}.$balance * (1-md.GalacticBank.Vault.$Accounts.{$account}.$inheritanceTax)" />
								</do_for_each>
							</do_if>
							<do_if value="not @TrustExecutor.$npc">
								<signal_cue_instantly cue="TrustExecutor" />
							</do_if>
							<!-- <signal_cue_instantly cue="TransferAllToTrust" /> -->
							<signal_cue_instantly cue="GetPlayerProperties" param="table[$callback = TransferAllToTrust]" />
						</do_if>
						<do_else>
							<reset_cue cue="this" />
						</do_else>
					</actions>
					<cues>
						<cue name="PlayerInheritanceCreateMission">
							<conditions>
								<check_any>
									<check_all>
										<event_ui_triggered screen="'UserQuestionMenu'" control="'selected'" />
										<check_value value="event.param3 == 'kATD_on_death_notice_read'" />
									</check_all>
									<event_ui_triggered screen="'UserQuestionMenu'" control="'menu_close'" />
									<event_cue_signalled />
								</check_any>
								<check_value value="not namespace.hasmission" />
							</conditions>
							<actions>
								<create_mission cue="namespace"
									name="{111204, 400}"
									faction="faction.player"
									type="missiontype.talkto"
									object="TrustExecutor.$npc"
									description="kATD.$deathNotice">
									<briefing>
										<objective step="1"
											action="objective.custom"
											customaction="{111204, 401}.[kATD.$userInheritTrustOnMoney.formatted.{'%s %Cr'}]"
											comment="401 = Acquire %1." />
										<objective step="2"
											action="objective.talkto"
											object="TrustExecutor.$npc" />
									</briefing>
									<objective step="1"
										action="objective.custom"
										customaction="{111204, 401}.[kATD.$userInheritTrustOnMoney.formatted.{'%s %Cr'}]"
										comment="401 = Acquire %1." />
								</create_mission>
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="PlayerInheritanceMoneyUpdated">
							<conditions>
								<event_player_money_updated />
							</conditions>
							<actions>
								<do_if value="namespace.hasmission">
									<do_if value="event.param2 ge kATD.$userInheritTrustOnMoney">
										<set_objective cue="namespace" step="2"
											action="objective.talkto"
											object="TrustExecutor.$npc" />
									</do_if>
									<do_else>
										<set_objective cue="namespace" step="1"
											action="objective.custom"
											customaction="{111204, 401}.[kATD.$userInheritTrustOnMoney.formatted.{'%s %Cr'}]"
											comment="401 = Acquire %1." />
									</do_else>
								</do_if>
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="PlayerInheritanceConvo">
							<conditions>
								<check_any>
									<event_cue_signalled />
									<event_conversation_started actor="TrustExecutor.$npc" conversation="default" />
								</check_any>
							</conditions>
							<actions>
								<debug_text text="'kATD.$isPropertiesInTrust: ' + kATD.$isPropertiesInTrust" chance="kATD.$debugChance" />
								<do_if value="kATD.$isPropertiesInTrust and (player.money ge kATD.$userInheritTrustOnMoney)">
									<do_if value="event.name == 'event_conversation_started' and @md.ExtendedConversationMenu.Main.exists">
										<set_value name="md.ExtendedConversationMenu.Main.$convOptions.$kATD_trustExecutor" exact="table[
											$signalCue = PlayerInheritanceConvo
										]" />
									</do_if>
									<do_else>
										<add_player_choice text="{111204, 402}" section="kATDInheritance_receive_inheritance" comment="My inheritance?" />
									</do_else>
								</do_if>
								<do_else>
									<add_player_choice selectable="false" text="{111204, 402}" section="kATDInheritance_receive_inheritance" comment="My inheritance?" />
								</do_else>
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="PlayerInheritanceConvoNextSection">
							<conditions>
								<event_conversation_next_section sectionprefix="kATDInheritance_" />
							</conditions>
							<actions>
								<do_if value="event.param == 'kATDInheritance_receive_inheritance'">
									<signal_cue_instantly cue="TransferAllToPlayer" />
									<set_value name="$text" exact="''" />
									<set_value name="$text" exact="$text + {111204, 901}.[player.name] + '\n'" comment="To: %1" />
									<set_value name="$text" exact="$text + {111204, 902}.[kATD.$oldPlayerName] + '\n\n'" comment="From: the executor of the estate of %1" />
									<do_if value="kATD.$deathAlternative == 'clone'">
										<set_value name="$text" exact="$text + {111204, 1008}.[kATD.$userInheritTrustOnMoney.formatted.{'%s %Cr'}] + '\n\n' + {111204, 1009}" />
									</do_if>
									<do_elseif value="kATD.$deathAlternative == 'descendant'">
										<set_value name="$text" exact="$text + {111204, 1108}.[kATD.$oldPlayerName, kATD.$userInheritTrustOnMoney.formatted.{'%s %Cr'}] + '\n\n' + {111204, 1109}" />
									</do_elseif>
									<write_incoming_message title="{111204, 904}" text="$text" highpriority="true" source="{111204, 200}" comment="Trust Executor's Office" />
									<write_to_logbook category="general" title="{111204, 904}" text="$text" />
								</do_if>
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="PlayerInheritanceConvoFinished">
							<conditions>
								<event_conversation_finished actor="TrustExecutor.$npc" />
							</conditions>
							<actions>
								<signal_cue cue="PlayerInheritanceCleanUp" />
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="PlayerInheritanceCleanUp">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<do_if value="namespace.hasmission and (not kATD.$isPropertiesInTrust)">
									<!-- properties have been inherited, mission complete -->
									<remove_mission cue="namespace" />
									<!-- <signal_cue_instantly cue="CleanUpTrustExecutor" /> -->
									<set_dynamic_interior_persistent object="TrustExecutor.$station" interior="TrustExecutor.$interior" persistent="false" />
									<reset_cue cue="parent" />
								</do_if>
								<reset_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="OwnershipOnDeath_Confiscation" namespace="this">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="$attackerFaction" exact="@event.param.$attackerFaction" />
						<debug_text text="'$attackerFaction: ' + $attackerFaction" chance="kATD.$debugChance" />
						<signal_cue_instantly cue="GetPlayerProperties" param="table[$callback = OwnershipOnDeath_ConfiscateNow]" />
					</actions>
					<cues>
						<cue name="OwnershipOnDeath_ConfiscateNow">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<set_value name="$properties" exact="@event.param.$properties" />
								<do_if value="not $properties">
									<signal_cue_instantly cue="GetPlayerProperties" param="table[$callback = this]" />
								</do_if>
								<do_else>
									<remove_from_list name="$properties" exact="player.headquarters" />
									<do_all counter="$i" exact="$properties.count" reverse="true">
										<debug_text text="'$properties.{$i}: ' + $properties.{$i} + ' (' + $properties.{$i}.knownname + ')'" chance="kATD.$debugChance" />
										<set_value name="$owner" exact="null" />
										<do_if value="$attackerFaction">
											<set_value name="$owner" exact="$attackerFaction" />
										</do_if>
										<debug_text text="'$owner: ' + $owner" chance="kATD.$debugChance" />
										<do_if value="(not $owner) or (not kATD.$validFactions.indexof.{$owner})">
											<set_value name="$sector" exact="$properties.{$i}.sector" />
											<do_if value="not $sector">
												<set_value name="$sector" exact="@$properties.{$i}.container.sector" />
											</do_if>
											<do_if value="$sector">
												<set_value name="$owner" exact="$sector.owner" />
												<debug_text text="'$owner ($sector.owner): ' + $owner" chance="kATD.$debugChance" />
												<do_if value="not $owner">
													<set_value name="$owner" exact="$sector.policefaction" />
													<debug_text text="'$owner ($sector.policefaction): ' + $owner" chance="kATD.$debugChance" />
												</do_if>
											</do_if>
											<do_if value="not $owner and @kATD.$validFactions.indexof.{$attackerFaction}">
												<set_value name="$owner" exact="$attackerFaction" />
												<debug_text text="'$owner ($attackerFaction): ' + $owner" chance="kATD.$debugChance" />
											</do_if>
											<do_if value="not $owner">
												<set_value name="$owner" exact="kATD.$validFactions.random" />
												<debug_text text="'$owner (random): ' + $owner" chance="kATD.$debugChance" />
											</do_if>
										</do_if>
										<do_if value="not $owner">
											<debug_text text="'destroy_object (invalid $owner)'" chance="kATD.$debugChance" />
											<destroy_object object="$properties.{$i}" />
										</do_if>
										<do_else>
											<set_owner object="$properties.{$i}" faction="$owner" overridenpc="true" />
											<debug_text text="'$owner: ' + $properties.{$i}.owner" chance="kATD.$debugChance" />
										</do_else>
									</do_all>
									<reset_cue cue="parent" />
								</do_else>
								<reset_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="OwnershipOnDeath_Destruction" namespace="this">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<signal_cue_instantly cue="GetPlayerProperties" param="table[$callback = OwnershipOnDeath_DestroyNow]" />
					</actions>
					<cues>
						<cue name="OwnershipOnDeath_DestroyNow">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<set_value name="$properties" exact="@event.param.$properties" />
								<do_if value="not $properties">
									<signal_cue_instantly cue="GetPlayerProperties" param="table[$callback = this]" />
								</do_if>
								<do_else>
									<remove_from_list name="$properties" exact="player.headquarters" />
									<do_all counter="$i" exact="$properties.count" reverse="true">
										<do_if value="player.container != $properties.{$i}">
											<debug_text text="'$properties.{$i}: ' + $properties.{$i} + ' (' + $properties.{$i}.knownname + ')'" chance="kATD.$debugChance" />
											<destroy_object object="$properties.{$i}" />
										</do_if>
									</do_all>
									<reset_cue cue="parent" />
								</do_else>
								<reset_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="PayPlayerRansom" namespace="this">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="$attackerFaction" exact="event.param.$attackerFaction" />
						<set_value name="$ransomFactor" exact="kATD.$userRansomPerc / 100.0" />
						<debug_text text="'$ransomFactor: ' + $ransomFactor" chance="kATD.$debugChance" />
						<signal_cue_instantly cue="GetPlayerProperties" param="table[$callback = TransferRansomToFaction]" />
					</actions>
					<cues>
						<cue name="TransferRansomToFaction">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<set_value name="$properties" exact="@event.param.$properties" />
								<do_if value="not $properties">
									<signal_cue_instantly cue="GetPlayerProperties" param="table[$callback = this]" />
								</do_if>
								<do_else>
									<set_value name="kATD.$ransomedItems" exact="[]" />
									<set_value name="$ransomedMoney" exact="((player.money)f * $ransomFactor)ct" />
									<debug_text text="'transfer_money OUT: ' + $ransomedMoney" chance="kATD.$debugChance" />
									<!-- <transfer_money from="faction.player" to="$attackerFaction" amount="$ransomedMoney" /> -->
									<do_if value="@md.VerboseTransactionLog.TransferMoney.exists">
										<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
											$amount = $ransomedMoney,
											$description = {111204, 2001},
											$from = faction.player,
											$to = $attackerFaction,
										]" />
									</do_if>
									<do_else>
										<transfer_money from="faction.player" to="$attackerFaction" amount="$ransomedMoney" />
									</do_else>
									<append_to_list name="kATD.$ransomedItems" exact="$ransomedMoney" />
									<remove_from_list name="$properties" exact="player.headquarters" />
									<do_all counter="$i" exact="kATD.$shipsToDestroy.count" reverse="true">
										<remove_from_list name="$properties" exact="kATD.$shipsToDestroy.{$i}" />
									</do_all>
									<set_value name="$classesToRansom" exact="[class.ship_s, class.ship_m, class.ship_l, class.ship_xl, class.station]" />
									<set_value name="$toRansom" exact="table[]" />
									<do_all counter="$i" exact="$properties.count">
										<set_value name="$property" exact="$properties.{$i}" />
										<debug_text text="'$property: ' + $property + ' (' + $property.knownname+ ') class: ' + $property.class" chance="kATD.$debugChance" />
										<do_if value="$classesToRansom.indexof.{$property.class}">
											<do_if value="not @$toRansom.{$property.class}">
												<set_value name="$toRansom.{$property.class}" exact="[]" />
											</do_if>
											<append_to_list name="$toRansom.{$property.class}" exact="$property" />
										</do_if>
									</do_all>
									<debug_text text="'$toRansom.keys.list: ' + $toRansom.keys.list" chance="kATD.$debugChance" />
									<do_all counter="$i" exact="$toRansom.keys.count">
										<set_value name="$class" exact="$toRansom.keys.list.{$i}" />
										<set_value name="$keepCount" exact="$toRansom.{$class}.count * (1 - $ransomFactor)" />
										<do_while value="$toRansom.{$class}.count gt $keepCount">
											<set_value name="$property" exact="$toRansom.{$class}.{1}" />
											<set_owner object="$property" faction="$attackerFaction" overridenpc="true" />
											<debug_text text="'$property: ' + $property + ' (' + $property.knownname+ ') class: ' + $property.class" chance="kATD.$debugChance" />
											<remove_from_list name="$toRansom.{$class}" exact="$property" />
											<append_to_list name="kATD.$ransomedItems" exact="$property" />
										</do_while>
									</do_all>
									<debug_text text="'kATD.$ransomedItems: ' + kATD.$ransomedItems" chance="kATD.$debugChance" />
									<do_if value="kATD.$userIsLoseInventoryItems">
										<set_value name="$inventory" exact="player.entity.inventory.list" />
										<set_value name="$inventoryItem" exact="null" />
										<do_all counter="$i" exact="$inventory.count">
											<set_value name="$inventoryItem" exact="$inventory.{$i}" />
											<set_value name="$inventoryAmount" exact="player.entity.inventory.{$inventoryItem}.count" />
											<remove_inventory entity="player.entity" ware="$inventoryItem" exact="$inventoryAmount" />
										</do_all>
									</do_if>
									<reset_cue cue="parent" />
								</do_else>
								<reset_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="GetPlayerProperties">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="$getPlayerPropertiesCallback" exact="event.param.$callback" />
						<debug_text text="'$getPlayerPropertiesCallback: ' + $getPlayerPropertiesCallback" chance="$debugChance" />
						<raise_lua_event name="'kATD.GetPlayerProperties'" />
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="OnGetPlayerProperties">
					<conditions>
						<event_ui_triggered screen="'kATD'" control="'on_get_player_properties'" />
					</conditions>
					<actions>
						<debug_text text="'$getPlayerPropertiesCallback: ' + $getPlayerPropertiesCallback" chance="$debugChance" />
						<debug_text text="'event.param3: ' + event.param3" chance="$debugChance" />
						<do_if value="$getPlayerPropertiesCallback">
							<signal_cue_instantly cue="$getPlayerPropertiesCallback" param="table[$properties=event.param3]" />
						</do_if>
						<set_value name="$getPlayerPropertiesCallback" exact="null" />
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="TransferAllToTrust">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="$properties" exact="@event.param.$properties" />
						<do_if value="not $properties">
							<signal_cue_instantly cue="GetPlayerProperties" param="table[$callback = this]" />
						</do_if>
						<do_else>
							<debug_text text="'player.money (pre transfer): ' + player.money" chance="kATD.$debugChance" />
							<debug_text text="'$playerMoneyInTrust: ' + $playerMoneyInTrust" chance="kATD.$debugChance" />
							<set_value name="$isPropertiesInTrust" exact="true" />
							<raise_lua_event name="'kATD.SetIsPlayerHQLost'" param="true" />
							<do_all counter="$i" exact="kATD.$shipsToDestroy.count" reverse="true">
								<remove_from_list name="$properties" exact="kATD.$shipsToDestroy.{$i}" />
							</do_all>
							<do_while value="$properties and @$properties.count">
								<set_value name="$property" exact="$properties.{1}" />
								<debug_text text="'$property: ' + $property + ' (' + $property.knownname+ ') class: ' + $property.class" chance="kATD.$debugChance" />
								<do_if value="$property == player">
								</do_if>
								<do_else>
									<!-- note that money at the property and build storage is returned to the player on set_owner -->
									<set_owner object="$property" faction="faction.playertrust" overridenpc="true" />
									<add_to_group groupname="$propertiesInTrust" object="$property" />
								</do_else>
								<remove_from_list name="$properties" exact="$property" />
							</do_while>
							<do_if value="kATD.$userIsLoseInventoryItems">
								<set_value name="$inventory" exact="player.entity.inventory.list" />
								<set_value name="$inventoryItem" exact="null" />
								<do_all counter="$i" exact="$inventory.count">
									<set_value name="$inventoryItem" exact="$inventory.{$i}" />
									<set_value name="$inventoryAmount" exact="player.entity.inventory.{$inventoryItem}.count" />
									<!-- <add_inventory entity="TrustExecutor.$npc" ware="$inventoryItem" exact="$inventoryAmount"/> -->
									<remove_inventory entity="player.entity" ware="$inventoryItem" exact="$inventoryAmount" />
								</do_all>
							</do_if>
							<do_if value="@md.kuertee_chc.kCHC.exists">
								<signal_cue cue="md.kuertee_chc.SaveThenClearCrimes" />
							</do_if>
							<debug_text text="'transfer_money OUT: ' + player.money" chance="kATD.$debugChance" />
							<do_if value="@md.VerboseTransactionLog.TransferMoney.exists">
								<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
									$amount = player.money,
									$description = {111204, 2002},
									$from = faction.player,
									$to = faction.playertrust,
								]" />
							</do_if>
							<do_else>
								<transfer_money from="faction.player" to="faction.playertrust" amount="player.money" />
							</do_else>
							<set_value name="$playerMoneyInTrust" exact="$playerMoneyInTrust + player.money" />
						</do_else>
					</actions>
					<cues>
						<cue name="TransferAllToTrust_Timeout" checktime="player.age + 1s">
							<actions>
								<debug_text text="'player.money (post transfer): ' + player.money" chance="kATD.$debugChance" />
								<debug_text text="'$playerMoneyInTrust: ' + $playerMoneyInTrust" chance="kATD.$debugChance" />
								<reset_cue cue="TransferAllToTrust" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="TransferAllToPlayer">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="$isPropertiesInTrust" exact="false" />
						<raise_lua_event name="'kATD.SetIsPlayerHQLost'" param="false" />
						<do_while value="$propertiesInTrust.count">
							<set_value name="$property" exact="$propertiesInTrust.{1}" />
							<set_owner object="$property" faction="faction.player" overridenpc="true" />
							<remove_from_group group="$propertiesInTrust" object="$property" />
						</do_while>
						<debug_text text="'transfer_money IN: ' + $playerMoneyInTrust" chance="kATD.$debugChance" />
						<!-- <transfer_money to="faction.player" from="faction.playertrust" amount="$playerMoneyInTrust" /> -->
						<do_if value="@md.VerboseTransactionLog.TransferMoney.exists">
							<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
								$amount = $playerMoneyInTrust,
								$description = {111204, 2005},
								$from = faction.playertrust,
								$to = faction.player,
							]" />
						</do_if>
						<do_else>
							<transfer_money to="faction.player" from="faction.playertrust" amount="$playerMoneyInTrust" />
						</do_else>
						<clear_group group="$propertiesInTrust" />
						<set_value name="$playerMoneyInTrust" exact="0" />
						<!-- <set_value name="$inventory" exact="TrustExecutor.$npc.inventory.list"/>
						<do_all counter="$i" exact="$inventory.count">
							<set_value name="$inventoryItem" exact="$inventory.{$i}" />
							<debug_text text="'$inventoryItem: ' + $inventoryItem" chance="$debugChance" />
							<set_value name="$inventoryAmount" exact="TrustExecutor.$npc.inventory.{$inventoryItem}.count"/>
							<add_inventory entity="player.entity" ware="$inventoryItem" exact="$inventoryAmount"/>
							<remove_inventory entity="TrustExecutor.$npc" ware="$inventoryItem" exact="$inventoryAmount"/>
						</do_all> -->
						<do_if value="@md.kuertee_chc.kCHC.exists">
							<signal_cue cue="md.kuertee_chc.RestoreCrimes" />
						</do_if>
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="SetNewRandomName">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<create_cue_actor cue="this" name="$tempActor">
							<select race="player.entity.race" />
							<owner exact="faction.player" />
						</create_cue_actor>
						<create_cue_actor cue="this" name="$tempActor2">
							<select race="player.entity.race" />
							<owner exact="faction.player" />
						</create_cue_actor>
						<raise_lua_event name="'kATD.SetPlayerNameFromList'" param="$tempActor.knownname + ' ' + $tempActor2.knownname" />
						<destroy_object object="$tempActor" />
						<destroy_object object="$tempActor2" />
						<reset_cue cue="this" />
					</actions>
				</cue>
				<library name="DeathNoticeClone">
					<actions>
						<!-- <set_value name="player.name" exact="player.name + ' v' + kATD.$clonedCounter + '.0'" /> -->
						<!-- one more than clonedCounter because clone v1 is true self -->
						<raise_lua_event name="'kATD.SetPlayerNameClone'" param="kATD.$clonedCounter + 1" />
						<do_if value="(not $attackerFaction) and (not $actionVerb)">
							<set_value name="$line1" exact="{111204, 1000}" comment="Your pre-self has died." />
						</do_if>
						<do_elseif value="$attackerFaction and not $actionVerb">
							<set_value name="$line1" exact="{111204, 1001}.[$attackerFaction]" comment="Your pre-self has died in the line of duty against the %1." />
						</do_elseif>
						<do_elseif value="$attackerFaction and $actionVerb">
							<set_value name="$line1" exact="{111204, 1002}.[$attackerFaction, $actionVerb]" comment="While peacefully %1, your pre-self was killed in an attack by the %2." />
						</do_elseif>
						<do_else>
							<set_value name="$line1" exact="{111204, 1003}.[$actionVerb]" comment="Your pre-self has died in an accident while %1." />
						</do_else>
						<do_if value="kATD.$deathAlternative == 'clone' and kATD.$userOwnershipOnDeath_clone == kATD.$ownershipOnDeath_inherited">
							<set_value name="$line2" exact="{111204, 1004}" comment="According to your contract, all ships and stations owned by your pre-self will be held in a trust." />
							<set_value name="$line3" exact="{111204, 1005}.[kATD.$userInheritTrustOnMoney.formatted.{'%s %Cr'}]" comment="You will inherit those ships and stations when you prove worthy of it by accumulating %1." />
							<set_value name="$line3" exact="{111204, 1006}" comment="We have been instructed to hand-over to your pre-self's data: open contracts, navigation charts, data journals, and research papers." />
						</do_if>
						<do_else>
							<set_value name="$line2" exact="{111204, 1007}" comment="You have inherited all ships and stations owned by your pre-self." />
						</do_else>
					</actions>
				</library>
				<library name="DeathNoticeDescendant">
					<actions>
						<signal_cue_instantly cue="SetNewRandomName" />
						<do_if value="(not $attackerFaction) and (not $actionVerb)">
							<set_value name="$line1" exact="{111204, 1100}.[kATD.$oldPlayerName]" comment="%1, a distant relation, has died." />
						</do_if>
						<do_elseif value="$attackerFaction and not $actionVerb">
							<set_value name="$line1" exact="{111204, 1101}.[kATD.$oldPlayerName, $attackerFaction]" comment="%1, a distant relation, has died in the line of duty against the %2." />
						</do_elseif>
						<do_elseif value="$attackerFaction and $actionVerb">
							<set_value name="$line1" exact="{111204, 1102}.[$actionVerb, kATD.$oldPlayerName, $attackerFaction]" comment="While peacefully %1, %2, a distant relation, was killed in an attack by the %3." />
						</do_elseif>
						<do_else>
							<set_value name="$line1" exact="{111204, 1103}.[kATD.$oldPlayerName, $actionVerb]" comment="%1, a distant relation, has died in an accident while %2." />
						</do_else>
						<do_if value="kATD.$userOwnershipOnDeath_descendant == kATD.$ownershipOnDeath_inherited">
							<set_value name="$line2" exact="{111204, 1104}.[kATD.$oldPlayerName]" comment="According to the will, all ships and stations owned by %1 will be held in a trust." />
							<set_value name="$line3" exact="{111204, 1105}.[kATD.$userInheritTrustOnMoney.formatted.{'%s %Cr'}]" comment="You will inherit those ships and stations when you prove worthy of it by accumulating %1." />
							<set_value name="$line4" exact="{111204, 1106}.[kATD.$oldPlayerName]" comment="We have been instructed to hand-over to %1's data: open contracts, navigation charts, data journals, and research papers." />
						</do_if>
						<do_else>
							<set_value name="$line2" exact="{111204, 1107}.[kATD.$oldPlayerName]" comment="You have inherited all ships and stations owned by %1." />
						</do_else>
					</actions>
				</library>
				<library name="DeathNoticeTeleport">
					<actions>
						<do_if value="@player.ship.aipilot">
							<set_value name="$line1" exact="{111204, 1201}.[player.ship.aipilot.knownname]" comment="%1 teleported you to safety." />
						</do_if>
						<do_elseif value="@player.station.assignedcontrolentity.{controlpost.manager}">
							<set_value name="$line1" exact="{111204, 1201}.[player.station.assignedcontrolentity.{controlpost.manager}.knownname]" comment="%1 teleported you to safety." />
						</do_elseif>
						<do_else>
							<set_value name="$line1" exact="{111204, 1202}" comment="Your ship's computer teleported you away to safety." />
						</do_else>
					</actions>
				</library>
				<library name="DeathNoticeRansom">
					<actions>
						<set_value name="$line1" exact="{111204, 1401}.[$attackerFaction]" comment="You were released from the %1's capture after paying this ransom:" />
						<set_value name="$line2" exact="''" />
						<set_value name="$delimiter" exact="''" />
						<debug_text text="'kATD.$ransomedItems: ' + kATD.$ransomedItems" chance="kATD.$debugChance" />
						<set_value name="$classesToRansom" exact="[class.ship_s, class.ship_m, class.ship_l, class.ship_xl, class.station]" />
						<do_all counter="$i" exact="kATD.$ransomedItems.count">
							<do_if value="$i gt 1">
								<set_value name="$delimiter" exact="'\n'" />
							</do_if>
							<do_if value="@$classesToRansom.indexof.{@kATD.$ransomedItems.{$i}.class}">
								<set_value name="$line2" exact="$line2 + $delimiter + kATD.$ransomedItems.{$i}.knownname + ', ' + kATD.$ransomedItems.{$i}.sector.knownname" />
							</do_if>
							<!-- <do_elseif value="kATD.$ransomedItems.{$i} == datatype.float or kATD.$ransomedItems.{$i} == datatype.integer"> -->
							<do_else>
								<set_value name="$line2" exact="$line2 + $delimiter + kATD.$ransomedItems.{$i}.formatted.{'%s %Cr'}" />
								<!-- </do_elseif> -->
							</do_else>
						</do_all>
					</actions>
				</library>
				<library name="DeathNoticeAssimilation">
					<actions>
						<do_if value="$attackerFaction == faction.xenon">
							<set_value name="$line1" exact="{111204, 1503}" comment="Prime directive: destroy all organic life." />
						</do_if>
						<do_elseif value="$attackerFaction == faction.khaak">
							<set_value name="$line1" exact="{111204, 1505}" comment="We obey the queen. We protect the hive. We spread the spore." />
						</do_elseif>
						<do_else>
							<set_value name="$line1" exact="{111204, 1501}.[$attackerFaction.knownname]" comment="You awaken from a deep sleep with a half-remembered dream that your ever-trusting ally, the %1, were your enemies." />
						</do_else>
						<do_if value="kATD.$userOwnershipOnDeath_assimilated == kATD.$ownershipOnDeath_inherited">
							<set_value name="$line2" exact="{111204, 1104}.[kATD.$oldPlayerName]" comment="According to the will, all ships and stations owned by %1 will be held in a trust." />
							<set_value name="$line3" exact="{111204, 1105}.[kATD.$userInheritTrustOnMoney.formatted.{'%s %Cr'}]" comment="You will inherit those ships and stations when you prove worthy of it by accumulating %1." />
							<set_value name="$line4" exact="{111204, 1106}.[kATD.$oldPlayerName]" comment="We have been instructed to hand-over to %1's data: open contracts, navigation charts, data journals, and research papers." />
						</do_if>
					</actions>
				</library>
				<cue name="ShowDeathNoticeAndUpdateName" namespace="this">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<debug_text text="'kATD.$deathAlternative: ' + kATD.$deathAlternative" chance="kATD.$debugChance" />
						<debug_text text="'player.ship: ' + @player.ship + ' player.ship.aipilot.class: ' + @player.ship.aipilot.class" chance="kATD.$debugChance" />
						<debug_text text="'player.station: ' + @player.station + ' player.station.assignedcontrolentity.{controlpost.manager}.class: ' + @player.station.assignedcontrolentity.{controlpost.manager}.class" chance="kATD.$debugChance" />
						<set_value name="$attackerFaction" exact="@event.param.$attackerFaction" />
						<set_value name="$shipType" exact="@event.param.$shipType" />
						<set_value name="$line1" exact="null" />
						<set_value name="$line2" exact="null" />
						<set_value name="$line3" exact="null" />
						<set_value name="$line4" exact="null" />
						<set_value name="$transportingShipTypes" exact="[shiptype.courier, shiptype.transporter, shiptype.personnelcarrier, shiptype.scavenger]" />
						<set_value name="$miningShipTypes" exact="[shiptype.miner, shiptype.largeminer]" />
						<set_value name="$actionVerb" exact="null" />
						<set_value name="kATD.$oldPlayerName" exact="player.name" />
						<do_if value="$transportingShipTypes.indexof.{$shipType}">
							<set_value name="$actionVerb" exact="{111204, 800}" comment="transporting" />
						</do_if>
						<do_elseif value="$miningShipTypes.indexof.{$shipType}">
							<set_value name="$actionVerb" exact="{111204, 801}" comment="mining" />
						</do_elseif>
						<do_elseif value="not $attackerFaction">
							<set_value name="$actionVerb" exact="{111204, 802}" comment="exploring" />
						</do_elseif>
						<do_if value="kATD.$deathAlternative == 'clone'">
							<include_actions ref="DeathNoticeClone" />
						</do_if>
						<do_elseif value="kATD.$deathAlternative == 'descendant'">
							<include_actions ref="DeathNoticeDescendant" />
						</do_elseif>
						<do_elseif value="kATD.$deathAlternative == 'teleport'">
							<include_actions ref="DeathNoticeTeleport" />
						</do_elseif>
						<do_elseif value="kATD.$deathAlternative == 'ransom'">
							<include_actions ref="DeathNoticeRansom" />
						</do_elseif>
						<do_elseif value="kATD.$deathAlternative == 'assimilation'">
							<include_actions ref="DeathNoticeAssimilation" />
						</do_elseif>
					</actions>
					<cues>
						<cue name="DeathNoticeForNonDescendantAndNonClone">
							<actions>
								<do_if value="kATD.$deathAlternative != 'clone' and kATD.$deathAlternative != 'descendant'">
									<debug_text text="'signal_cue ' + OpenNotice" chance="kATD.$debugChance" />
									<signal_cue cue="OpenNotice" />
									<cancel_cue cue="this" />
								</do_if>
							</actions>
						</cue>
						<cue name="DeathNoticeForDescendant">
							<conditions>
								<check_any>
									<check_all>
										<event_ui_triggered screen="'kATD'" control="'on_set_player_name_clone'" />
										<check_value value="kATD.$deathAlternative == 'clone'" />
									</check_all>
									<check_all>
										<event_ui_triggered screen="'kATD'" control="'on_set_player_name_from_list'" />
										<check_value value="kATD.$deathAlternative == 'descendant'" />
									</check_all>
								</check_any>
							</conditions>
							<actions>
								<debug_text text="'signal_cue ' + OpenNotice" chance="kATD.$debugChance" />
								<signal_cue cue="OpenNotice" />
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="OpenNotice">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<debug_text text="'event_cue_signalled'" chance="kATD.$debugChance" />
								<set_value name="$text" exact="''" />
								<do_if value="kATD.$deathAlternative == 'clone' or kATD.$deathAlternative == 'descendant'">
									<set_value name="$title" exact="{111204, 900}" comment="A notice of death" />
									<set_value name="$text" exact="$text + {111204, 901}.[player.name] + '\n'" comment="To: %1" />
									<set_value name="$text" exact="$text + {111204, 902}.[kATD.$oldPlayerName] + '\n\n'" comment="From: the executor of the estate of %1" />
								</do_if>
								<do_elseif value="kATD.$deathAlternative == 'teleport'">
									<set_value name="$title" exact="{111204, 1200}" comment="Teleport notice" />
								</do_elseif>
								<do_elseif value="kATD.$deathAlternative == 'ransom'">
									<set_value name="$title" exact="{111204, 1400}" comment="A notice of release" />
								</do_elseif>
								<do_elseif value="kATD.$deathAlternative == 'assimilation'">
									<do_if value="$attackerFaction == faction.xenon">
										<set_value name="$title" exact="{111204, 1502}" comment="Hello world" />
									</do_if>
									<do_elseif value="$attackerFaction == faction.khaak">
										<set_value name="$title" exact="{111204, 1504}" comment="I am us. You are me. We are one." />
									</do_elseif>
									<do_else>
										<set_value name="$title" exact="{111204, 1500}" comment="Good morning" />
									</do_else>
								</do_elseif>
								<do_if value="$line1"><!-- usually description of death -->
									<set_value name="$text" exact="$text + $line1 + '\n\n'" />
								</do_if>
								<do_if value="$line2"><!-- inheritance or ransom -->
									<set_value name="$text" exact="$text + $line2 + '\n\n'" />
								</do_if>
								<do_if value="$line3"><!-- extra -->
									<set_value name="$text" exact="$text + $line3 + '\n\n'" />
								</do_if>
								<do_if value="$line4"><!-- extra -->
									<set_value name="$text" exact="$text + $line4 + '\n\n'" />
								</do_if>
								<set_value name="kATD.$deathNotice" exact="$text" />
								<open_menu menu="UserQuestionMenu" param="[0, 0, 'custom', [$title, $text, null, ['kATD_on_death_notice_read', {111204, 903}], null, 'right']]" />
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="OnConfirmDeathNotice">
							<conditions>
								<check_any>
									<check_all>
										<event_ui_triggered screen="'UserQuestionMenu'" control="'selected'" />
										<check_value value="event.param3 == 'kATD_on_death_notice_read'" />
									</check_all>
									<event_ui_triggered screen="'UserQuestionMenu'" control="'menu_close'" />
								</check_any>
							</conditions>
							<actions>
								<do_if value="kATD.$deathAlternative == 'clone' or kATD.$deathAlternative == 'descendant'">
									<write_incoming_message title="$title" text="$text" highpriority="true" source="{111204, 200}" comment="Trust Executor's Office" />
									<write_to_logbook category="general" title="{111204, 900}" text="{111204, 1300}.[kATD.$oldPlayerName]" comment="%1 has died." />
								</do_if>
								<write_to_logbook category="general" title="$title" text="$text" />
								<reset_cue cue="this" />
								<reset_cue cue="parent" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="CloningLab" namespace="this">
					<cues>
						<cue name="CloningLabAddToStation" version="2">
							<conditions>
								<event_object_signalled object="player.entity" param="'K_ArriveAndLeaveStations'" />
								<check_any>
									<check_all>
										<check_value value="@event.param2.$teleportTo.exists" />
										<check_value value="not @event.param2.$teleportTo.isplayerowned" />
									</check_all>
									<check_all>
										<check_value value="@event.param2.$dockAt.exists" />
										<check_value value="not @event.param2.$dockAt.isplayerowned" />
									</check_all>
								</check_any>
							</conditions>
							<actions>
								<!-- <set_value name="$station" exact="player.station" /> -->
								<set_value name="$station" exact="@event.param2.$teleportTo" />
								<do_if value="not @$station.exists">
									<set_value name="$station" exact="@event.param2.$dockAt" />
								</do_if>
								<set_value name="$cloningStation" exact="@kATD.$cloningStations.{$station}" />
								<do_if value="not $cloningStation">
									<set_value name="$random" min="1" max="100" />
									<set_value name="kATD.$cloningStations.{$station}" exact="table[$hasOffice = $random gt 50, $cloneCount = 0, $cloneCost = 0, $isSpawned = false]" />
									<set_value name="$cloningStation" exact="@kATD.$cloningStations.{$station}" />
								</do_if>
								<debug_text text="'$cloningStation.$hasOffice: ' + $cloningStation.$hasOffice" chance="kATD.$debugChance" />
								<do_if value="$cloningStation.$hasOffice or kATD.$debugChance">
									<do_if value="not $cloningStation.$isSpawned">
										<set_value name="$cloningStation.$isSpawned" exact="true" />
										<set_value name="$cloningTechnician" exact="@$cloningStation.$cloningTechnician" />
										<!-- <do_if value="(not $cloningTechnician) or (not $cloningTechnician.exists)"> -->
										<do_if value="(not $cloningTechnician) or (not $cloningTechnician.exists)">
											<!-- <get_character_definition reference="$cloningTechnicianRef" faction="$station.owner" tags="tag.manager"/> -->
											<!-- <create_cue_actor name="$cloningTechnician" cue="this" ref="$cloningTechnicianRef"> -->
											<set_value name="$factions" exact="kATD.$validFactions" />
											<create_cue_actor name="$cloningTechnician" cue="this">
												<select faction="$factions.random" />
												<owner exact="$station.owner" />
											</create_cue_actor>
											<set_entity_traits entity="$cloningTechnician" missionactor="true" />
											<set_entity_overrides entity="$cloningTechnician" icon="'specialist'" />
											<!-- <set_entity_traits entity="$cloningTechnician" hidden="true"/> -->
											<!-- <set_entity_role entity="$cloningTechnician" role="entityrole.service"/>
											<set_entity_role_object entity="$cloningTechnician" object="$station"/> -->
											<set_value name="$cloningStation.$cloningTechnician" exact="$cloningTechnician" />
										</do_if>
										<set_value name="$dockArea" exact="@$cloningStation.$dockArea" />
										<do_if value="not $dockArea">
											<find_object_component name="$dockArea" object="$station" class="class.walkablemodule" />
											<set_value name="$cloningStation.$dockArea" exact="$dockArea" />
										</do_if>
										<do_if value="$dockArea">
											<get_room_definition macro="$corridorMacro" race="$station.owner.primaryrace" tags="tag.corridor" />
											<do_if value="not $corridorMacro">
												<get_room_definition macro="$corridorMacro" race="faction.argon.primaryrace" tags="tag.corridor" />
											</do_if>
											<get_room_definition macro="$roomMacro" race="$station.owner.primaryrace" tags="tag.office" />
											<do_if value="not $roomMacro">
												<get_room_definition macro="$roomMacro" race="faction.argon.primaryrace" tags="tag.office" />
											</do_if>
											<set_value name="$roomName" exact="{111204, 300}" />
											<create_dynamic_interior object="$station"
												corridor="$corridorMacro" room="$roomMacro"
												name="$roomName"
												interiorname="$interior" corridorname="$corridor" roomname="$room" roomtype="roomtype.office"
												seed="$station.seed + lookup.roomtype.list.indexof.{roomtype.office}" />
											<do_if value="$interior and $corridor and $room">
												<find_npc_slot name="$roomSlot" object="$room" tags="tag.control" />
												<do_if value="$roomSlot">
													<add_actor_to_room actor="$cloningTechnician" slot="$roomSlot" />
												</do_if>
											</do_if>
											<debug_text text="'$interior: ' + $interior + ' $corridor: ' + $corridor + ' $room: ' + $room" chance="kATD.$debugChance" />
											<debug_text text="'$roomSlot: ' + $roomSlot + ' $cloningTechnician: ' + $cloningTechnician" chance="kATD.$debugChance" />
										</do_if>
									</do_if>
								</do_if>
								<do_else>
									<reset_cue cue="this" />
								</do_else>
							</actions>
							<patch sinceversion="2">
								<debug_text text="'patch sinceversion 2, state: ' + this.state" />
								<do_for_each name="$station_inList" in="kATD.$cloningStations.{$station}.keys.list" reverse="true">
									<do_if value="$station_inList.isplayerowned">
										<debug_text text="'$station_inList (pre remove): ' + $station_inList + ' (' + $station_inList.knownname + ') ' + kATD.$cloningStations.{$station_inList}" />
										<remove_value name="kATD.$cloningStations.{$station_inList}" />
										<debug_text text="'$station_inList (post remove): ' + $station_inList + ' (' + $station_inList.knownname + ') ' + kATD.$cloningStations.{$station_inList}" />
									</do_if>
								</do_for_each>
							</patch>
							<cues>
								<cue name="CloningLabCleanUp2">
									<conditions>
										<event_object_signalled object="player.entity" param="'K_ArriveAndLeaveStations'" />
										<check_any>
											<check_value value="@event.param2.$leaveFrom == $station" />
											<check_value value="@event.param2.$undockFrom == $station" />
										</check_any>
									</conditions>
									<actions>
										<debug_text text="'$cloningTechnician: ' + $cloningTechnician" chance="kATD.$debugChance" />
										<do_if value="$cloningTechnician">
											<remove_actor_from_room actor="$cloningTechnician" />
											<destroy_object object="$cloningTechnician" />
										</do_if>
										<debug_text text="'$interior: ' + $interior" chance="kATD.$debugChance" />
										<do_if value="$interior">
											<remove_dynamic_interior object="$station" interior="$interior" />
											<destroy_object object="$interior" />
										</do_if>
										<destroy_object object="$room" />
										<set_value name="kATD.$cloningStations.{$station}.$isSpawned" exact="false" />
										<debug_text text="'kATD.$cloningStations.{$station}: ' + kATD.$cloningStations.{$station}" chance="kATD.$debugChance" />
										<do_if value="not kATD.$cloningStations.{$station}.$hasOffice">
											<!-- was built during debug, so remove -->
											<remove_value name="kATD.$cloningStations.{$station}" />
										</do_if>
										<reset_cue cue="parent" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="OnCloneTechStartConvo">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<event_conversation_started actor="$cloningTechnician" conversation="default" />
										</check_any>
									</conditions>
									<actions>
										<do_if value="event.name == 'event_cue_signalled'">
											<set_value name="$convoOption_isBuyAClone" exact="@event.param.$convoOption_isBuyAClone" />
											<set_value name="$convoOption_isHowManyClones" exact="@event.param.$convoOption_isHowManyClones" />
										</do_if>
										<do_else>
											<include_actions ref="SetCloneCost" />
											<set_value name="$convoOption_isBuyAClone" exact="false" />
											<set_value name="$convoOption_isHowManyClones" exact="false" />
											<do_if value="player.money ge kATD.$cloningStations.{$station}.$cloneCost">
												<set_value name="$convoOption_isBuyAClone" exact="true" />
											</do_if>
											<do_if value="kATD.$cloneLocations.count">
												<set_value name="$convoOption_isHowManyClones" exact="true" />
											</do_if>
										</do_else>
										<do_if value="
											event.name == 'event_conversation_started' and @md.ExtendedConversationMenu.Main.exists
											and
											(@$convoOption_isBuyAClone or @$convoOption_isHowManyClones)
										">
											<set_value name="md.ExtendedConversationMenu.Main.$convOptions.$kATD_cloneTechnician" exact="table[
												$signalCue = OnCloneTechStartConvo,
												$params = table[$convoOption_isBuyAClone = @$convoOption_isBuyAClone, $convoOption_isHowManyClones = @$convoOption_isHowManyClones]
											]" />
										</do_if>
										<do_else>
											<do_if value="$convoOption_isBuyAClone">
												<add_player_choice text="{111204, 302}.[kATD.$cloningStations.{$station}.$cloneCost.formatted.{'%s %Cr'}]" section="kATD_buy_a_clone" comment="Buy a clone: %1(cost)." />
											</do_if>
											<do_else>
												<add_player_choice selectable="false" text="{111204, 302}.[kATD.$cloningStations.{$station}.$cloneCost.formatted.{'%s %Cr'}]" section="kATD_buy_a_clone" comment="Buy a clone: %1(cost)." />
											</do_else>
											<do_if value="$convoOption_isHowManyClones">
												<add_player_choice text="{111204, 308}" section="kATD_how_many" comment="How many clones do I have?" />
											</do_if>
										</do_else>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<library name="SetCloneCost">
									<actions>
										<do_if value="not @kATD.$cloningStations.{$station}.$cloneCost">
											<set_value name="$MissionThread" exact="null" />
											<set_value name="$OfferType" exact="null" />
											<signal_cue_instantly cue="md.LIB_Reward_Balancing.Reward_Money" param="[namespace, kATD.$userCloneCostLevel, 1, $cloningTechnician.owner]" comment="basic reward credits" />
											<include_actions ref="md.LIB_Reward_Balancing.Apply_RewardMultiplier" comment="signal leak and mission thread bonus" />
											<set_value name="kATD.$cloningStations.{$station}.$cloneCost" exact="$Reward_Money__Result_Multiplied" />
										</do_if>
									</actions>
								</library>
								<cue name="OnCloneTechNextConvoSection">
									<conditions>
										<event_conversation_next_section sectionprefix="kATD_" />
									</conditions>
									<actions>
										<do_if value="event.param == 'kATD_buy_a_clone'">
											<set_value name="kATD.$cloneCount" exact="kATD.$cloneCount + 1" />
											<set_value name="kATD.$cloningStations.{$station}.$cloneCount" exact="kATD.$cloningStations.{$station}.$cloneCount + 1" />
											<add_to_group groupname="kATD.$cloneLocations" object="$station" />
											<!-- <transfer_money from="faction.player" to="player.station.owner" amount="kATD.$cloningStations.{$station}.$cloneCost" /> -->
											<do_if value="@md.VerboseTransactionLog.TransferMoney.exists">
												<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
													$amount = kATD.$cloningStations.{$station}.$cloneCost,
													$description = {111204, 2006},
													$from = faction.player,
													$to = player.station,
												]" />
											</do_if>
											<do_else>
												<transfer_money from="faction.player" to="player.station.owner" amount="kATD.$cloningStations.{$station}.$cloneCost" />
											</do_else>
											<!-- <add_conversation_view /> -->
										</do_if>
										<do_elseif value="event.param == 'kATD_how_many'">
											<set_value name="$title" exact="{111204, 309}" comment="Clone locations" />
											<set_value name="$text" exact="''" />
											<do_all counter="$i" exact="kATD.$cloneLocations.count">
												<set_value name="$cloneLocation" exact="kATD.$cloneLocations.{$i}" />
												<do_if value="@kATD.$cloningStations.{$cloneLocation}.$cloneCount">
													<set_value name="$text" exact="$text + $cloneLocation.knownname + ' (' + $cloneLocation.idcode + '),\n' + $cloneLocation.sector.knownname + ': ' + kATD.$cloningStations.{$cloneLocation}.$cloneCount + '\n\n'" />
												</do_if>
											</do_all>
											<debug_text text="'$title: ' + $title" chance="kATD.$debugChance" />
											<debug_text text="'$text: ' + $text" chance="kATD.$debugChance" />
											<open_conversation_menu menu="UserQuestionMenu" param="[0, 0, 'custom', [$title, $text, null, ['kATD_yes', {1001, 14}], null, 'right']]" comment="14 = Ok" />
										</do_elseif>
										<reset_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
					</cues>
				</cue>
				<cue name="ResetFactionRelations">
					<conditions>
						<event_cue_signalled />
						<check_value value="not kATD.$isRetainRelationships" />
					</conditions>
					<actions>
						<do_if value="kATD.$deathAlternative != 'assimilation'">
							<!-- neutrals -->
							<set_faction_relation faction="faction.alliance" otherfaction="faction.player" value="0" />
							<set_faction_relation faction="faction.antigone" otherfaction="faction.player" value="0" />
							<set_faction_relation faction="faction.argon" otherfaction="faction.player" value="0" />
							<set_faction_relation faction="faction.buccaneers" otherfaction="faction.player" value="0" />
							<set_faction_relation faction="faction.civilian" otherfaction="faction.player" value="0" />
							<set_faction_relation faction="faction.hatikvah" otherfaction="faction.player" value="0" />
							<set_faction_relation faction="faction.holyorder" otherfaction="faction.player" value="0" />
							<set_faction_relation faction="faction.ministry" otherfaction="faction.player" value="0" />
							<set_faction_relation faction="faction.ownerless" otherfaction="faction.player" value="0" />
							<set_faction_relation faction="faction.paranid" otherfaction="faction.player" value="0" />
							<set_faction_relation faction="faction.smuggler" otherfaction="faction.player" value="0" />
							<set_faction_relation faction="faction.teladi" otherfaction="faction.player" value="0" />
							<set_faction_relation faction="faction.trinity" otherfaction="faction.player" value="0" />
							<set_faction_relation faction="faction.visitor" otherfaction="faction.player" value="0" />
							<!-- non-neutral -->
							<set_faction_relation faction="faction.criminal" otherfaction="faction.player" value="-0.5" />
							<set_faction_relation faction="faction.holyorderfanatic" otherfaction="faction.player" value="-1" />
							<set_faction_relation faction="faction.khaak" otherfaction="faction.player" value="-1" />
							<set_faction_relation faction="faction.scaleplate" otherfaction="faction.player" value="-0.0032" />
							<set_faction_relation faction="faction.xenon" otherfaction="faction.player" value="-1" />
							<!-- remove licences -->
							<set_value name="$LicencesToRemove" exact="[]" />
							<do_all counter="$i" exact="faction.player.heldlicences.count">
								<set_value name="$licence" exact="faction.player.heldlicences.{$i}" />
								<do_if value="not faction.player.canholdlicence.{$licence}">
									<append_to_list name="$LicencesToRemove" exact="$licence" />
								</do_if>
							</do_all>
							<do_all counter="$i" exact="$LicencesToRemove.count">
								<remove_licence licence="$LicencesToRemove.{$i}" />
							</do_all>
						</do_if>
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="NewStart">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<run_actions ref="NewStart_CreateShip" result="$ship" />
						<do_if value="$ship.primarypurpose == purpose.trade">
							<reward_player money="200000Cr" />
						</do_if>
						<do_else>
							<do_if value="$ship.iscapitalship">
								<reward_player money="10000Cr" />
							</do_if>
							<do_else>
								<reward_player money="20000Cr" />
							</do_else>
						</do_else>
						<signal_cue_instantly cue="ResetFactionRelations" />
						<reset_cue cue="this" />
					</actions>
				</cue>
				<library name="NewStart_CreateShip" purpose="run_actions">
					<actions>
						<set_value name="$ship_new" exact="null" />
						<set_value name="$newStart_primaryPurposes" exact="[]" />
						<do_if value="kATD.$userIsNewStartMiner">
							<append_to_list name="$newStart_primaryPurposes" exact="purpose.mine" />
						</do_if>
						<do_if value="kATD.$userIsNewStartTrader">
							<append_to_list name="$newStart_primaryPurposes" exact="purpose.trade" />
						</do_if>
						<do_if value="kATD.$userIsNewStartFighter">
							<append_to_list name="$newStart_primaryPurposes" exact="purpose.fight" />
						</do_if>
						<set_value name="$newStart_classes" exact="[]" />
						<do_if value="kATD.$userIsNewStartSmallShip">
							<append_to_list name="$newStart_classes" exact="class.ship_s" />
						</do_if>
						<do_if value="kATD.$userIsNewStartMediumShip">
							<append_to_list name="$newStart_classes" exact="class.ship_m" />
						</do_if>
						<do_if value="kATD.$userIsNewStartLargeShip">
							<append_to_list name="$newStart_classes" exact="class.ship_l" />
						</do_if>
						<set_value name="$newStartFactions" exact="[]" />
						<do_if value="not @kATD.$gameStartFaction">
							<get_factions_by_relation result="$factions_neutral" faction="faction.player" relation="neutral" />
							<get_factions_by_relation result="$factions_friend" faction="faction.player" relation="friend" />
							<append_list_elements name="$newStartFactions" other="$factions_neutral" />
							<append_list_elements name="$newStartFactions" other="$factions_friend" />
							<get_factions_by_tag result="$factions_hidden" tag="tag.hidden" />
							<remove_from_list name="$newStartFactions" list="$factions_hidden" />
							<remove_from_list name="$newStartFactions" exact="faction.player" />
							<remove_from_list name="$newStartFactions" exact="faction.khaak" />
							<remove_from_list name="$newStartFactions" exact="faction.xenon" />
						</do_if>
						<do_else>
							<append_to_list name="$newStartFactions" exact="kATD.$gameStartFaction" />
						</do_else>
						<set_value name="$gateDistance" exact="2" />
						<set_value name="$loopCount" exact="1" />
						<do_while value="not @$ship_new.exists">
							<set_value name="$newStartSectors" exact="[]" />
							<do_if value="not @kATD.$gameStartSector">
								<find_sector_in_range distances="$jumpDistancesBySector" object="player.sector" maxdistance="$gateDistance" multiple="true" />
							</do_if>
							<do_else>
								<find_sector_in_range distances="$jumpDistancesBySector" object="kATD.$gameStartSector" maxdistance="$gateDistance" multiple="true" />
							</do_else>
							<append_list_elements name="$newStartSectors" other="$jumpDistancesBySector.keys.list.clone" />
							<set_value name="$ships_valid" exact="[]" />
							<do_for_each name="$primaryPurpose" in="$newStart_primaryPurposes">
								<find_ship name="$ships_found" class="$newStart_classes" primarypurpose="$primaryPurpose" space="$newStartSectors" multiple="true">
									<match owner="$newStartFactions" />
								</find_ship>
								<do_if value="$primaryPurpose == purpose.mine">
									<do_for_each name="$ship_miner" in="$ships_found">
										<do_if value="$ship_miner.cargo.capacity.solid">
											<append_to_list name="$ships_valid" exact="$ships_found" />
										</do_if>
									</do_for_each>
								</do_if>
								<do_else>
									<append_list_elements name="$ships_valid" other="$ships_found" />
								</do_else>
							</do_for_each>
							<do_if value="$ships_valid.count">
								<set_value name="$ship" exact="$ships_valid.random" />
								<generate_loadout result="$loadout" macro="$ship.macro" level="$ship.loadoutlevel" />
								<create_ship name="$ship_new" macro="$ship.macro" dock="player.station">
									<owner exact="faction.player" />
									<pilot>
										<select faction="$newStartFactions.random" />
										<owner faction="faction.player" />
									</pilot>
									<people>
										<fillpercent min="25" max="75" />
									</people>
								</create_ship>
								<apply_loadout object="$ship_new" loadout="$loadout.{1}" />
								<start_script object="$ship_new.assignedaipilot" name="'orders.base'" />
							</do_if>
							<set_value name="$gateDistance" operation="add" exact="1" />
							<set_value name="$loopCount" operation="add" exact="1" />
							<do_if value="$ship_new.exists or $loopCount gt 10">
								<break />
							</do_if>
						</do_while>
						<return value="$ship_new" />
					</actions>
				</library>
				<library name="GetFriendliestFaction" purpose="run_actions">
					<actions>
						<set_value name="$faction" exact="null" />
						<set_value name="$factions" exact="[]" />
						<get_factions_by_relation result="$factions_neutral" faction="faction.player" relation="neutral" />
						<get_factions_by_relation result="$factions_friend" faction="faction.player" relation="friend" />
						<append_list_elements name="$factions" other="$factions_neutral" />
						<append_list_elements name="$factions" other="$factions_friend" />
						<get_factions_by_tag result="$factions_hidden" tag="tag.hidden" />
						<remove_from_list name="$factions" list="$factions_hidden" />
						<remove_from_list name="$factions" exact="faction.player" />
						<sort_list list="$factions" sortbyvalue="loop.element.relationto.{faction.player}" sortdescending="true" />
						<set_value name="$faction" exact="$factions.{1}" />
						<return value="$faction" />
					</actions>
				</library>
				<cue name="TrustExecutor" namespace="this">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="$npc" exact="null" />
						<set_value name="$station" exact="null" />
						<set_value name="$dockArea" exact="null" />
						<set_value name="$interior" exact="null" />
						<set_value name="$isSpawned" exact="false" />
						<!-- <set_value name="$station" exact="player.headquarters"/>
						<do_while value="not $station">
							<set_value name="$station" exact="[faction.alliance.headquarters, faction.antigone.headquarters, faction.argon.headquarters, faction.buccaneers.headquarters, faction.hatikvah.headquarters, faction.holyorder.headquarters, faction.ministry.headquarters, faction.paranid.headquarters, faction.smuggler.headquarters, faction.teladi.headquarters, faction.trinity.headquarters].random" />
						</do_while> -->
						<set_value name="$factions" exact="kATD.$validFactions.clone" />
						<shuffle_list list="$factions" />
						<do_while value="(not $station) or $station.macro == macro.torus_maze_macro">
							<set_value name="$station" exact="@$factions.{1}.headquarters" />
							<remove_from_list name="$factions" exact="$factions.{1}" />
						</do_while>
						<debug_text text="'$station: ' + $station + ' (' + $station.knownname + ')'" chance="kATD.$debugChance" />
						<do_if value="kATD.$debugChance and player.station">
							<set_value name="$station" exact="player.station" />
							<debug_text text="'$station: ' + $station + ' (' + $station.knownname + ')'" chance="kATD.$debugChance" />
						</do_if>
						<do_if value="not $npc or not $npc.exists">
							<!-- <create_cue_actor name="$npc" cue="this"> -->
							<set_value name="$factions" exact="kATD.$validFactions.clone" />
							<create_cue_actor name="$npc" cue="this">
								<select faction="$factions.random" />
								<owner exact="faction.playertrust" />
							</create_cue_actor>
							<set_entity_traits entity="$npc" missionactor="true" />
							<set_entity_overrides entity="$npc" icon="'licencebroker'" />
							<!-- <set_entity_traits entity="$npc" hidden="true"/> -->
						</do_if>
						<do_if value="not $dockArea">
							<find_object_component name="$dockArea" object="$station" class="class.walkablemodule" />
						</do_if>
						<do_if value="not $isSpawned">
							<set_value name="$isSpawned" exact="true" />
							<get_room_definition macro="$corridorMacro" race="$station.owner.primaryrace" tags="tag.corridor" />
							<do_if value="not $corridorMacro">
								<get_room_definition macro="$corridorMacro" race="faction.argon.primaryrace" tags="tag.corridor" />
							</do_if>
							<get_room_definition macro="$roomMacro" race="$station.owner.primaryrace" tags="tag.office" />
							<do_if value="not $roomMacro">
								<get_room_definition macro="$roomMacro" race="faction.argon.primaryrace" tags="tag.office" />
							</do_if>
							<set_value name="$roomName" exact="{111204, 200}" />
							<create_dynamic_interior object="$station"
								corridor="$corridorMacro" room="$roomMacro"
								name="$roomName"
								interiorname="$interior" corridorname="$corridor" roomname="$room" roomtype="roomtype.office"
								seed="$station.seed + lookup.roomtype.list.indexof.{roomtype.office}"
								persistent="true" />
							<do_if value="$interior and $corridor and $room">
								<find_npc_slot name="$roomSlot" object="$room" tags="tag.control" />
								<do_if value="$roomSlot">
									<add_actor_to_room actor="$npc" slot="$roomSlot" />
								</do_if>
							</do_if>
							<debug_text text="'$interior: ' + $interior + ' $corridor: ' + $corridor + ' $room: ' + $room" chance="kATD.$debugChance" />
							<debug_text text="'$roomSlot: ' + $roomSlot + ' $npc: ' + $npc" chance="kATD.$debugChance" />
						</do_if>
					</actions>
					<cues>
						<cue name="OnExitTrustExecutorStation">
							<conditions>
								<event_object_signalled object="player.entity" param="'K_ArriveAndLeaveStations'" />
								<check_any>
									<check_value value="@event.param2.$leaveFrom == $station" />
									<check_value value="@event.param2.$undockFrom == $station" />
								</check_any>
								<check_value value="not $interior.ispersistent" />
							</conditions>
							<actions>
								<signal_cue cue="CleanUpTrustExecutor" />
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="CleanUpTrustExecutor">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<debug_text text="'$isSpawned: ' + $isSpawned" chance="kATD.$debugChance" />
								<do_if value="$isSpawned">
									<set_value name="$isSpawned" exact="false" />
									<do_if value="$npc">
										<remove_actor_from_room actor="$npc" />
									</do_if>
									<do_if value="$interior">
										<remove_dynamic_interior object="$station" interior="$interior" />
										<destroy_object object="$interior" />
									</do_if>
									<destroy_object object="$room" />
								</do_if>
								<reset_cue cue="parent" />
								<reset_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="AssimilatePlayer">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="$attackerFaction" exact="event.param.$attackerFaction" />
						<!-- relationto.{$faction} -->
						<set_value name="$factions" exact="kATD.$validFactions" />
						<set_value name="$faction" exact="null" />
						<set_value name="kATD.$isHideNotifications" exact="false" />
						<do_all counter="$i" exact="$factions.count">
							<set_value name="$faction" exact="$factions.{$i}" />
							<set_faction_relation_locked faction="$faction" locked="false" />
							<!-- <debug_text text="'$faction: ' + $faction + ' $faction.relationto.{$attackerFaction}: ' + $faction.relationto.{$attackerFaction} + ' ' + $attackerFaction.relationto.{$faction}" chance="kATD.$debugChance" /> -->
							<set_faction_relation faction="$faction" otherfaction="faction.player" value="$faction.relationto.{$attackerFaction}" />
							<set_faction_relation faction="faction.player" otherfaction="$faction" value="$attackerFaction.relationto.{$faction}" />
						</do_all>
						<set_faction_relation_locked faction="$attackerFaction" locked="false" />
						<set_faction_relation faction="$attackerFaction" otherfaction="faction.player" value="0.5" />
						<set_faction_relation faction="faction.player" otherfaction="$attackerFaction" value="0.5" />
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="SavedGames" namespace="this">
					<!--
						$saveScumData = [
							table[$gameId = $gameId, $time_lastRecorded = time],
							...
						]
						$gameId is also the index of the data in the array.
					-->
					<delay exact="1s" />
					<actions>
						<run_actions ref="md.Userdata.Read" result="$gameId">
							<param name="Owner" value="'kuertee_uix'" />
							<param name="Key" value="'gameId'" />
							<param name="Default" value="false" />
						</run_actions>
						<debug_text text="'$gameId: ' + $gameId" />
					</actions>
					<cues>
						<cue name="SavedGames_PenaliseIfRequired">
							<conditions>
								<event_game_loaded />
								<check_value value="not @player.allmodules.{player.module}.isscenario" />
							</conditions>
							<delay exact="1s" />
							<actions>
								<do_if value="event.name == 'event_game_loaded'">
									<set_value name="kATD.$debugChance" exact="100" />
								</do_if>
								<debug_text text="'event.name: ' + event.name + ' $gameId: ' + $gameId" chance="kATD.$debugChance" />
								<run_actions ref="md.Userdata.Read" result="kATD.$userDeadIsDead">
									<param name="Owner" value="'kuertee_alternatives_to_death'" />
									<param name="Key" value="'userDeadIsDead'" />
									<param name="Default" value="false" />
								</run_actions>
								<debug_text text="'kATD.$userDeadIsDead: ' + kATD.$userDeadIsDead" chance="kATD.$debugChance" />
								<run_actions ref="md.Userdata.Read" result="$saveScumData">
									<param name="Owner" value="'kuertee_alternatives_to_death'" />
									<param name="Key" value="'saveScumData2'" />
									<param name="Default" value="table[]" />
								</run_actions>
								<debug_text text="'$gameId: ' + $gameId + ' $saveScumData.{$gameId}: ' + @$saveScumData.{$gameId}" />
								<do_if value="not @$saveScumData.{'$' + $gameId}.$gameId" comment="new game or game has not previous had registered with the save scum system">
									<run_actions ref="SavedGames_UpdateSaveScumTime">
										<param name="DebugChance" value="100" />
									</run_actions>
								</do_if>
								<do_else>
									<debug_text text="'player.age: ' + player.age" chance="kATD.$debugChance" />
									<debug_text text="'$gameId: ' + $gameId" chance="kATD.$debugChance" />
									<debug_text text="'kATD.$userSaveScumPenalty_creditsPerc: ' + kATD.$userSaveScumPenalty_creditsPerc" chance="kATD.$debugChance" />
									<debug_text text="'kATD.$userSaveScumPenalty_death: ' + kATD.$userSaveScumPenalty_death" chance="kATD.$debugChance" />
									<debug_text text="'$saveScumData.{$' + $gameId + '}.$time_lastRecorded: ' + $saveScumData.{'$' + $gameId}.$time_lastRecorded" chance="kATD.$debugChance" />
									<debug_text text="'$saveScumData.{$' + $gameId + '}.$time_lastRecorded - player.age: ' + ($saveScumData.{'$' + $gameId}.$time_lastRecorded - player.age)" chance="kATD.$debugChance" />
									<do_if value="kATD.$userDeadIsDead and $saveScumData.{$gameId}.$time_death">
										<run_actions ref="SavedGames_RemoveSaveScumDeath" />
										<signal_cue_instantly cue="PlayerDeath" param="table[$isSaveShip = true]" />
									</do_if>
									<do_elseif value="
										$saveScumData.{'$' + $gameId}.$time_lastRecorded and
										player.age le $saveScumData.{'$' + $gameId}.$time_lastRecorded and
										$saveScumData.{'$' + $gameId}.$time_lastRecorded - player.age gt kATD.$userSaveScumPenalty_timeMinutes * 1min and
										(
											kATD.$userSaveScumPenalty_creditsPerc gt 0 or
											kATD.$userSaveScumPenalty_death
										)" comment="save scum detected, apply penalties">
										<run_actions ref="SavedGames_UpdateSaveScumTime" />
										<do_if value="kATD.$userSaveScumPenalty_death">
											<debug_text text="'signal_cue_instantly ' + PlayerDeath" chance="kATD.$debugChance" />
											<signal_cue_instantly cue="PlayerDeath" param="table[$isSaveShip = true]" />
										</do_if>
										<do_elseif value="kATD.$userSaveScumPenalty_creditsPerc gt 0">
											<set_value name="$credits_penalty" exact="player.money * (kATD.$userSaveScumPenalty_creditsPerc / 100.0)ct" />
											<debug_text text="'$credits_penalty: ' + $credits_penalty" chance="kATD.$debugChance" />
											<!-- <transfer_money from="faction.player" to="faction.kATD_moneysink" amount="$credits_penalty" /> -->
											<do_if value="@md.VerboseTransactionLog.TransferMoney.exists">
												<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
													$amount = $credits_penalty,
													$description = {111204, 2007},
													$from = faction.player,
												]" />
											</do_if>
											<do_else>
												<transfer_money from="faction.player" to="faction.kATD_moneysink" amount="$credits_penalty" />
											</do_else>
										</do_elseif>
									</do_elseif>
								</do_else>
								<remove_value name="$saveScumData" />
								<do_if value="event.name == 'event_game_loaded'">
									<set_value name="kATD.$debugChance" exact="0" />
								</do_if>
								<run_actions ref="SavedGames_UpdateGameDataToBlackboard" />
								<reset_cue cue="this" />
							</actions>
						</cue>
						<library name="SavedGames_UpdateGameDataToBlackboard" purpose="run_actions">
							<actions>
								<set_value name="player.entity.$kATD_gameData" exact="table[
									$gameId = SavedGames.$gameId,
									$isDeadIsDeadActive = kATD.$userDeadIsDead and $saveScumData.{$gameId}.$time_death,
									$isIronManMode = kATD.$userIsIronManMode,
									$saveScumTime = kATD.$userSaveScumPenalty_timeMinutes,
									$playerAge = player.age,
								]" />
							</actions>
						</library>
						<cue name="SavedGames_StartRecordingSaveScumTime">
							<conditions>
								<check_any>
									<event_cue_signalled />
									<event_ui_triggered screen="'OptionsMenu'" control="'menu_close'" />
								</check_any>
								<check_value value="$gameId" />
							</conditions>
							<actions>
								<debug_text text="'event.name: ' + event.name" />
								<do_if value="(not kATD.$userDeadIsDead) and (not kATD.$userSaveScumPenalty_creditsPerc) and (not kATD.$userSaveScumPenalty_death)">
									<run_actions ref="SavedGames_DisableSaveScum" />
									<reset_cue cue="this" />
								</do_if>
								<do_if value="not @$saveScumData.{'$' + $gameId}.$gameId" comment="new game or game has not previous had registered with the save scum system">
									<run_actions ref="SavedGames_UpdateSaveScumTime">
										<param name="DebugChance" value="100" />
									</run_actions>
								</do_if>
							</actions>
							<cues>
								<cue name="SavedGames_StartRecordingSaveScumTime_OnOptionsMenuOrSaved">
									<conditions>
										<check_any>
											<event_ui_triggered screen="'OptionsMenu'" />
											<event_game_saved />
										</check_any>
									</conditions>
									<actions>
										<debug_text text="'event.name: ' + event.name" chance="kATD.$debugChance" />
										<run_actions ref="SavedGames_UpdateGameDataToBlackboard" />
										<run_actions ref="md.Userdata.Write">
											<param name="Owner" value="'kuertee_alternatives_to_death'" />
											<param name="Key" value="'userDeadIsDead'" />
											<param name="Value" value="kATD.$userDeadIsDead" />
										</run_actions>
										<run_actions ref="md.Userdata.Write">
											<param name="Owner" value="'kuertee_alternatives_to_death'" />
											<param name="Key" value="'userSaveScumPenalty_timeMinutes'" />
											<param name="Value" value="kATD.$userSaveScumPenalty_timeMinutes" />
										</run_actions>
										<run_actions ref="md.Userdata.Write">
											<param name="Owner" value="'kuertee_alternatives_to_death'" />
											<param name="Key" value="'userSaveScumPenalty_death'" />
											<param name="Value" value="kATD.$userSaveScumPenalty_death" />
										</run_actions>
										<do_if value="(not kATD.$userDeadIsDead) and (not kATD.$userSaveScumPenalty_creditsPerc) and (not kATD.$userSaveScumPenalty_death)">
											<run_actions ref="SavedGames_DisableSaveScum" />
											<reset_cue cue="parent" />
										</do_if>
										<run_actions ref="SavedGames_UpdateSaveScumTime" />
										<reset_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
						<cue name="SavedGames_RunOnce" checktime="player.age + 1s">
							<actions>
								<set_value name="$isFirstActivated" exact="true" />
								<signal_cue cue="SavedGames_StartRecordingSaveScumTime" />
							</actions>
						</cue>
						<library name="SavedGames_UpdateSaveScumData" purpose="run_actions">
							<params>
								<param name="GameId" />
								<param name="Time" />
								<param name="Death" />
								<param name="Cue" />
								<param name="DebugChance" default="kATD.$debugChance" />
							</params>
							<actions>
								<run_actions ref="md.Userdata.Read" result="$saveScumData">
									<param name="Owner" value="'kuertee_alternatives_to_death'" />
									<param name="Key" value="'saveScumData2'" />
									<param name="Default" value="table[]" />
								</run_actions>
								<do_if value="not @$saveScumData.{'$' + $GameId}.$gameId">
									<set_value name="$saveScumData.{'$' + $GameId}" exact="table[$gameId = $GameId]" />
								</do_if>
								<set_value name="$saveScumData.{'$' + $GameId}.$time_lastRecorded" exact="$Time" />
								<set_value name="$saveScumData.{'$' + $GameId}.$time_death" exact="$Death" />
								<do_if value="$saveScumData.keys.count gt 100">
									<do_while value="$saveScumData.keys.count gt 100">
										<remove_value name="$saveScumData.{$saveScumData.keys.list.{1}}" />
									</do_while>
								</do_if>
								<run_actions ref="md.Userdata.Write">
									<param name="Owner" value="'kuertee_alternatives_to_death'" />
									<param name="Key" value="'saveScumData2'" />
									<param name="Value" value="$saveScumData" />
								</run_actions>
								<debug_text text="'from: ' + $Cue + ' $GameId: ' + $GameId + ' $saveScumData.{$' + $GameId + '}: ' + $saveScumData.{'$' + $GameId}" chance="kATD.$debugChance" />
							</actions>
						</library>
						<library name="SavedGames_UpdateSaveScumTime" purpose="run_actions">
							<params>
								<param name="GameId" default="null" />
								<param name="DebugChance" default="kATD.$debugChance" />
							</params>
							<actions>
								<do_if value="not $GameId">
									<set_value name="$GameId" exact="SavedGames.$gameId" />
								</do_if>
								<do_if value="$GameId">
									<debug_text text="'$gameId: ' + $GameId" chance="$DebugChance" />
									<run_actions ref="SavedGames_UpdateSaveScumData">
										<param name="GameId" value="$GameId" />
										<param name="Time" value="player.age" />
										<param name="Death" value="0" />
										<param name="Cue" value="SavedGames_UpdateSaveScumTime" />
										<param name="DebugChance" value="$DebugChance" />
									</run_actions>
								</do_if>
							</actions>
						</library>
						<library name="SavedGames_DisableSaveScum" purpose="run_actions">
							<params>
								<param name="GameId" default="null" />
								<param name="DebugChance" default="0" />
							</params>
							<actions>
								<do_if value="not $GameId">
									<set_value name="$GameId" exact="SavedGames.$gameId" />
								</do_if>
								<do_if value="$GameId">
									<run_actions ref="SavedGames_UpdateSaveScumData">
										<param name="GameId" value="$GameId" />
										<param name="Time" value="0" />
										<param name="Death" value="0" />
										<param name="Cue" value="SavedGames_DisableSaveScum" />
										<param name="DebugChance" value="$DebugChance" />
									</run_actions>
								</do_if>
							</actions>
						</library>
						<library name="SavedGames_SetSaveScumDeath" purpose="run_actions">
							<params>
								<param name="GameId" default="null" />
								<param name="DebugChance" default="0" />
							</params>
							<actions>
								<do_if value="not $GameId">
									<set_value name="$GameId" exact="SavedGames.$gameId" />
								</do_if>
								<do_if value="$GameId">
									<run_actions ref="SavedGames_UpdateSaveScumData">
										<param name="GameId" value="$GameId" />
										<param name="Time" value="player.age" />
										<param name="Death" value="player.age" />
										<param name="Cue" value="SavedGames_SetSaveScumDeath" />
										<param name="DebugChance" value="$DebugChance" />
									</run_actions>
								</do_if>
							</actions>
						</library>
						<library name="SavedGames_RemoveSaveScumDeath" purpose="run_actions">
							<params>
								<param name="GameId" default="null" />
								<param name="DebugChance" default="0" />
							</params>
							<actions>
								<do_if value="not $GameId">
									<set_value name="$GameId" exact="SavedGames.$gameId" />
								</do_if>
								<do_if value="$GameId">
									<run_actions ref="SavedGames_UpdateSaveScumData">
										<param name="GameId" value="$GameId" />
										<param name="Time" value="player.age" />
										<param name="Death" value="0" />
										<param name="Cue" value="SavedGames_RemoveSaveScumDeath" />
										<param name="DebugChance" value="$DebugChance" />
									</run_actions>
								</do_if>
							</actions>
						</library>
					</cues>
				</cue>
				<cue name="OnOptionsMenu">
					<conditions>
						<event_ui_triggered screen="'OptionsMenu'" />
						<check_value value="event.param2 != 'menu_close'" />
					</conditions>
					<actions>
						<debug_text text="'player.hasemergencyeject: ' + player.hasemergencyeject" chance="kATD.$debugChance" />
						<debug_text text="'player.isemergencyejectactive: ' + player.isemergencyejectactive" chance="kATD.$debugChance" />
						<set_emergency_eject_active active="true" />
						<debug_text text="'player.hasemergencyeject (post): ' + player.hasemergencyeject" chance="kATD.$debugChance" />
						<debug_text text="'player.isemergencyejectactive (post): ' + player.isemergencyejectactive" chance="kATD.$debugChance" />
						<debug_text text="'$ship.isindestructible: ' + @$ship.isindestructible" chance="kATD.$debugChance" />
						<do_if value="@$ship.isoperational and $ship.isindestructible and $ship.isplayerowned">
							<debug_text text="'set_object_min_hull ' + $ship + ' (' + @$ship.knownname + ') to 0'" />
							<set_object_min_hull object="$ship" exact="0" />
						</do_if>
						<debug_text text="'$ship.isindestructible (post): ' + @$ship.isindestructible" chance="kATD.$debugChance" />
					</actions>
				</cue>
				<cue name="OnOptionsMenuClose">
					<conditions>
						<event_ui_triggered screen="'OptionsMenu'" control="'menu_close'" />
					</conditions>
					<actions>
						<debug_text text="'player.hasemergencyeject: ' + player.hasemergencyeject" chance="kATD.$debugChance" />
						<debug_text text="'player.isemergencyejectactive: ' + player.isemergencyejectactive" chance="kATD.$debugChance" />
						<set_emergency_eject_active active="false" />
						<debug_text text="'player.hasemergencyeject (post): ' + player.hasemergencyeject" chance="kATD.$debugChance" />
						<debug_text text="'player.isemergencyejectactive (post): ' + player.isemergencyejectactive" chance="kATD.$debugChance" />
						<debug_text text="'$ship.isindestructible: ' + @$ship.isindestructible" chance="kATD.$debugChance" />
						<do_if value="@$ship.isoperational and (not $ship.isindestructible) and $ship.isplayerowned">
							<debug_text text="'set_object_min_hull ' + $ship + ' (' + @$ship.knownname + ') to 1'" />
							<set_object_min_hull object="$ship" exact="1" />
						</do_if>
						<debug_text text="'$ship.isindestructible (post): ' + @$ship.isindestructible" chance="kATD.$debugChance" />
						<reset_cue cue="OnOptionsMenu" />
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="CutscenesForScreenshots">
					<cues>
						<cue name="Cutscene_Explosion">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<create_loadout result="$loadout">
									<macros>
										<engine macro="engine_arg_s_allround_01_mk1_macro" path="../con_engine_01" />
										<weapon macro="weapon_gen_s_laser_01_mk1_macro" path="../con_weapon_01" optional="1" />
										<shield macro="shield_arg_s_standard_01_mk1_macro" path="../con_shield_01" optional="1" />
									</macros>
									<ammunition>
										<ammunition macro="eq_arg_satellite_01_macro" exact="5" optional="true" />
										<ammunition macro="env_deco_nav_beacon_t1_macro" exact="5" optional="true" />
										<ammunition macro="eq_arg_resourceprobe_01_macro" exact="5" optional="true" />
									</ammunition>
									<software>
										<software ware="software_targetmk1" />
										<software ware="software_scannerlongrangemk1" />
									</software>
									<virtualmacros>
										<thruster macro="thruster_gen_s_allround_01_mk1_macro" />
									</virtualmacros>
								</create_loadout>
								<create_position name="$position" space="player.sector" object="player.ship" exact="10km" />
								<set_value name="$yaw" min="0" max="360" />
								<set_value name="$pitch" min="0" max="360" />
								<set_value name="$roll" min="0" max="360" />
								<create_rotation name="$rotation" yaw="($yaw)deg" pitch="($pitch)deg" roll="($roll)deg" />
								<create_ship name="$ship" macro="macro.ship_tel_s_scout_01_a_macro" position="$position" rotation="$rotation" sector="player.sector">
									<owner exact="faction.player" />
									<loadout loadout="$loadout" />
								</create_ship>
								<debug_text text="'play_cutscene'" chance="kATD.$debugChance" />
								<play_cutscene key="'Cutscene_orbit_and_zoom_1'" abortable="false">
									<param name="target_object" object="$ship" />
								</play_cutscene>
							</actions>
							<delay exact="3s" />
							<actions>
								<destroy_object object="$ship" explosion="true" />
							</actions>
							<delay exact="10s" />
							<actions>
								<stop_cutscene key="'Cutscene_orbit_and_zoom_1'" />
								<reset_cue cue="Cutscene_Explosion" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="K_ArriveAndLeaveStations" namespace="this">
					<actions>
						<set_value name="$attentionNearbyAndNearer" exact="[attention.nearby, attention.adjacentroom, attention.inroom]" />
						<set_value name="$attentionInZoneAndNearer" exact="[attention.inzone, attention.nearby, attention.adjacentroom, attention.inroom]" />
						<set_value name="md.Notifications.Init.$kuertee_station_new" exact="null" />
						<set_value name="md.Notifications.Init.$kuertee_station_old" exact="null" />
						<set_value name="md.Notifications.Init.$kuertee_station_current" exact="null" />
						<set_value name="md.Notifications.Init.$kuertee_Cue_departOldStation" exact="null" />
						<set_value name="md.Notifications.Init.$kuertee_debugChance" exact="0" />
					</actions>
					<cues>
						<cue name="K_ArriveStation" instantiate="true">
							<conditions>
								<check_any>
									<event_cue_signalled />
									<check_all>
										<!-- Event for the specified object changing attention level (object = attention changing object, param = new attention level, param2 = previous attention level) -->
										<event_object_changed_attention group="md.NPC_Instantiation.Instantiation.$TrackedObjects" />
										<check_value value="event.object.isclass.station" />
										<check_value value="@event.object.macro != @macro.landmarks_par_monument_01_macro" />
										<check_value value="@event.object.macro != @macro.torus_maze_macro" />
									</check_all>
									<check_all>
										<!-- Event for when the player successfully teleports. (param = new room, param2 = old room, param3 = is shortcut instead of real teleport) -->
										<event_player_teleport_successful />
									</check_all>
								</check_any>
							</conditions>
							<actions>
								<set_value name="$isOk" exact="false" />
								<set_value name="$isAlreadyActive" exact="false" />
								<set_value name="$isTeleport" exact="false" />
								<do_if value="event.name == 'event_cue_signalled'">
									<set_value name="$station_this" exact="event.param.$station" />
									<set_value name="$isAlreadyActive" exact="event.param.$isAlreadyActive" />
									<set_value name="$isOk" exact="true" />
								</do_if>
								<do_elseif value="event.name == 'event_object_changed_attention'">
									<do_if value="event.object.isclass.station">
										<set_value name="$station_this" exact="event.object" />
										<set_value name="$isOk" exact="
											$attentionNearbyAndNearer.indexof.{event.param}
											and
											(not $attentionNearbyAndNearer.indexof.{event.param2})
											and
											$station_this != md.Notifications.Init.$kuertee_station_current
										" />
									</do_if>
								</do_elseif>
								<do_elseif value="event.name == 'event_player_teleport_successful'">
									<set_value name="$isTeleport" exact="true" />
									<do_if value="player.station">
										<set_value name="$station_this" exact="player.station" />
										<set_value name="$isOk" exact="
											(
												(not @md.Notifications.Init.$kuertee_station_current)
												or
												(not @param.hascontext.{@md.Notifications.Init.$kuertee_station_current})
											)
											and
											$station_this != md.Notifications.Init.$kuertee_station_current
										" />
									</do_if>
								</do_elseif>
								<do_if value="$isOk">
									<do_if value="not $isAlreadyActive">
										<do_if value="md.Notifications.Init.$kuertee_Cue_departOldStation.exists">
											<do_if value="md.Notifications.Init.$kuertee_Cue_departOldStation.state == cuestate.waiting">
												<signal_cue_instantly cue="md.Notifications.Init.$kuertee_Cue_departOldStation" />
											</do_if>
										</do_if>
										<set_value name="md.Notifications.Init.$kuertee_station_new" exact="$station_this" />
										<set_value name="md.Notifications.Init.$kuertee_station_old" exact="md.Notifications.Init.$kuertee_station_current" />
										<set_value name="md.Notifications.Init.$kuertee_station_current" exact="md.Notifications.Init.$kuertee_station_new" />
									</do_if>
									<do_else>
										<set_value name="md.Notifications.Init.$kuertee_station_new" exact="$station_this" />
										<set_value name="md.Notifications.Init.$kuertee_station_old" exact="md.Notifications.Init.$kuertee_station_current" />
										<set_value name="md.Notifications.Init.$kuertee_station_current" exact="md.Notifications.Init.$kuertee_station_new" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_ArriveStation $isAlreadyActive at: ' + @md.Notifications.Init.$kuertee_station_current.knownname" />
										<debug_text text="'K_ArriveStation $isAlreadyActive at: ' + @md.Notifications.Init.$kuertee_station_current.knownname" />
									</do_else>
								</do_if>
								<do_else>
									<cancel_cue cue="this" />
								</do_else>
							</actions>
							<cues>
								<cue name="K_DepartStation">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<event_object_changed_attention object="md.Notifications.Init.$kuertee_station_current" />
										</check_any>
									</conditions>
									<actions>
										<set_value name="$isOk" exact="false" />
										<set_value name="$isOk" exact="
											event.name == 'event_cue_signalled'
											or
											(
												(not @$attentionNearbyAndNearer.indexof.{@event.param})
												and
												@$attentionNearbyAndNearer.indexof.{@event.param2}
											)
										" />
										<do_if value="$isOk">
											<set_value name="md.Notifications.Init.$kuertee_station_new" exact="null" />
											<set_value name="md.Notifications.Init.$kuertee_station_old" exact="md.Notifications.Init.$kuertee_station_current" />
											<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$leaveFrom = md.Notifications.Init.$kuertee_station_old]" />
											<set_value name="md.Notifications.Init.$kuertee_station_current" exact="md.Notifications.Init.$kuertee_station_new" />
											<raise_lua_event name="'Chat_Window_API.Print'" param="'K_DepartStation new ' + @md.Notifications.Init.$kuertee_station_new.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<raise_lua_event name="'Chat_Window_API.Print'" param="'K_DepartStation old ' + @md.Notifications.Init.$kuertee_station_old.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<raise_lua_event name="'Chat_Window_API.Print'" param="'K_DepartStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<debug_text text="'kuertee K_DepartStation new ' + @md.Notifications.Init.$kuertee_station_new.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<debug_text text="'kuertee K_DepartStation old ' + @md.Notifications.Init.$kuertee_station_old.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<debug_text text="'kuertee K_DepartStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<cancel_cue cue="parent" />
											<reset_cue cue="this" />
										</do_if>
										<do_else>
											<reset_cue cue="this" />
										</do_else>
									</actions>
								</cue>
								<cue name="K_ArriveStation2">
									<actions>
										<set_value name="md.Notifications.Init.$kuertee_Cue_departOldStation" exact="K_DepartStation" />
										<do_if value="$isTeleport">
											<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$teleportTo = md.Notifications.Init.$kuertee_station_new, $leaveFrom = md.Notifications.Init.$kuertee_station_old]" />
										</do_if>
										<do_else>
											<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$arriveAt = md.Notifications.Init.$kuertee_station_new, $leaveFrom = md.Notifications.Init.$kuertee_station_old]" />
										</do_else>
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_ArriveStation new ' + @md.Notifications.Init.$kuertee_station_new.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_ArriveStation old ' + @md.Notifications.Init.$kuertee_station_old.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_ArriveStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_ArriveStation new ' + @md.Notifications.Init.$kuertee_station_new.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_ArriveStation old ' + @md.Notifications.Init.$kuertee_station_old.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_ArriveStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<cancel_cue cue="this" />
									</actions>
								</cue>
								<cue name="K_DockedAtStation">
									<conditions>
										<!-- Event for the specified object docking (object = docking object, param = dock object, param2 = zone) -->
										<event_object_docked group="global.$PlayerContainerGroup" />
										<check_value value="event.param.isclass.station" />
										<check_value value="@event.param.macro != @macro.landmarks_par_monument_01_macro" />
										<check_value value="@event.param.macro != @macro.torus_maze_macro" />
									</conditions>
									<actions>
										<!-- <raise_lua_event name="'Chat_Window_API.Print'" param="'K_DockedAtStation player.station ' + @$player.station.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" /> -->
										<set_value name="md.Notifications.Init.$kuertee_station_current" exact="event.param" />
										<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$dockAt = md.Notifications.Init.$kuertee_station_current]" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_DockedAtStation station_current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_DockedAtStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="K_UndockedFromStation">
									<conditions>
										<!-- Event for the specified object undocking (object = undocking object, param = dock, param2 = zone) -->
										<event_object_undocked group="global.$PlayerContainerGroup" />
										<check_value value="event.param.isclass.station" />
										<check_value value="@event.param.macro != @macro.landmarks_par_monument_01_macro" />
										<check_value value="@event.param.macro != @macro.torus_maze_macro" />
									</conditions>
									<actions>
										<set_value name="md.Notifications.Init.$kuertee_station_current" exact="event.param" />
										<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$undockFrom = md.Notifications.Init.$kuertee_station_current]" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_UndockedFromStation station_current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_UndockedFromStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<reset_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
						<cue name="K_ArriveAndLeaveStations_Debug" namespace="this">
							<conditions>
								<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
								<check_value value="event.param3.$text == 'kuertee debug K_ArriveAndLeaveStations'" />
							</conditions>
							<actions>
								<debug_text text="@event.param3" />
								<raise_lua_event name="'Chat_Window_API.Print'" param="@event.param3.$text" />
								<do_if value="@md.Notifications.Init.$kuertee_debugChance">
									<set_value name="md.Notifications.Init.$kuertee_debugChance" exact="0" />
								</do_if>
								<do_else>
									<set_value name="md.Notifications.Init.$kuertee_debugChance" exact="100" />
								</do_else>
								<reset_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="K_ArriveAndLeaveStations_Init2" namespace="this">
					<conditions>
						<check_any>
							<event_cue_signalled />
							<event_game_loaded />
						</check_any>
						<check_value value="not @player.allmodules.{player.module}.isscenario" />
					</conditions>
					<actions>
						<!-- save station current -->
						<set_value name="$station_current" exact="@md.Notifications.Init.$kuertee_station_current" />
						<do_if value="not @$station_current.exists">
							<set_value name="$station_current" exact="@K_ArriveAndLeaveStations.$kuertee_station_current" />
							<do_if value="not @$station_current.exists">
								<set_value name="$station_current" exact="@K_ArriveAndLeaveStations.$station_current" />
							</do_if>
						</do_if>
						<debug_text text="'$station_current: ' + $station_current + ' (' + @$station_current.knownname + ')'" />
						<do_if value="@md.Notifications.Init.$kuertee_ArriveAndLeaveStations.exists">
							<!-- deregister at every load -->
							<remove_value name="md.Notifications.Init.$kuertee_ArriveAndLeaveStations" />
						</do_if>
						<set_value name="$initDelay" min="0.0s" max="1.0s" />
						<debug_text text="'$initDelay: ' + $initDelay" />
						<!-- reset cue at every load -->
						<reset_cue cue="K_ArriveAndLeaveStations" />
					</actions>
					<cues>
						<cue name="K_ArriveAndLeaveStations_Init3" checktime="player.age + $initDelay">
							<actions>
								<do_if value="not @md.Notifications.Init.$kuertee_ArriveAndLeaveStations.exists">
									<!-- no K_ArriveAndLeaveStations registered -->
									<!-- register this K_ArriveAndLeaveStations -->
									<set_value name="md.Notifications.Init.$kuertee_ArriveAndLeaveStations" exact="K_ArriveAndLeaveStations" />
									<debug_text text="'$kuertee_ArriveAndLeaveStations: ' + @md.Notifications.Init.$kuertee_ArriveAndLeaveStations" />
								</do_if>
								<do_else>
									<!-- cancel this K_ArriveAndLeaveStations, so only one exists -->
									<debug_text text="'cancel_cue ' + K_ArriveAndLeaveStations" />
									<cancel_cue cue="K_ArriveAndLeaveStations" />
									<reset_cue cue="parent" />
								</do_else>
							</actions>
							<cues>
								<cue name="K_ArriveAndLeaveStations_Init4">
									<actions>
										<do_if value="not @$station_current.exists">
											<find_station name="$station" sortbydistanceto="player.entity" />
											<do_if value="[attention.nearby, attention.adjacentroom, attention.inroom].indexof.{$station.attention}">
												<set_value name="$station_current" exact="$station" />
												<debug_text text="'$station_current (found nearby): ' + $station_current + ' (' + $station_current.knownname + ')'" />
											</do_if>
											<reset_cue cue="K_ArriveAndLeaveStations_Init2" />
										</do_if>
										<do_if value="@$station_current.exists">
											<!-- if there was a $station_current, prepare K_ArriveAndLeaveStations with it -->
											<!-- this is required so that K_DepartStation can continue with $station_current -->
											<!-- <debug_text text="'$kuertee_ArriveAndLeaveStations setting for $station_current: ' + $station_current + ' (' + $station_current.knownname + ')'" /> -->
											<!-- <signal_cue_instantly cue="K_ArriveStation" param="table[$station = $station_current, $isAlreadyActive = true]" /> -->
											<!-- <reset_cue cue="K_ArriveAndLeaveStations_Init2" /> -->
										</do_if>
									</actions>
									<cues>
										<cue name="K_ArriveAndLeaveStations_Init5">
											<actions>
												<debug_text text="'$kuertee_ArriveAndLeaveStations setting for $station_current: ' + $station_current + ' (' + $station_current.knownname + ')'" />
												<signal_cue_instantly cue="K_ArriveStation" param="table[$station = $station_current, $isAlreadyActive = true]" />
												<reset_cue cue="K_ArriveAndLeaveStations_Init2" />
											</actions>
										</cue>
									</cues>
								</cue>
							</cues>
						</cue>
					</cues>
				</cue>
				<cue name="K_ArriveAndLeaveStations_FirstRun2">
					<actions>
						<signal_cue cue="K_ArriveAndLeaveStations_Init2" />
					</actions>
				</cue>
				<cue name="OnModInstall">
					<actions>
						<debug_text text="'$debugChance: ' + $debugChance" />
						<signal_cue_instantly cue="Init" />
					</actions>
				</cue>
				<cue name="OnModInstallComplete" checktime="player.age + 1s">
					<actions>
						<set_value name="$debugChance" exact="0" />
						<debug_text text="'$debugChance: ' + $debugChance" />
					</actions>
				</cue>
			</cues>
		</cue>
		<!-- <cue name="UserQuestionMenuTest">
			<conditions>
				<event_ui_triggered screen="'UserQuestionMenu'" />
			</conditions>
			<actions>
				<debug_text text="'event.param: ' + event.param" />
				<debug_text text="'event.param2: ' + event.param2" />
				<debug_text text="'event.param3: ' + event.param3" />
			</actions>
		</cue> -->
		<cue name="OnLuaLoaderReady">
			<conditions>
				<event_ui_triggered screen="'Lua_Loader'" control="'Ready'" />
			</conditions>
			<actions>
				<raise_lua_event name="'Lua_Loader.Load'" param="'extensions.kuertee_ui_extensions.ui.kuertee_hud'" />
			</actions>
		</cue>
		<cue name="OnLuaLoaderReadyCompleted">
			<conditions>
				<event_cue_completed cue="OnLuaLoaderReady" />
			</conditions>
			<actions>
				<reset_cue cue="this" />
				<reset_cue cue="OnLuaLoaderReady" />
			</actions>
		</cue>
		<library name="ResetObjectMinHulls" purpose="run_actions">
			<actions>
				<do_if value="@md.Scenario_advanced.Scenario2_Crystal.namespace.state == cuestate.complete and @md.Scenario_advanced.Scenario2_Crystal.namespace.$CrystalShip.exists">
					<set_object_min_hull object="md.Scenario_advanced.Scenario2_Crystal.namespace.$CrystalShip" exact="75" comment="invulnerable" />
					<debug_text text="md.Scenario_advanced.Scenario2_Crystal.namespace.$CrystalShip.knownname + ' isindestructible: ' + md.Scenario_advanced.Scenario2_Crystal.namespace.$CrystalShip.isindestructible + ' isinvulnerable: ' + md.Scenario_advanced.Scenario2_Crystal.namespace.$CrystalShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Scenario_advanced.Scenario2_DataVault.namespace.state == cuestate.complete and @md.Scenario_advanced.Scenario2_DataVault.namespace.$VaultShip.exists">
					<set_object_min_hull object="md.Scenario_advanced.Scenario2_DataVault.$VaultShip" exact="75" comment="invulnerable" />
					<debug_text text="md.Scenario_advanced.Scenario2_DataVault.$VaultShip.knownname + ' isindestructible: ' + md.Scenario_advanced.Scenario2_DataVault.$VaultShip.isindestructible + ' isinvulnerable: ' + md.Scenario_advanced.Scenario2_DataVault.$VaultShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Scenario_combat.Scenario1_CreateAlliedDestroyer.namespace.state == cuestate.complete and @md.Scenario_combat.Scenario1_CreateAlliedDestroyer.namespace.$AlliedDestroyer.exists">
					<set_object_min_hull object="md.Scenario_combat.Scenario1_CreateAlliedDestroyer.namespace.$AlliedDestroyer" exact="75" comment="indestructible, for tutorial" />
					<debug_text text="md.Scenario_combat.Scenario1_CreateAlliedDestroyer.namespace.$AlliedDestroyer.knownname + ' isindestructible: ' + md.Scenario_combat.Scenario1_CreateAlliedDestroyer.namespace.$AlliedDestroyer.isindestructible + ' isinvulnerable: ' + md.Scenario_combat.Scenario1_CreateAlliedDestroyer.namespace.$AlliedDestroyer.isinvulnerable" />
				</do_if>
				<do_if value="@md.Scenario_combat.Scenario1_CreateEnemyMiner.namespace.state == cuestate.complete and @md.Scenario_combat.Scenario1_CreateEnemyMiner.namespace.$AlliedDestroyer.exists">
					<set_object_min_hull object="md.Scenario_combat.Scenario1_CreateEnemyMiner.namespace.$EnemyMiner" exact="100" comment="initially invulnerable" />
					<debug_text text="md.Scenario_combat.Scenario1_CreateEnemyMiner.namespace.$EnemyMiner.knownname + ' isindestructible: ' + md.Scenario_combat.Scenario1_CreateEnemyMiner.namespace.$EnemyMiner.isindestructible + ' isinvulnerable: ' + md.Scenario_combat.Scenario1_CreateEnemyMiner.namespace.$EnemyMiner.isinvulnerable" />
				</do_if>
				<do_if value="@md.Scenario_combat.Scenario1_RequestRetrieval.namespace.state == cuestate.complete and @md.Scenario_combat.Scenario1_RequestRetrieval.namespace.$PlayerFighter1.exists">
					<set_object_min_hull object="md.Scenario_combat.Scenario1_RequestRetrieval.namespace.$PlayerFighter1" exact="1" />
					<debug_text text="md.Scenario_combat.Scenario1_RequestRetrieval.namespace.$PlayerFighter1.knownname + ' isindestructible: ' + md.Scenario_combat.Scenario1_RequestRetrieval.namespace.$PlayerFighter1.isindestructible + ' isinvulnerable: ' + md.Scenario_combat.Scenario1_RequestRetrieval.namespace.$PlayerFighter1.isinvulnerable" />
				</do_if>
				<do_if value="@md.Scenario_combat.Scenario1_RequestRetrieval.namespace.state == cuestate.complete and @md.Scenario_combat.Scenario1_RequestRetrieval.namespace.$PlayerFighter1.exists">
					<set_object_min_hull object="md.Scenario_combat.Scenario1_RequestRetrieval.namespace.$PlayerFighter2" exact="1" />
					<debug_text text="md.Scenario_combat.Scenario1_RequestRetrieval.namespace.$PlayerFighter2.knownname + ' isindestructible: ' + md.Scenario_combat.Scenario1_RequestRetrieval.namespace.$PlayerFighter2.isindestructible + ' isinvulnerable: ' + md.Scenario_combat.Scenario1_RequestRetrieval.namespace.$PlayerFighter2.isinvulnerable" />
				</do_if>
				<do_if value="@md.Scenario_combat.Scenario1_CreateEnemyDestroyer.namespace.state == cuestate.complete and @md.Scenario_combat.Scenario1_CreateEnemyDestroyer.namespace.$EnemyDestroyerGroup.count">
					<do_all exact="md.Scenario_combat.Scenario1_CreateEnemyDestroyer.namespace.$EnemyDestroyerGroup.count" counter="$i">
						<set_object_min_hull object="md.Scenario_combat.Scenario1_CreateEnemyDestroyer.namespace.$EnemyDestroyerGroup.{$i}" exact="100" comment="initially invulnerable" />
						<debug_text text="md.Scenario_combat.Scenario1_CreateEnemyDestroyer.namespace.$EnemyDestroyerGroup.{$i}.knownname + ' isindestructible: ' + md.Scenario_combat.Scenario1_CreateEnemyDestroyer.namespace.$EnemyDestroyerGroup.{$i}.isindestructible + ' isinvulnerable: ' + md.Scenario_combat.Scenario1_CreateEnemyDestroyer.namespace.$EnemyDestroyerGroup.{$i}.isinvulnerable" />
						<do_all exact="md.Scenario_combat.Scenario1_CreateEnemyDestroyer.namespace.$EnemyTurretsGroup.count" counter="$j">
							<set_object_min_hull object="md.Scenario_combat.Scenario1_CreateEnemyDestroyer.namespace.$EnemyTurretsGroup.{$j}" exact="80" comment="initially invulnerable" />
							<debug_text text="md.Scenario_combat.Scenario1_CreateEnemyDestroyer.namespace.$EnemyTurretsGroup.{$j}.knownname + ' isindestructible: ' + md.Scenario_combat.Scenario1_CreateEnemyDestroyer.namespace.$EnemyTurretsGroup.{$j}.isindestructible + ' isinvulnerable: ' + md.Scenario_combat.Scenario1_CreateEnemyDestroyer.namespace.$EnemyTurretsGroup.{$j}.isinvulnerable" />
						</do_all>
					</do_all>
				</do_if>
				<do_if value="@md.Scenario_combat.Scenario1_CreateAndActivateBombers.namespace.state == cuestate.complete and @md.Scenario_combat.Scenario1_CreateAndActivateBombers.namespace.$EnemyDestroyerGroup.count">
					<do_all exact="md.Scenario_combat.Scenario1_CreateAndActivateBombers.namespace.$EnemyDestroyerGroup.count" counter="$i">
						<set_object_min_hull object="md.Scenario_combat.Scenario1_CreateAndActivateBombers.namespace.$EnemyDestroyerGroup.{$i}" exact="100" comment="initially invulnerable" />
						<debug_text text="md.Scenario_combat.Scenario1_CreateAndActivateBombers.namespace.$EnemyDestroyerGroup.{$i}.knownname + ' isindestructible: ' + md.Scenario_combat.Scenario1_CreateAndActivateBombers.namespace.$EnemyDestroyerGroup.{$i}.isindestructible + ' isinvulnerable: ' + md.Scenario_combat.Scenario1_CreateAndActivateBombers.namespace.$EnemyDestroyerGroup.{$i}.isinvulnerable" />
					</do_all>
				</do_if>
				<do_if value="@md.Scenario_combat.Scenario1_DestroyEnemyEngines.namespace.state == cuestate.complete and @md.Scenario_combat.Scenario1_DestroyEnemyEngines.namespace.$EnemyDestroyerGroup.count">
					<do_all exact="md.Scenario_combat.Scenario1_DestroyEnemyEngines.namespace.$EnemyDestroyerGroup.count" counter="$i">
						<set_object_min_hull object="md.Scenario_combat.Scenario1_DestroyEnemyEngines.namespace.$EnemyDestroyerGroup.{$i}" exact="30" comment="hull can be damaged a lot" />
						<debug_text text="md.Scenario_combat.Scenario1_DestroyEnemyEngines.namespace.$EnemyDestroyerGroup.{$i}.knownname + ' isindestructible: ' + md.Scenario_combat.Scenario1_DestroyEnemyEngines.namespace.$EnemyDestroyerGroup.{$i}.isindestructible + ' isinvulnerable: ' + md.Scenario_combat.Scenario1_DestroyEnemyEngines.namespace.$EnemyDestroyerGroup.{$i}.isinvulnerable" />
					</do_all>
				</do_if>
				<do_if value="@md.Scenario_FlightSchool.X4ep1_Gamestart_FlightSchool.namespace.state == cuestate.complete and @md.Scenario_FlightSchool.X4ep1_Gamestart_FlightSchool.namespace.$SpaceSuitTutorialWreck.exists">
					<set_object_min_hull object="md.Scenario_FlightSchool.X4ep1_Gamestart_FlightSchool.namespace.$SpaceSuitTutorialWreck" exact="100" />
					<debug_text text="md.Scenario_FlightSchool.X4ep1_Gamestart_FlightSchool.namespace.$SpaceSuitTutorialWreck.knownname + ' isindestructible: ' + md.Scenario_FlightSchool.X4ep1_Gamestart_FlightSchool.namespace.$SpaceSuitTutorialWreck.isindestructible + ' isinvulnerable: ' + md.Scenario_FlightSchool.X4ep1_Gamestart_FlightSchool.namespace.$SpaceSuitTutorialWreck.isinvulnerable" />
				</do_if>
				<do_if value="@md.Scenario_FlightSchool.FlightSchool_CreatePlayerShip.namespace.state == cuestate.complete and @md.Scenario_FlightSchool.FlightSchool_CreatePlayerShip.namespace.$PlayerShip.exists">
					<set_object_min_hull object="md.Scenario_FlightSchool.FlightSchool_CreatePlayerShip.namespace.$PlayerShip" exact="1" />
					<debug_text text="md.Scenario_FlightSchool.FlightSchool_CreatePlayerShip.namespace.$PlayerShip.knownname + ' isindestructible: ' + md.Scenario_FlightSchool.FlightSchool_CreatePlayerShip.namespace.$PlayerShip.isindestructible + ' isinvulnerable: ' + md.Scenario_FlightSchool.FlightSchool_CreatePlayerShip.namespace.$PlayerShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Setup.Debug_Setup_SkipperShip_Create.namespace.state == cuestate.complete and @md.Setup.Debug_Setup_SkipperShip_Create.namespace.$SkipperShip.exists">
					<set_object_min_hull object="md.Setup.Debug_Setup_SkipperShip_Create.namespace.$SkipperShip" exact="100" />
					<debug_text text="md.Setup.Debug_Setup_SkipperShip_Create.namespace.$SkipperShip.knownname + ' isindestructible: ' + md.Setup.Debug_Setup_SkipperShip_Create.namespace.$SkipperShip.isindestructible + ' isinvulnerable: ' + md.Setup.Debug_Setup_SkipperShip_Create.namespace.$SkipperShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Setup_Create_Buccaneer_Flagship.namespace.state == cuestate.complete and @md.Story_Paranid.Setup_Create_Buccaneer_Flagship.namespace.$BuccaneerFlagship.exists">
					<set_object_min_hull object="md.Story_Paranid.Setup_Create_Buccaneer_Flagship.namespace.$BuccaneerFlagship" exact="100" />
					<debug_text text="md.Story_Paranid.Setup_Create_Buccaneer_Flagship.namespace.$BuccaneerFlagship.knownname + ' isindestructible: ' + md.Story_Paranid.Setup_Create_Buccaneer_Flagship.namespace.$BuccaneerFlagship.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Setup_Create_Buccaneer_Flagship.namespace.$BuccaneerFlagship.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Setup_Create_Buccaneer_Flagship.namespace.state == cuestate.complete and @md.Story_Paranid.Setup_Create_Buccaneer_Flagship.namespace.$BuccaneerFlagship.exists">
					<set_object_min_hull object="md.Story_Paranid.Setup_Create_Buccaneer_Flagship.namespace.$BuccaneerFlagship" exact="100" />
					<debug_text text="md.Story_Paranid.Setup_Create_Buccaneer_Flagship.namespace.$BuccaneerFlagship.knownname + ' isindestructible: ' + md.Story_Paranid.Setup_Create_Buccaneer_Flagship.namespace.$BuccaneerFlagship.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Setup_Create_Buccaneer_Flagship.namespace.$BuccaneerFlagship.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Ch2_Informant.namespace.state == cuestate.complete and @md.Story_Paranid.Ch2_Informant.namespace.$BuccaneerDecoyShip.exists">
					<set_object_min_hull object="md.Story_Paranid.Ch2_Informant.namespace.$BuccaneerDecoyShip" exact="20" />
					<debug_text text="md.Story_Paranid.Ch2_Informant.namespace.$BuccaneerDecoyShip.knownname + ' isindestructible: ' + md.Story_Paranid.Ch2_Informant.namespace.$BuccaneerDecoyShip.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Ch2_Informant.namespace.$BuccaneerDecoyShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Lockbox_Make_Player_Invincible.namespace.state == cuestate.complete and @md.Story_Paranid.Lockbox_Make_Player_Invincible.namespace.$InvinciblePlayerShip.exists">
					<set_object_min_hull object="md.Story_Paranid.Lockbox_Make_Player_Invincible.namespace.$InvinciblePlayerShip" exact="20" comment="We don't want the player to have to reload. Almost destroying his ship is enough." />
					<debug_text text="md.Story_Paranid.Lockbox_Make_Player_Invincible.namespace.$InvinciblePlayerShip.knownname + ' isindestructible: ' + md.Story_Paranid.Lockbox_Make_Player_Invincible.namespace.$InvinciblePlayerShip.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Lockbox_Make_Player_Invincible.namespace.$InvinciblePlayerShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Warzone_Collect_Player_Docked_At_Cipher_Ship_Dal_Speak.namespace.state == cuestate.complete and @md.Story_Paranid.Warzone_Collect_Player_Docked_At_Cipher_Ship_Dal_Speak.namespace.$CipherShip.exists">
					<set_object_min_hull object="md.Story_Paranid.Warzone_Collect_Player_Docked_At_Cipher_Ship_Dal_Speak.namespace.$CipherShip" exact="50" comment="Period of invulnerability, so the player doesn't get blown up with the stranded ship." />
					<debug_text text="md.Story_Paranid.Warzone_Collect_Player_Docked_At_Cipher_Ship_Dal_Speak.namespace.$CipherShip.knownname + ' isindestructible: ' + md.Story_Paranid.Warzone_Collect_Player_Docked_At_Cipher_Ship_Dal_Speak.namespace.$CipherShip.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Warzone_Collect_Player_Docked_At_Cipher_Ship_Dal_Speak.namespace.$CipherShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Cipher_Ship_Invulnerability_Handler.namespace.state == cuestate.complete and @md.Story_Paranid.Cipher_Ship_Invulnerability_Handler.namespace.$CurrentPlayerShip.exists">
					<set_object_min_hull object="md.Story_Paranid.Cipher_Ship_Invulnerability_Handler.namespace.$CurrentPlayerShip" exact="20" />
					<debug_text text="md.Story_Paranid.Cipher_Ship_Invulnerability_Handler.namespace.$CurrentPlayerShip.knownname + ' isindestructible: ' + md.Story_Paranid.Cipher_Ship_Invulnerability_Handler.namespace.$CurrentPlayerShip.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Cipher_Ship_Invulnerability_Handler.namespace.$CurrentPlayerShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Ch4_DukeShip_Setup.namespace.state == cuestate.complete and @md.Story_Paranid.Ch4_DukeShip_Setup.namespace.$KroShip.exists">
					<set_object_min_hull object="md.Story_Paranid.Ch4_DukeShip_Setup.namespace.$KroShip" exact="80" />
					<debug_text text="md.Story_Paranid.Ch4_DukeShip_Setup.namespace.$KroShip.knownname + ' isindestructible: ' + md.Story_Paranid.Ch4_DukeShip_Setup.namespace.$KroShip.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Ch4_DukeShip_Setup.namespace.$KroShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Ch5_Force.namespace.state == cuestate.complete and @md.Story_Paranid.Ch5_Force.namespace.$KroShip.exists">
					<set_object_min_hull object="md.Story_Paranid.Ch5_Force.namespace.$KroShip" exact="80" />
					<debug_text text="md.Story_Paranid.Ch5_Force.namespace.$KroShip.knownname + ' isindestructible: ' + md.Story_Paranid.Ch5_Force.namespace.$KroShip.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Ch5_Force.namespace.$KroShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Ch5_Distraction.namespace.state == cuestate.complete and @md.Story_Paranid.Ch5_Distraction.namespace.$DistractionShip.exists">
					<set_object_min_hull object="md.Story_Paranid.Ch5_Distraction.namespace.$DistractionShip" exact="100" comment="invulnerable until away from station" />
					<debug_text text="md.Story_Paranid.Ch5_Distraction.namespace.$DistractionShip.knownname + ' isindestructible: ' + md.Story_Paranid.Ch5_Distraction.namespace.$DistractionShip.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Ch5_Distraction.namespace.$DistractionShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Ch5_Attack_RikJoins.namespace.state == cuestate.complete and @md.Story_Paranid.Ch5_Attack_RikJoins.namespace.$HopCorvettesLeader.exists">
					<set_object_min_hull object="md.Story_Paranid.Ch5_Attack_RikJoins.namespace.$HopCorvettesLeader" exact="20" />
					<debug_text text="md.Story_Paranid.Ch5_Attack_RikJoins.namespace.$HopCorvettesLeader.knownname + ' isindestructible: ' + md.Story_Paranid.Ch5_Attack_RikJoins.namespace.$HopCorvettesLeader.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Ch5_Attack_RikJoins.namespace.$HopCorvettesLeader.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Ch6_Force.namespace.state == cuestate.complete and @md.Story_Paranid.Ch6_Force.namespace.$KroShip.exists">
					<set_object_min_hull object="md.Story_Paranid.Ch6_Force.namespace.$KroShip" exact="80" />
					<debug_text text="md.Story_Paranid.Ch6_Force.namespace.$KroShip.knownname + ' isindestructible: ' + md.Story_Paranid.Ch6_Force.namespace.$KroShip.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Ch6_Force.namespace.$KroShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Ch6_Gride_AtMonument.namespace.state == cuestate.complete and @md.Story_Paranid.Ch6_Gride_AtMonument.namespace.$GrideShip.exists">
					<set_object_min_hull object="md.Story_Paranid.Ch6_Gride_AtMonument.namespace.$GrideShip" exact="100" comment="invulnerable" />
					<debug_text text="md.Story_Paranid.Ch6_Gride_AtMonument.namespace.$GrideShip.knownname + ' isindestructible: ' + md.Story_Paranid.Ch6_Gride_AtMonument.namespace.$GrideShip.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Ch6_Gride_AtMonument.namespace.$GrideShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Ch7_Monument_Battle_Setup.namespace.state == cuestate.complete and @md.Story_Paranid.Ch7_Monument_Battle_Setup.namespace.$IncinvibleHolyOrderShip.exists">
					<set_object_min_hull object="md.Story_Paranid.Ch7_Monument_Battle_Setup.namespace.$IncinvibleHolyOrderShip" exact="80" />
					<debug_text text="md.Story_Paranid.Ch7_Monument_Battle_Setup.namespace.$IncinvibleHolyOrderShip.knownname + ' isindestructible: ' + md.Story_Paranid.Ch7_Monument_Battle_Setup.namespace.$IncinvibleHolyOrderShip.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Ch7_Monument_Battle_Setup.namespace.$IncinvibleHolyOrderShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Ch7_Monument_Battle_Setup.namespace.state == cuestate.complete and @md.Story_Paranid.Ch7_Monument_Battle_Setup.namespace.$KroShip.exists">
					<set_object_min_hull object="md.Story_Paranid.Ch7_Monument_Battle_Setup.namespace.$KroShip" exact="80" />
					<debug_text text="md.Story_Paranid.Ch7_Monument_Battle_Setup.namespace.$KroShip.knownname + ' isindestructible: ' + md.Story_Paranid.Ch7_Monument_Battle_Setup.namespace.$KroShip.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Ch7_Monument_Battle_Setup.namespace.$KroShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Ch7_Monument_Battle_Setup.namespace.state == cuestate.complete and @md.Story_Paranid.Ch7_Monument_Battle_Setup.namespace.$GodrealmFlagship.exists">
					<set_object_min_hull object="md.Story_Paranid.Ch7_Monument_Battle_Setup.namespace.$GodrealmFlagship" exact="50" />
					<debug_text text="md.Story_Paranid.Ch7_Monument_Battle_Setup.namespace.$GodrealmFlagship.knownname + ' isindestructible: ' + md.Story_Paranid.Ch7_Monument_Battle_Setup.namespace.$GodrealmFlagship.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Ch7_Monument_Battle_Setup.namespace.$GodrealmFlagship.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Ch7_Debug_Setup.namespace.state == cuestate.complete and @md.Story_Paranid.Ch7_Debug_Setup.namespace.$GrideShip.exists">
					<debug_text text="'isindestructible: ' + md.Story_Paranid.Ch7_Debug_Setup.namespace.$GrideShip.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Ch7_Debug_Setup.namespace.$GrideShip.isinvulnerable" />
					<set_object_min_hull object="md.Story_Paranid.Ch7_Debug_Setup.namespace.$GrideShip" exact="100" comment="invulnerable" />
					<debug_text text="'isindestructible: ' + md.Story_Paranid.Ch7_Debug_Setup.namespace.$GrideShip.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Ch7_Debug_Setup.namespace.$GrideShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Ch7_1_Gride_Shoot_Torpedoes.namespace.state == cuestate.complete and @md.Story_Paranid.Ch7_1_Gride_Shoot_Torpedoes.namespace.$InvinciblePlayerShip.exists">
					<set_object_min_hull object="md.Story_Paranid.Ch7_1_Gride_Shoot_Torpedoes.namespace.$InvinciblePlayerShip" exact="10" />
					<debug_text text="md.Story_Paranid.Ch7_1_Gride_Shoot_Torpedoes.namespace.$InvinciblePlayerShip.knownname + ' isindestructible: ' + md.Story_Paranid.Ch7_1_Gride_Shoot_Torpedoes.namespace.$InvinciblePlayerShip.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Ch7_1_Gride_Shoot_Torpedoes.namespace.$InvinciblePlayerShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Ch7_1_Battle_Finale.namespace.state == cuestate.complete and @md.Story_Paranid.Ch7_1_Battle_Finale.namespace.$KroShip.exists">
					<set_object_min_hull object="md.Story_Paranid.Ch7_1_Battle_Finale.namespace.$KroShip" exact="70" />
					<debug_text text="md.Story_Paranid.Ch7_1_Battle_Finale.namespace.$KroShip.knownname + ' isindestructible: ' + md.Story_Paranid.Ch7_1_Battle_Finale.namespace.$KroShip.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Ch7_1_Battle_Finale.namespace.$KroShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Ch7_1_Battle_Finale.namespace.state == cuestate.complete and @md.Story_Paranid.Ch7_1_Battle_Finale.namespace.$GodrealmFlagship.exists">
					<set_object_min_hull object="md.Story_Paranid.Ch7_1_Battle_Finale.namespace.$GodrealmFlagship" exact="20" />
					<debug_text text="md.Story_Paranid.Ch7_1_Battle_Finale.namespace.$GodrealmFlagship.knownname + ' isindestructible: ' + md.Story_Paranid.Ch7_1_Battle_Finale.namespace.$GodrealmFlagship.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Ch7_1_Battle_Finale.namespace.$GodrealmFlagship.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Ch7_2_Battle_Finale.namespace.state == cuestate.complete and @md.Story_Paranid.Ch7_2_Battle_Finale.namespace.$KroShip.exists">
					<set_object_min_hull object="md.Story_Paranid.Ch7_2_Battle_Finale.namespace.$KroShip" exact="70" />
					<debug_text text="md.Story_Paranid.Ch7_2_Battle_Finale.namespace.$KroShip.knownname + ' isindestructible: ' + md.Story_Paranid.Ch7_2_Battle_Finale.namespace.$KroShip.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Ch7_2_Battle_Finale.namespace.$KroShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Ch7_2_Battle_Finale.namespace.state == cuestate.complete and @md.Story_Paranid.Ch7_2_Battle_Finale.namespace.$GrideShip.exists">
					<set_object_min_hull object="md.Story_Paranid.Ch7_2_Battle_Finale.namespace.$GrideShip" exact="70" />
					<debug_text text="md.Story_Paranid.Ch7_2_Battle_Finale.namespace.$GrideShip.knownname + ' isindestructible: ' + md.Story_Paranid.Ch7_2_Battle_Finale.namespace.$GrideShip.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Ch7_2_Battle_Finale.namespace.$GrideShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Ch7_2_Battle_Finale.namespace.state == cuestate.complete and @md.Story_Paranid.Ch7_2_Battle_Finale.namespace.$BuccaneerFlagship.exists">
					<set_object_min_hull object="md.Story_Paranid.Ch7_2_Battle_Finale.namespace.$BuccaneerFlagship" exact="20" />
					<debug_text text="md.Story_Paranid.Ch7_2_Battle_Finale.namespace.$BuccaneerFlagship.knownname + ' isindestructible: ' + md.Story_Paranid.Ch7_2_Battle_Finale.namespace.$BuccaneerFlagship.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Ch7_2_Battle_Finale.namespace.$BuccaneerFlagship.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Uni_2_Palace_Foundation_Build_Station_Complete.namespace.state == cuestate.complete and @md.Story_Paranid.Uni_2_Palace_Foundation_Build_Station_Complete.namespace.$TrinityPalaceAdministration.exists">
					<set_object_min_hull object="md.Story_Paranid.Uni_2_Palace_Foundation_Build_Station_Complete.namespace.$TrinityPalaceAdministration" exact="100" comment="Trinity is here to stay." />
					<debug_text text="md.Story_Paranid.Uni_2_Palace_Foundation_Build_Station_Complete.namespace.$TrinityPalaceAdministration.knownname + ' isindestructible: ' + md.Story_Paranid.Uni_2_Palace_Foundation_Build_Station_Complete.namespace.$TrinityPalaceAdministration.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Uni_2_Palace_Foundation_Build_Station_Complete.namespace.$TrinityPalaceAdministration.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Paranid.Esc_3_Final_Assault.namespace.state == cuestate.complete and @md.Story_Paranid.Esc_3_Final_Assault.namespace.$BucFlagship.exists">
					<set_object_min_hull object="md.Story_Paranid.Esc_3_Final_Assault.namespace.$BucFlagship" exact="100" />
					<debug_text text="md.Story_Paranid.Esc_3_Final_Assault.namespace.$BucFlagship.knownname + ' isindestructible: ' + md.Story_Paranid.Esc_3_Final_Assault.namespace.$BucFlagship.isindestructible + ' isinvulnerable: ' + md.Story_Paranid.Esc_3_Final_Assault.namespace.$BucFlagship.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Research_Welfare_1.Race_Cutscene_1.namespace.state == cuestate.complete and @md.Story_Research_Welfare_1.Race_Cutscene_1.namespace.$CutsceneShip_1.exists">
					<set_object_min_hull object="md.Story_Research_Welfare_1.Race_Cutscene_1.namespace.$CutsceneShip_1" exact="5" />
					<debug_text text="md.Story_Research_Welfare_1.Race_Cutscene_1.namespace.$CutsceneShip_1.knownname + ' isindestructible: ' + md.Story_Research_Welfare_1.Race_Cutscene_1.namespace.$CutsceneShip_1.isindestructible + ' isinvulnerable: ' + md.Story_Research_Welfare_1.Race_Cutscene_1.namespace.$CutsceneShip_1.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Research_Welfare_1.The_Anomalies_Fly_To.namespace.state == cuestate.complete and @md.Story_Research_Welfare_1.The_Anomalies_Fly_To.namespace.$Anomaly_1_Ship.exists">
					<set_object_min_hull object="md.Story_Research_Welfare_1.The_Anomalies_Fly_To.namespace.$Anomaly_1_Ship" exact="5" />
					<debug_text text="md.Story_Research_Welfare_1.The_Anomalies_Fly_To.namespace.$Anomaly_1_Ship.knownname + ' isindestructible: ' + md.Story_Research_Welfare_1.The_Anomalies_Fly_To.namespace.$Anomaly_1_Ship.isindestructible + ' isinvulnerable: ' + md.Story_Research_Welfare_1.The_Anomalies_Fly_To.namespace.$Anomaly_1_Ship.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Research_Welfare_1.The_Anomalies_Near_Anomaly.namespace.state == cuestate.complete and @md.Story_Research_Welfare_1.The_Anomalies_Near_Anomaly.namespace.$Drek_Ship.exists">
					<set_object_min_hull object="md.Story_Research_Welfare_1.The_Anomalies_Near_Anomaly.namespace.$Drek_Ship" exact="5" />
					<debug_text text="md.Story_Research_Welfare_1.The_Anomalies_Near_Anomaly.namespace.$Drek_Ship.knownname + ' isindestructible: ' + md.Story_Research_Welfare_1.The_Anomalies_Near_Anomaly.namespace.$Drek_Ship.isindestructible + ' isinvulnerable: ' + md.Story_Research_Welfare_1.The_Anomalies_Near_Anomaly.namespace.$Drek_Ship.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Research_Welfare_1.The_Anomalies_Destabalised_Drek_Speak.namespace.state == cuestate.complete and @md.Story_Research_Welfare_1.The_Anomalies_Destabalised_Drek_Speak.namespace.$CutsceneShip_1.exists">
					<set_object_min_hull object="md.Story_Research_Welfare_1.The_Anomalies_Destabalised_Drek_Speak.namespace.$CutsceneShip_1" exact="5" />
					<debug_text text="md.Story_Research_Welfare_1.The_Anomalies_Destabalised_Drek_Speak.namespace.$CutsceneShip_1.knownname + ' isindestructible: ' + md.Story_Research_Welfare_1.The_Anomalies_Destabalised_Drek_Speak.namespace.$CutsceneShip_1.isindestructible + ' isinvulnerable: ' + md.Story_Research_Welfare_1.The_Anomalies_Destabalised_Drek_Speak.namespace.$CutsceneShip_1.isinvulnerable" />
				</do_if>
				<do_if value="@md.GS_Pirate2.Ch1_SetupEscape.namespace.state == cuestate.complete and @md.GS_Pirate2.Ch1_SetupEscape.namespace.$EscapeShip2.exists">
					<set_object_min_hull object="md.GS_Pirate2.Ch1_SetupEscape.namespace.$EscapeShip2" exact="100" comment="Indestructible initially" />
					<debug_text text="md.GS_Pirate2.Ch1_SetupEscape.namespace.$EscapeShip2.knownname + ' isindestructible: ' + md.GS_Pirate2.Ch1_SetupEscape.namespace.$EscapeShip2.isindestructible + ' isinvulnerable: ' + md.GS_Pirate2.Ch1_SetupEscape.namespace.$EscapeShip2.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Criminal.Ch3_2_CreateTarget.namespace.state == cuestate.complete and @md.Story_Criminal.Ch3_2_CreateTarget.namespace.$Ch3_BoardShip.exists">
					<set_object_min_hull object="md.Story_Criminal.Ch3_2_CreateTarget.namespace.$Ch3_BoardShip" exact="10" />
					<debug_text text="md.Story_Criminal.Ch3_2_CreateTarget.namespace.$Ch3_BoardShip.knownname + ' isindestructible: ' + md.Story_Criminal.Ch3_2_CreateTarget.namespace.$Ch3_BoardShip.isindestructible + ' isinvulnerable: ' + md.Story_Criminal.Ch3_2_CreateTarget.namespace.$Ch3_BoardShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Criminal.Ch6_Mellerd_Ace_LowHull.namespace.state == cuestate.complete and @md.Story_Criminal.Ch6_Mellerd_Ace_LowHull.namespace.$AceShip.exists">
					<set_object_min_hull object="md.Story_Criminal.Ch6_Mellerd_Ace_LowHull.namespace.$AceShip" exact="20" />
					<debug_text text="md.Story_Criminal.Ch6_Mellerd_Ace_LowHull.namespace.$AceShip.knownname + ' isindestructible: ' + md.Story_Criminal.Ch6_Mellerd_Ace_LowHull.namespace.$AceShip.isindestructible + ' isinvulnerable: ' + md.Story_Criminal.Ch6_Mellerd_Ace_LowHull.namespace.$AceShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Pirate_Prelude.Prelude_Scavenger_Setup.namespace.state == cuestate.complete and @md.Story_Pirate_Prelude.Prelude_Scavenger_Setup.namespace.$SalvageShip.exists">
					<set_object_min_hull object="md.Story_Pirate_Prelude.Prelude_Scavenger_Setup.namespace.$SalvageShip" exact="30" />
					<debug_text text="md.Story_Pirate_Prelude.Prelude_Scavenger_Setup.namespace.$SalvageShip.knownname + ' isindestructible: ' + md.Story_Pirate_Prelude.Prelude_Scavenger_Setup.namespace.$SalvageShip.isindestructible + ' isinvulnerable: ' + md.Story_Pirate_Prelude.Prelude_Scavenger_Setup.namespace.$SalvageShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Pirate_Prelude.Prelude_Vegas.namespace.state == cuestate.complete and @md.Story_Pirate_Prelude.Prelude_Vegas.namespace.$TouristShip.exists">
					<set_object_min_hull object="md.Story_Pirate_Prelude.Prelude_Vegas.namespace.$TouristShip" exact="30" />
					<debug_text text="md.Story_Pirate_Prelude.Prelude_Vegas.namespace.$TouristShip.knownname + ' isindestructible: ' + md.Story_Pirate_Prelude.Prelude_Vegas.namespace.$TouristShip.isindestructible + ' isinvulnerable: ' + md.Story_Pirate_Prelude.Prelude_Vegas.namespace.$TouristShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Thefan.Debug_SpawnTheFanShip.namespace.state == cuestate.complete and @md.Story_Thefan.Debug_SpawnTheFanShip.namespace.$TheFanShipCh3.exists">
					<set_object_min_hull object="md.Story_Thefan.Debug_SpawnTheFanShip.namespace.$TheFanShipCh3" exact="30" />
					<debug_text text="md.Story_Thefan.Debug_SpawnTheFanShip.namespace.$TheFanShipCh3.knownname + ' isindestructible: ' + md.Story_Thefan.Debug_SpawnTheFanShip.namespace.$TheFanShipCh3.isindestructible + ' isinvulnerable: ' + md.Story_Thefan.Debug_SpawnTheFanShip.namespace.$TheFanShipCh3.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Thefan.Ch6_FindTwinShip_CreateYacht.namespace.state == cuestate.complete and @md.Story_Thefan.Ch6_FindTwinShip_CreateYacht.namespace.$TwinShip1.exists">
					<set_object_min_hull object="md.Story_Thefan.Ch6_FindTwinShip_CreateYacht.namespace.$TwinShip1" exact="100" />
					<debug_text text="md.Story_Thefan.Ch6_FindTwinShip_CreateYacht.namespace.$TwinShip1.knownname + ' isindestructible: ' + md.Story_Thefan.Ch6_FindTwinShip_CreateYacht.namespace.$TwinShip1.isindestructible + ' isinvulnerable: ' + md.Story_Thefan.Ch6_FindTwinShip_CreateYacht.namespace.$TwinShip1.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Thefan.Ch7_4_DeployShipFinished.namespace.state == cuestate.complete and @md.Story_Thefan.Ch7_4_DeployShipFinished.namespace.$TeleportShip.exists">
					<set_object_min_hull object="md.Story_Thefan.Ch7_4_DeployShipFinished.namespace.$TeleportShip" exact="100" />
					<debug_text text="md.Story_Thefan.Ch7_4_DeployShipFinished.namespace.$TeleportShip.knownname + ' isindestructible: ' + md.Story_Thefan.Ch7_4_DeployShipFinished.namespace.$TeleportShip.isindestructible + ' isinvulnerable: ' + md.Story_Thefan.Ch7_4_DeployShipFinished.namespace.$TeleportShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Thefan.Ch7_5_CreateTwin2_AtFinishLine.namespace.state == cuestate.complete and @md.Story_Thefan.Ch7_5_CreateTwin2_AtFinishLine.namespace.$TwinShip2.exists">
					<set_object_min_hull object="md.Story_Thefan.Ch7_5_CreateTwin2_AtFinishLine.namespace.$TwinShip2" exact="100" />
					<debug_text text="md.Story_Thefan.Ch7_5_CreateTwin2_AtFinishLine.namespace.$TwinShip2.knownname + ' isindestructible: ' + md.Story_Thefan.Ch7_5_CreateTwin2_AtFinishLine.namespace.$TwinShip2.isindestructible + ' isinvulnerable: ' + md.Story_Thefan.Ch7_5_CreateTwin2_AtFinishLine.namespace.$TwinShip2.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Thefan.Ch8_Force.namespace.state == cuestate.complete and @md.Story_Thefan.Ch8_Force.namespace.$TwinShip2.exists">
					<set_object_min_hull object="md.Story_Thefan.Ch8_Force.namespace.$TwinShip2" exact="100" />
					<debug_text text="md.Story_Thefan.Ch8_Force.namespace.$TwinShip2.knownname + ' isindestructible: ' + md.Story_Thefan.Ch8_Force.namespace.$TwinShip2.isindestructible + ' isinvulnerable: ' + md.Story_Thefan.Ch8_Force.namespace.$TwinShip2.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Thefan.Ch8_2_Force_StationDestruction.namespace.state == cuestate.complete and @md.Story_Thefan.Ch8_2_Force_StationDestruction.namespace.$playership.exists">
					<set_object_min_hull object="md.Story_Thefan.Ch8_2_Force_StationDestruction.namespace.$playership" exact="player.ship.hullpercentage" comment="make the player invulnerable so that no matter what happens he isn't taken out by the explosion" />
					<debug_text text="md.Story_Thefan.Ch8_2_Force_StationDestruction.namespace.$playership.knownname + ' isindestructible: ' + md.Story_Thefan.Ch8_2_Force_StationDestruction.namespace.$playership.isindestructible + ' isinvulnerable: ' + md.Story_Thefan.Ch8_2_Force_StationDestruction.namespace.$playership.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Thefan.Ch9_2_Setup_Twin1.namespace.state == cuestate.complete and @md.Story_Thefan.Ch9_2_Setup_Twin1.namespace.$TwinShip1.exists">
					<set_object_min_hull object="md.Story_Thefan.Ch9_2_Setup_Twin1.namespace.$TwinShip1" exact="80" />
					<debug_text text="md.Story_Thefan.Ch9_2_Setup_Twin1.namespace.$TwinShip1.knownname + ' isindestructible: ' + md.Story_Thefan.Ch9_2_Setup_Twin1.namespace.$TwinShip1.isindestructible + ' isinvulnerable: ' + md.Story_Thefan.Ch9_2_Setup_Twin1.namespace.$TwinShip1.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Thefan.Ch9_2_Setup_Twin2.namespace.state == cuestate.complete and @md.Story_Thefan.Ch9_2_Setup_Twin2.namespace.$TwinShip2.exists">
					<set_object_min_hull object="md.Story_Thefan.Ch9_2_Setup_Twin2.namespace.$TwinShip2" exact="80" />
					<debug_text text="md.Story_Thefan.Ch9_2_Setup_Twin2.namespace.$TwinShip2.knownname + ' isindestructible: ' + md.Story_Thefan.Ch9_2_Setup_Twin2.namespace.$TwinShip2.isindestructible + ' isinvulnerable: ' + md.Story_Thefan.Ch9_2_Setup_Twin2.namespace.$TwinShip2.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Thefan.Evacuate_Astrid.namespace.state == cuestate.complete and @md.Story_Thefan.Evacuate_Astrid.namespace.$escapePod.exists">
					<set_object_min_hull object="md.Story_Thefan.Evacuate_Astrid.namespace.$escapePod" exact="100" />
					<debug_text text="md.Story_Thefan.Evacuate_Astrid.namespace.$escapePod.knownname + ' isindestructible: ' + md.Story_Thefan.Evacuate_Astrid.namespace.$escapePod.isindestructible + ' isinvulnerable: ' + md.Story_Thefan.Evacuate_Astrid.namespace.$escapePod.isinvulnerable" />
				</do_if>
				<do_if value="@md.GS_Split1.Setup.namespace.state == cuestate.complete and @md.GS_Split1.Setup.namespace.$PickupShip.exists">
					<set_object_min_hull object="md.GS_Split1.Setup.namespace.$PickupShip" exact="75" comment="invulnerable" />
					<debug_text text="md.GS_Split1.Setup.namespace.$PickupShip.knownname + ' isindestructible: ' + md.GS_Split1.Setup.namespace.$PickupShip.isindestructible + ' isinvulnerable: ' + md.GS_Split1.Setup.namespace.$PickupShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.Police_Rattlesnake.namespace.state == cuestate.complete and @md.Story_Split.Police_Rattlesnake.namespace.$PoliceRattleSnake.exists">
					<set_object_min_hull object="md.Story_Split.Police_Rattlesnake.namespace.$PoliceRattleSnake" exact="50" />
					<debug_text text="md.Story_Split.Police_Rattlesnake.namespace.$PoliceRattleSnake.knownname + ' isindestructible: ' + md.Story_Split.Police_Rattlesnake.namespace.$PoliceRattleSnake.isindestructible + ' isinvulnerable: ' + md.Story_Split.Police_Rattlesnake.namespace.$PoliceRattleSnake.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.BoneYardCarrier_Setup.namespace.state == cuestate.complete and @md.Story_Split.BoneYardCarrier_Setup.namespace.$BoneyardCarrier.exists">
					<set_object_min_hull object="md.Story_Split.BoneYardCarrier_Setup.namespace.$BoneyardCarrier" exact="50" />
					<debug_text text="md.Story_Split.BoneYardCarrier_Setup.namespace.$BoneyardCarrier.knownname + ' isindestructible: ' + md.Story_Split.BoneYardCarrier_Setup.namespace.$BoneyardCarrier.isindestructible + ' isinvulnerable: ' + md.Story_Split.BoneYardCarrier_Setup.namespace.$BoneyardCarrier.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.Ch1_Police_Control_Event.namespace.state == cuestate.complete and @md.Story_Split.Ch1_Police_Control_Event.namespace.$PoliceShip.exists">
					<set_object_min_hull object="md.Story_Split.Ch1_Police_Control_Event.namespace.$PoliceShip" exact="50" />
					<debug_text text="md.Story_Split.Ch1_Police_Control_Event.namespace.$PoliceShip.knownname + ' isindestructible: ' + md.Story_Split.Ch1_Police_Control_Event.namespace.$PoliceShip.isindestructible + ' isinvulnerable: ' + md.Story_Split.Ch1_Police_Control_Event.namespace.$PoliceShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.Ch1_Police_Control_Retarget.namespace.state == cuestate.complete and @md.Story_Split.Ch1_Police_Control_Retarget.namespace.$PoliceShip.exists">
					<set_object_min_hull object="md.Story_Split.Ch1_Police_Control_Retarget.namespace.$PoliceShip" exact="50" />
					<debug_text text="md.Story_Split.Ch1_Police_Control_Retarget.namespace.$PoliceShip.knownname + ' isindestructible: ' + md.Story_Split.Ch1_Police_Control_Retarget.namespace.$PoliceShip.isindestructible + ' isinvulnerable: ' + md.Story_Split.Ch1_Police_Control_Retarget.namespace.$PoliceShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.Ch1_Police_Overshoot.namespace.state == cuestate.complete and @md.Story_Split.Ch1_Police_Overshoot.namespace.$PoliceShip.exists">
					<set_object_min_hull object="md.Story_Split.Ch1_Police_Overshoot.namespace.$PoliceShip" exact="33" />
					<debug_text text="md.Story_Split.Ch1_Police_Overshoot.namespace.$PoliceShip.knownname + ' isindestructible: ' + md.Story_Split.Ch1_Police_Overshoot.namespace.$PoliceShip.isindestructible + ' isinvulnerable: ' + md.Story_Split.Ch1_Police_Overshoot.namespace.$PoliceShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.Ch1_Police_Cutscene.namespace.state == cuestate.complete and @md.Story_Split.Ch1_Police_Cutscene.namespace.$PoliceShip.exists">
					<set_object_min_hull object="md.Story_Split.Ch1_Police_Cutscene.namespace.$PoliceShip" exact="$PoliceShip.hull" />
					<debug_text text="md.Story_Split.Ch1_Police_Cutscene.namespace.$PoliceShip.knownname + ' isindestructible: ' + md.Story_Split.Ch1_Police_Cutscene.namespace.$PoliceShip.isindestructible + ' isinvulnerable: ' + md.Story_Split.Ch1_Police_Cutscene.namespace.$PoliceShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.Ch1_Police_Cutscene.namespace.state == cuestate.complete and @md.Story_Split.Ch1_Police_Cutscene.namespace.$LoyalistActor.exists">
					<set_object_min_hull object="md.Story_Split.Ch1_Police_Cutscene.namespace.$LoyalistActor.ship" exact="$LoyalistActor.ship.hull" />
					<debug_text text="md.Story_Split.Ch1_Police_Cutscene.namespace.$LoyalistActor.ship.knownname + ' isindestructible: ' + md.Story_Split.Ch1_Police_Cutscene.namespace.$LoyalistActor.ship.isindestructible + ' isinvulnerable: ' + md.Story_Split.Ch1_Police_Cutscene.namespace.$LoyalistActor.ship.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.Ch2_Getaway_Cutscene_Delay.namespace.state == cuestate.complete and @md.Story_Split.Ch2_Getaway_Cutscene_Delay.namespace.$GetawayShip_Cutscene.exists">
					<set_object_min_hull object="md.Story_Split.Ch2_Getaway_Cutscene_Delay.namespace.$GetawayShip_Cutscene" exact="50" />
					<debug_text text="md.Story_Split.Ch2_Getaway_Cutscene_Delay.namespace.$GetawayShip_Cutscene.knownname + ' isindestructible: ' + md.Story_Split.Ch2_Getaway_Cutscene_Delay.namespace.$GetawayShip_Cutscene.isindestructible + ' isinvulnerable: ' + md.Story_Split.Ch2_Getaway_Cutscene_Delay.namespace.$GetawayShip_Cutscene.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.Ch2_Getaway_Cutscene_Delay.namespace.state == cuestate.complete and @md.Story_Split.Ch2_Getaway_Cutscene_Delay.namespace.$Ch2_SlaveTraderShip.exists">
					<set_object_min_hull object="md.Story_Split.Ch2_Getaway_Cutscene_Delay.namespace.$Ch2_SlaveTraderShip" exact="50" />
					<debug_text text="md.Story_Split.Ch2_Getaway_Cutscene_Delay.namespace.$Ch2_SlaveTraderShip.knownname + ' isindestructible: ' + md.Story_Split.Ch2_Getaway_Cutscene_Delay.namespace.$Ch2_SlaveTraderShip.isindestructible + ' isinvulnerable: ' + md.Story_Split.Ch2_Getaway_Cutscene_Delay.namespace.$Ch2_SlaveTraderShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.Ch2_ScavengerHunt_1.namespace.state == cuestate.complete and @md.Story_Split.Ch2_ScavengerHunt_1.namespace.$SalvageShip.exists">
					<set_object_min_hull object="md.Story_Split.Ch2_ScavengerHunt_1.namespace.$SalvageShip" exact="5" />
					<debug_text text="md.Story_Split.Ch2_ScavengerHunt_1.namespace.$SalvageShip.knownname + ' isindestructible: ' + md.Story_Split.Ch2_ScavengerHunt_1.namespace.$SalvageShip.isindestructible + ' isinvulnerable: ' + md.Story_Split.Ch2_ScavengerHunt_1.namespace.$SalvageShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.Ch2_ScavengerHunt_4.namespace.state == cuestate.complete and @md.Story_Split.Ch2_ScavengerHunt_4.namespace.$GetawayShip.exists">
					<set_object_min_hull object="md.Story_Split.Ch2_ScavengerHunt_4.namespace.$GetawayShip" exact="50" />
					<debug_text text="md.Story_Split.Ch2_ScavengerHunt_4.namespace.$GetawayShip.knownname + ' isindestructible: ' + md.Story_Split.Ch2_ScavengerHunt_4.namespace.$GetawayShip.isindestructible + ' isinvulnerable: ' + md.Story_Split.Ch2_ScavengerHunt_4.namespace.$GetawayShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.Ch2_Study_Funeral_Setup.namespace.state == cuestate.complete and @md.Story_Split.Ch2_Study_Funeral_Setup.namespace.$FuneralServiceShip.exists">
					<set_object_min_hull object="md.Story_Split.Ch2_Study_Funeral_Setup.namespace.$FuneralServiceShip" exact="33" />
					<debug_text text="md.Story_Split.Ch2_Study_Funeral_Setup.namespace.$FuneralServiceShip.knownname + ' isindestructible: ' + md.Story_Split.Ch2_Study_Funeral_Setup.namespace.$FuneralServiceShip.isindestructible + ' isinvulnerable: ' + md.Story_Split.Ch2_Study_Funeral_Setup.namespace.$FuneralServiceShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.Ch2_Undock_Coffin.namespace.state == cuestate.complete and @md.Story_Split.Ch2_Undock_Coffin.namespace.$FuneralCoffinShip.exists">
					<set_object_min_hull object="md.Story_Split.Ch2_Undock_Coffin.namespace.$FuneralCoffinShip" exact="50" />
					<debug_text text="md.Story_Split.Ch2_Undock_Coffin.namespace.$FuneralCoffinShip.knownname + ' isindestructible: ' + md.Story_Split.Ch2_Undock_Coffin.namespace.$FuneralCoffinShip.isindestructible + ' isinvulnerable: ' + md.Story_Split.Ch2_Undock_Coffin.namespace.$FuneralCoffinShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.DEBUG_Setup_Ch3.namespace.state == cuestate.complete and @md.Story_Split.DEBUG_Setup_Ch3.namespace.$FuneralServiceShip.exists">
					<set_object_min_hull object="md.Story_Split.DEBUG_Setup_Ch3.namespace.$FuneralServiceShip" exact="33" />
					<debug_text text="md.Story_Split.DEBUG_Setup_Ch3.namespace.$FuneralServiceShip.knownname + ' isindestructible: ' + md.Story_Split.DEBUG_Setup_Ch3.namespace.$FuneralServiceShip.isindestructible + ' isinvulnerable: ' + md.Story_Split.DEBUG_Setup_Ch3.namespace.$FuneralServiceShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.DEBUG_Setup_Ch3.namespace.state == cuestate.complete and @md.Story_Split.DEBUG_Setup_Ch3.namespace.$BoneyardCarrier.exists">
					<set_object_min_hull object="md.Story_Split.DEBUG_Setup_Ch3.namespace.$BoneyardCarrier" exact="50" />
					<debug_text text="md.Story_Split.DEBUG_Setup_Ch3.namespace.$BoneyardCarrier.knownname + ' isindestructible: ' + md.Story_Split.DEBUG_Setup_Ch3.namespace.$BoneyardCarrier.isindestructible + ' isinvulnerable: ' + md.Story_Split.DEBUG_Setup_Ch3.namespace.$BoneyardCarrier.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.Ch3_Breakin_Briefing_Done.namespace.state == cuestate.complete and @md.Story_Split.Ch3_Breakin_Briefing_Done.namespace.$FuneralCoffinShip.exists">
					<set_object_min_hull object="md.Story_Split.Ch3_Breakin_Briefing_Done.namespace.$FuneralCoffinShip" exact="50" />
					<debug_text text="md.Story_Split.Ch3_Breakin_Briefing_Done.namespace.$FuneralCoffinShip.knownname + ' isindestructible: ' + md.Story_Split.Ch3_Breakin_Briefing_Done.namespace.$FuneralCoffinShip.isindestructible + ' isinvulnerable: ' + md.Story_Split.Ch3_Breakin_Briefing_Done.namespace.$FuneralCoffinShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.Ch3_Breakin_Briefing_Done.namespace.state == cuestate.complete and @md.Story_Split.Ch3_Breakin_Briefing_Done.namespace.$SlaveTraderShip.exists">
					<set_object_min_hull object="md.Story_Split.Ch3_Breakin_Briefing_Done.namespace.$SlaveTraderShip" exact="50" comment="invulnerable" />
					<debug_text text="md.Story_Split.Ch3_Breakin_Briefing_Done.namespace.$SlaveTraderShip.knownname + ' isindestructible: ' + md.Story_Split.Ch3_Breakin_Briefing_Done.namespace.$SlaveTraderShip.isindestructible + ' isinvulnerable: ' + md.Story_Split.Ch3_Breakin_Briefing_Done.namespace.$SlaveTraderShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.Ch4_GetAway_Setup.namespace.state == cuestate.complete and @md.Story_Split.Ch4_GetAway_Setup.namespace.$GetAwayShip.exists">
					<set_object_min_hull object="md.Story_Split.Ch4_GetAway_Setup.namespace.$GetAwayShip" exact="50" />
					<debug_text text="md.Story_Split.Ch4_GetAway_Setup.namespace.$GetAwayShip.knownname + ' isindestructible: ' + md.Story_Split.Ch4_GetAway_Setup.namespace.$GetAwayShip.isindestructible + ' isinvulnerable: ' + md.Story_Split.Ch4_GetAway_Setup.namespace.$GetAwayShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.Ch6_Sink.namespace.state == cuestate.complete and @md.Story_Split.Ch6_Sink.namespace.$PoliceRattleSnake.exists">
					<set_object_min_hull object="md.Story_Split.Ch6_Sink.namespace.$PoliceRattleSnake" exact="50" />
					<debug_text text="md.Story_Split.Ch6_Sink.namespace.$PoliceRattleSnake.knownname + ' isindestructible: ' + md.Story_Split.Ch6_Sink.namespace.$PoliceRattleSnake.isindestructible + ' isinvulnerable: ' + md.Story_Split.Ch6_Sink.namespace.$PoliceRattleSnake.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Split.Ch6_Patriarchy_Sabotage_Mission_Bomb_Attached.event.param.exists">
					<set_object_min_hull object="md.Story_Split.Ch6_Patriarchy_Sabotage_Mission_Bomb_Attached.event.param" exact="50" />
					<debug_text text="md.Story_Split.Ch6_Patriarchy_Sabotage_Mission_Bomb_Attached.event.param.knownname + ' isindestructible: ' + md.Story_Split.Ch6_Patriarchy_Sabotage_Mission_Bomb_Attached.event.param.isindestructible + ' isinvulnerable: ' + md.Story_Split.Ch6_Patriarchy_Sabotage_Mission_Bomb_Attached.event.param.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Covert_Operations.Setup_Ch5_SecretServiceActorShip.namespace.state == cuestate.complete and @md.Story_Covert_Operations.Setup_Ch5_SecretServiceActorShip.namespace.$SecretServiceActorShip.exists">
					<set_object_min_hull object="md.Story_Covert_Operations.Setup_Ch5_SecretServiceActorShip.namespace.$SecretServiceActorShip" exact="20" />
					<debug_text text="md.Story_Covert_Operations.Setup_Ch5_SecretServiceActorShip.namespace.$SecretServiceActorShip.knownname + ' isindestructible: ' + md.Story_Covert_Operations.Setup_Ch5_SecretServiceActorShip.namespace.$SecretServiceActorShip.isindestructible + ' isinvulnerable: ' + md.Story_Covert_Operations.Setup_Ch5_SecretServiceActorShip.namespace.$SecretServiceActorShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Covert_Operations.Ch1_Argon_Police_Control_Event.namespace.state == cuestate.complete and @md.Story_Covert_Operations.Ch1_Argon_Police_Control_Event.namespace.$playership.exists">
					<set_object_min_hull object="md.Story_Covert_Operations.Ch1_Argon_Police_Control_Event.namespace.$playership" exact="$playership.hullpercentage" />
					<debug_text text="md.Story_Covert_Operations.Ch1_Argon_Police_Control_Event.namespace.$playership.knownname + ' isindestructible: ' + md.Story_Covert_Operations.Ch1_Argon_Police_Control_Event.namespace.$playership.isindestructible + ' isinvulnerable: ' + md.Story_Covert_Operations.Ch1_Argon_Police_Control_Event.namespace.$playership.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Covert_Operations.Ch2_Create_Leak_Setup.namespace.state == cuestate.complete and @md.Story_Covert_Operations.Ch2_Create_Leak_Setup.namespace.$PlayerSpacesuit.exists">
					<set_object_min_hull object="md.Story_Covert_Operations.Ch2_Create_Leak_Setup.namespace.$PlayerSpacesuit" exact="20" />
					<debug_text text="md.Story_Covert_Operations.Ch2_Create_Leak_Setup.namespace.$PlayerSpacesuit.knownname + ' isindestructible: ' + md.Story_Covert_Operations.Ch2_Create_Leak_Setup.namespace.$PlayerSpacesuit.isindestructible + ' isinvulnerable: ' + md.Story_Covert_Operations.Ch2_Create_Leak_Setup.namespace.$PlayerSpacesuit.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Covert_Operations.Ch_5_Pirate_Fleet_Setup.namespace.state == cuestate.complete and @md.Story_Covert_Operations.Ch_5_Pirate_Fleet_Setup.namespace.$SCAFlagship.exists">
					<set_object_min_hull object="md.Story_Covert_Operations.Ch_5_Pirate_Fleet_Setup.namespace.$SCAFlagship" exact="30" />
					<debug_text text="md.Story_Covert_Operations.Ch_5_Pirate_Fleet_Setup.namespace.$SCAFlagship.knownname + ' isindestructible: ' + md.Story_Covert_Operations.Ch_5_Pirate_Fleet_Setup.namespace.$SCAFlagship.isindestructible + ' isinvulnerable: ' + md.Story_Covert_Operations.Ch_5_Pirate_Fleet_Setup.namespace.$SCAFlagship.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Covert_Operations.ANT_Fleet_Setup.$ANTActorShip.namespace.state == cuestate.complete and @md.Story_Covert_Operations.ANT_Fleet_Setup.$ANTActorShip.namespace.exists">
					<set_object_min_hull object="md.Story_Covert_Operations.ANT_Fleet_Setup.namespace.$ANTActorShip" exact="60" />
					<debug_text text="md.Story_Covert_Operations.ANT_Fleet_Setup.namespace.$ANTActorShip.knownname + ' isindestructible: ' + md.Story_Covert_Operations.ANT_Fleet_Setup.namespace.$ANTActorShip.isindestructible + ' isinvulnerable: ' + md.Story_Covert_Operations.ANT_Fleet_Setup.namespace.$ANTActorShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Terran_Prelude.Prelude_Terran_Setup.namespace.state == cuestate.complete and @md.Story_Terran_Prelude.Prelude_Terran_Setup.namespace.$Terran1Ship.exists">
					<set_object_min_hull object="md.Story_Terran_Prelude.Prelude_Terran_Setup.namespace.$Terran1Ship" exact="7" />
					<debug_text text="md.Story_Terran_Prelude.Prelude_Terran_Setup.namespace.$Terran1Ship.knownname + ' isindestructible: ' + md.Story_Terran_Prelude.Prelude_Terran_Setup.namespace.$Terran1Ship.isindestructible + ' isinvulnerable: ' + md.Story_Terran_Prelude.Prelude_Terran_Setup.namespace.$Terran1Ship.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Yaki.Setup_Wingmate.namespace.state == cuestate.complete and @md.Story_Yaki.Setup_Wingmate.namespace.$WingmateShip.exists">
					<set_object_min_hull object="md.Story_Yaki.Setup_Wingmate.namespace.$WingmateShip" exact="10" />
					<debug_text text="md.Story_Yaki.Setup_Wingmate.namespace.$WingmateShip.knownname + ' isindestructible: ' + md.Story_Yaki.Setup_Wingmate.namespace.$WingmateShip.isindestructible + ' isinvulnerable: ' + md.Story_Yaki.Setup_Wingmate.namespace.$WingmateShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Yaki.Ch1_1_Select_Dialog.namespace.state == cuestate.complete and @md.Story_Yaki.Ch1_1_Select_Dialog.namespace.$EscortShip.exists">
					<set_object_min_hull object="md.Story_Yaki.Ch1_1_Select_Dialog.namespace.$EscortShip" exact="10" />
					<debug_text text="md.Story_Yaki.Ch1_1_Select_Dialog.namespace.$EscortShip.knownname + ' isindestructible: ' + md.Story_Yaki.Ch1_1_Select_Dialog.namespace.$EscortShip.isindestructible + ' isinvulnerable: ' + md.Story_Yaki.Ch1_1_Select_Dialog.namespace.$EscortShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Yaki.Ch4_Setup_Antigone_Miner.namespace.state == cuestate.complete and @md.Story_Yaki.Ch4_Setup_Antigone_Miner.namespace.$AntigoneMiner.exists">
					<set_object_min_hull object="md.Story_Yaki.Ch4_Setup_Antigone_Miner.namespace.$AntigoneMiner" exact="80" comment="Give the illusion of vulnerability, but don't allow it to be destroyed just yet." />
					<debug_text text="md.Story_Yaki.Ch4_Setup_Antigone_Miner.namespace.$AntigoneMiner.knownname + ' isindestructible: ' + md.Story_Yaki.Ch4_Setup_Antigone_Miner.namespace.$AntigoneMiner.isindestructible + ' isinvulnerable: ' + md.Story_Yaki.Ch4_Setup_Antigone_Miner.namespace.$AntigoneMiner.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Yaki.Ch4_2_Antigone_Miner_Orders.namespace.state == cuestate.complete and @md.Story_Yaki.Ch4_2_Antigone_Miner_Orders.namespace.$AntigoneMiner.exists">
					<set_object_min_hull object="md.Story_Yaki.Ch4_2_Antigone_Miner_Orders.namespace.$AntigoneMiner" exact="10" />
					<debug_text text="md.Story_Yaki.Ch4_2_Antigone_Miner_Orders.namespace.$AntigoneMiner.knownname + ' isindestructible: ' + md.Story_Yaki.Ch4_2_Antigone_Miner_Orders.namespace.$AntigoneMiner.isindestructible + ' isinvulnerable: ' + md.Story_Yaki.Ch4_2_Antigone_Miner_Orders.namespace.$AntigoneMiner.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Yaki.Ch6_2_Setup_Xenon_Scout.namespace.state == cuestate.complete and @md.Story_Yaki.Ch6_2_Setup_Xenon_Scout.namespace.$XenonScout.exists">
					<set_object_min_hull object="md.Story_Yaki.Ch6_2_Setup_Xenon_Scout.namespace.$XenonScout" exact="10" />
					<debug_text text="md.Story_Yaki.Ch6_2_Setup_Xenon_Scout.namespace.$XenonScout.knownname + ' isindestructible: ' + md.Story_Yaki.Ch6_2_Setup_Xenon_Scout.namespace.$XenonScout.isindestructible + ' isinvulnerable: ' + md.Story_Yaki.Ch6_2_Setup_Xenon_Scout.namespace.$XenonScout.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Yaki.Ch8_3_Yaki_Fly_By.namespace.state == cuestate.complete and @md.Story_Yaki.Ch8_3_Yaki_Fly_By.namespace.$YakiShip.exists">
					<set_object_min_hull object="md.Story_Yaki.Ch8_3_Yaki_Fly_By.namespace.$YakiShip" exact="10" />
					<debug_text text="md.Story_Yaki.Ch8_3_Yaki_Fly_By.namespace.$YakiShip.knownname + ' isindestructible: ' + md.Story_Yaki.Ch8_3_Yaki_Fly_By.namespace.$YakiShip.isindestructible + ' isinvulnerable: ' + md.Story_Yaki.Ch8_3_Yaki_Fly_By.namespace.$YakiShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Yaki.Ch13_Setup_Damaged_Trader.namespace.state == cuestate.complete and @md.Story_Yaki.Ch13_Setup_Damaged_Trader.namespace.$DamagedTrader.exists">
					<set_object_min_hull object="md.Story_Yaki.Ch13_Setup_Damaged_Trader.namespace.$DamagedTrader" exact="10" />
					<debug_text text="md.Story_Yaki.Ch13_Setup_Damaged_Trader.namespace.$DamagedTrader.knownname + ' isindestructible: ' + md.Story_Yaki.Ch13_Setup_Damaged_Trader.namespace.$DamagedTrader.isindestructible + ' isinvulnerable: ' + md.Story_Yaki.Ch13_Setup_Damaged_Trader.namespace.$DamagedTrader.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Yaki.Ch14_Setup_Ships.namespace.state == cuestate.complete and @md.Story_Yaki.Ch14_Setup_Ships.namespace.$MiningFleetCommander.exists">
					<set_object_min_hull object="md.Story_Yaki.Ch14_Setup_Ships.namespace.$MiningFleetCommander" exact="30" />
					<debug_text text="md.Story_Yaki.Ch14_Setup_Ships.namespace.$MiningFleetCommander.knownname + ' isindestructible: ' + md.Story_Yaki.Ch14_Setup_Ships.namespace.$MiningFleetCommander.isindestructible + ' isinvulnerable: ' + md.Story_Yaki.Ch14_Setup_Ships.namespace.$MiningFleetCommander.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Yaki.Ch14_Setup_Ships.namespace.state == cuestate.complete and @md.Story_Yaki.Ch14_Setup_Ships.namespace.$YakiPirate.exists">
					<set_object_min_hull object="md.Story_Yaki.Ch14_Setup_Ships.namespace.$YakiPirate" exact="100" />
					<debug_text text="md.Story_Yaki.Ch14_Setup_Ships.namespace.$YakiPirate.knownname + ' isindestructible: ' + md.Story_Yaki.Ch14_Setup_Ships.namespace.$YakiPirate.isindestructible + ' isinvulnerable: ' + md.Story_Yaki.Ch14_Setup_Ships.namespace.$YakiPirate.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Yaki.Ch17_Setup_Yaki_Civilian_Ship.namespace.state == cuestate.complete and @md.Story_Yaki.Ch17_Setup_Yaki_Civilian_Ship.namespace.$YakiCivilianShip.exists">
					<set_object_min_hull object="md.Story_Yaki.Ch17_Setup_Yaki_Civilian_Ship.namespace.$YakiCivilianShip" exact="100" />
					<debug_text text="md.Story_Yaki.Ch17_Setup_Yaki_Civilian_Ship.namespace.$YakiCivilianShip.knownname + ' isindestructible: ' + md.Story_Yaki.Ch17_Setup_Yaki_Civilian_Ship.namespace.$YakiCivilianShip.isindestructible + ' isinvulnerable: ' + md.Story_Yaki.Ch17_Setup_Yaki_Civilian_Ship.namespace.$YakiCivilianShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Yaki.Ch18_Setup_Asteroid_Base_Tunnels.namespace.state == cuestate.complete and @md.Story_Yaki.Ch18_Setup_Asteroid_Base_Tunnels.namespace.$OldYakiShip.exists">
					<set_object_min_hull object="md.Story_Yaki.Ch18_Setup_Asteroid_Base_Tunnels.namespace.$OldYakiShip" exact="100" />
					<debug_text text="md.Story_Yaki.Ch18_Setup_Asteroid_Base_Tunnels.namespace.$OldYakiShip.knownname + ' isindestructible: ' + md.Story_Yaki.Ch18_Setup_Asteroid_Base_Tunnels.namespace.$OldYakiShip.isindestructible + ' isinvulnerable: ' + md.Story_Yaki.Ch18_Setup_Asteroid_Base_Tunnels.namespace.$OldYakiShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Yaki.Ch22_B_3_Wingmate_Orders.namespace.state == cuestate.complete and @md.Story_Yaki.Ch22_B_3_Wingmate_Orders.namespace.$WingmateShip.exists">
					<set_object_min_hull object="md.Story_Yaki.Ch22_B_3_Wingmate_Orders.namespace.$WingmateShip" exact="100" />
					<debug_text text="md.Story_Yaki.Ch22_B_3_Wingmate_Orders.namespace.$WingmateShip.knownname + ' isindestructible: ' + md.Story_Yaki.Ch22_B_3_Wingmate_Orders.namespace.$WingmateShip.isindestructible + ' isinvulnerable: ' + md.Story_Yaki.Ch22_B_3_Wingmate_Orders.namespace.$WingmateShip.isinvulnerable" />
				</do_if>
				<do_if value="@md.Story_Yaki.Wingmate_Transfer.namespace.state == cuestate.complete and @md.Story_Yaki.Wingmate_Transfer.namespace.$WingmateShip.exists">
					<set_object_min_hull object="md.Story_Yaki.Wingmate_Transfer.namespace.$WingmateShip" exact="100" />
					<debug_text text="md.Story_Yaki.Wingmate_Transfer.namespace.$WingmateShip.knownname + ' isindestructible: ' + md.Story_Yaki.Wingmate_Transfer.namespace.$WingmateShip.isindestructible + ' isinvulnerable: ' + md.Story_Yaki.Wingmate_Transfer.namespace.$WingmateShip.isinvulnerable" />
				</do_if>
			</actions>
		</library>
		<cue name="DebugChat" namespace="this">
			<conditions>
				<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
				<check_any>
					<check_value value="event.param3.$text == 'debug kuertee interval'" />
					<check_value value="event.param3.$text == 'debug atd countdown'" />
					<check_value value="event.param3.$text == 'debug atd stop countdown'" />
					<check_value value="event.param3.$text == 'debug atd reset ssac'" />
					<check_value value="event.param3.$text == 'debug atd target'" />
					<check_value value="event.param3.$text == 'debug atd countdown cues'" />
					<check_value value="event.param3.$text == 'debug atd kill player'" />
					<check_value value="event.param3.$text == 'debug atd hull and shield'" />
					<check_value value="event.param3.$text == 'debug atd transfer money'" />
					<check_value value="event.param3.$text == 'debug atd isscenario'" />
				</check_any>
			</conditions>
			<actions>
				<debug_text text="@event.param3" />
				<set_value name="$ship" exact="player.ship" />
				<do_if value="event.param3.$text == 'debug atd isscenario'">
					<debug_text text="'player.module: ' + player.module" />
					<debug_text text="'isscenario: ' + player.allmodules.{player.module}.isscenario" />
				</do_if>
				<do_if value="event.param3.$text == 'debug atd transfer money'">
					<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
						$amount = 100Cr,
						$description = {111204, 2001},
						$from = faction.player,
						$to = faction.argon,
						]" />
					<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
						$amount = 100Cr,
						$description = {111204, 2002},
						$from = faction.argon,
						$to = faction.player,
						]" />
					<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
						$amount = 100Cr,
						$description = {111204, 2003},
						$from = faction.player,
						$to = faction.argon,
						]" />
					<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
						$amount = 100Cr,
						$description = {111204, 2004},
						$from = faction.argon,
						$to = faction.player,
						]" />
					<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
						$amount = 100Cr,
						$description = {111204, 2005},
						$from = faction.player,
						$to = faction.argon,
						]" />
					<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
						$amount = 100Cr,
						$description = {111204, 2006},
						$from = faction.argon,
						$to = faction.player,
						]" />
					<signal_cue_instantly cue="md.VerboseTransactionLog.TransferMoney" param="table[
						$amount = 100Cr,
						$description = {111204, 2007},
						$from = faction.player,
						]" />
				</do_if>
				<do_if value="event.param3.$text == 'debug kuertee interval'">
					<do_if value="player.age - @md.$kuertee_interval_time gt 1s">
						<set_value name="md.$kuertee_interval_time" exact="player.age" />
						<do_if value="@md.$kuertee_interval">
							<remove_value name="md.$kuertee_interval" />
						</do_if>
						<do_else>
							<set_value name="md.$kuertee_interval" exact="100" />
						</do_else>
					</do_if>
					<debug_text text="'md.$kuertee_interval: ' + @md.$kuertee_interval" />
				</do_if>
				<do_elseif value="event.param3.$text == 'debug atd countdown'">
					<signal_cue_instantly cue="StartDestructionCountdown" param="table[$ship = player.ship, $attackerFaction = faction.khaak]" />
				</do_elseif>
				<do_elseif value="event.param3.$text == 'debug atd stop countdown'">
					<signal_cue_instantly cue="StopDestructionCountdown" param="table[$ship = player.ship, $isDestroy = false, $attackerFaction = faction.khaak, $isDestructionAverted = true]" />
				</do_elseif>
				<do_elseif value="event.param3.$text == 'debug atd reset ssac'">
					<set_value name="$debugChance_old" exact="md.kuertee_ssac.UserSettings.$debugChance" />
					<set_value name="$debugChance_old2" exact="md.kuertee_ssac.UserSettings.$debugChance_calc" />
					<set_value name="md.kuertee_ssac.UserSettings.$debugChance" exact="100" />
					<set_value name="md.kuertee_ssac.UserSettings.$debugChance_calc" exact="100" />
					<debug_text text="'@md.kuertee_ssac.ResetSocialStandingsAndCitizenships: ' + @md.kuertee_ssac.ResetSocialStandingsAndCitizenships" />
					<do_if value="@md.kuertee_ssac.ResetSocialStandingsAndCitizenships">
						<run_actions ref="md.kuertee_ssac.ResetSocialStandingsAndCitizenships" />
					</do_if>
					<set_value name="md.kuertee_ssac.UserSettings.$debugChance" exact="$debugChance_old" />
					<set_value name="md.kuertee_ssac.UserSettings.$debugChance_calc" exact="$debugChance_old2" />
				</do_elseif>
				<do_elseif value="event.param3.$text == 'debug atd target'">
					<debug_text text="player.target + ': ' + @player.target.knownname + ', ' + @player.target.idcode + ', isclass.station: ' + @player.target.isclass.station + ', ' + @player.target.class + ', macro: ' + @player.target.macro" />
				</do_elseif>
				<do_elseif value="event.param3.$text == 'debug atd countdown cues'">
					<debug_text text="StartDestructionCountdown + ': ' + StartDestructionCountdown.state" />
					<debug_text text="StopDestructionCountdown + ': ' + StopDestructionCountdown.state" />
					<debug_text text="ClearDestructionCountdown + ': ' + ClearDestructionCountdown.state" />
				</do_elseif>
				<do_elseif value="event.param3.$text == 'debug atd kill player'">
					<signal_cue cue="PlayerDeath" />
				</do_elseif>
				<do_elseif value="event.param3.$text == 'debug atd hull and shield'">
					<debug_text text="'$ship.shieldpercentage: ' + $ship.shieldpercentage" />
					<debug_text text="'$ship.hullpercentage: ' + $ship.hullpercentage" />
					<debug_text text="'kATD.$shipCountdownCues.{$ship}.$isDestructionCertain: ' + kATD.$shipCountdownCues.{$ship}.$isDestructionCertain" />
					<debug_text text="'$ship.isindestructible: ' + $ship.isindestructible" />
					<debug_text text="'$ship.isinvulnerable: ' + $ship.isinvulnerable" />
				</do_elseif>
				<reset_cue cue="this" />
			</actions>
		</cue>
	</cues>
</mdscript>
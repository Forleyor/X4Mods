<?xml version="1.0" encoding="utf-8"?>
<diff>

<!-- kuertee: RAP -->
<!--
	<library name="GenerateTextTable">
		<actions>
-->
	<add pos="prepend" sel="//library[@name=&quot;GenerateTextTable&quot;]/actions">
		<include_actions ref="md.kuertee_professions_guilds.GuildMissionContainer_Description" />
	</add>
<!-- ADD:
	<library name="Start">
		<params>
-->
	<add sel="//library[@name=&quot;Start&quot;]/params">
		<param name="MissionGroup" default="null" />
		<param name="EnemyFaction" default="null" />
	</add>
<!-- ADD property group:
	<create_offer cue="$MissionCue" ... >
-->
	<add sel="//create_offer[@cue=&quot;$MissionCue&quot;]" type="@group">$MissionGroup</add>
<!--
	<signal_cue_instantly cue="md.GenericMissions.GenericAcceptLogbookEntry" param="[$TextTable.$missionname, $Client, $ClientOwner]"/>
-->
	<add pos="after" sel="//signal_cue_instantly[@cue=&quot;md.GenericMissions.GenericAcceptLogbookEntry&quot;]">
		<set_value name="$DebugChance" exact="md.kuertee_professions_guilds.UserSettings.$debugChance3" />
		<set_value name="namespace.$kProfs_timeStart" exact="player.age" />
	</add>
<!--
	replace. ensure that ship reward is based on value at the time of delivery instead of on average price of each component at the time of mission creation.
	<cue name="MissionEnded">
		(replace second) <do_if value="$RewardCr">
		(remove first) <do_else>
-->
	<remove sel="//cue[@name=&quot;MissionEnded&quot;]//do_if[@value=&quot;$RewardCr&quot;]/following-sibling::do_else" />
	<replace sel="//cue[@name=&quot;MissionEnded&quot;]//do_if[@value=&quot;$RewardCr&quot;]">
		<set_value name="$FleetValue" exact="0Cr"/>
		<do_for_each in="this.$FleetShips" name="$Ship">
			<set_value name="$FleetValue" exact="$Ship.value" operation="add"/>
			<debug_text text="$Ship.knownname + ' is worth ' + $Ship.value.formatted.default" chance="$DebugChance"/>
		</do_for_each>
		<set_value name="$RewardCr" exact="(($FleetValue)f * $RewardMultiplier)ct"/>
		<debug_text text="'Fleet value: ' + $FleetValue.formatted.default + '. Multiplied: ' + $RewardCr" chance="$DebugChance"/>
		<set_value name="$Reward_Money__Result" exact="$RewardCr" />
		<include_actions ref="md.LIB_Reward_Balancing.Apply_RewardMultiplier" comment="signal leak and mission thread bonus"/>
		<set_value name="$RewardCr" exact="$Reward_Money__Result_Multiplied" />
		<remove_value name="$Reward_Money__Result" />
		<remove_value name="$Reward_Money__Result_Multiplied" />
		<reward_player money="$RewardCr"/>
	</replace>
<!--
	<cue name="MissionEnded">
		<set_value name="stat.missions_completed" operation="add"/>
-->
	<add pos="after" sel="//cue[@name=&quot;MissionEnded&quot;]//set_value[@name=&quot;stat.missions_completed&quot;][@operation=&quot;add&quot;]">
		<set_value name="namespace.$kProfs_isSuccess" exact="true" />
		<set_value name="namespace.$kProfs_rewardCr" exact="$RewardCr" />
		<set_value name="namespace.$kProfs_rewardObj" exact="$RewardObj" />
	</add>
<!--
	<cue name="CleanUp">
		<actions>
-->
	<add pos="prepend" sel="//cue[@name=&quot;CleanUp&quot;]/actions">
		<do_if value="@namespace.$kProfs_timeStart">
			<signal_cue_instantly cue="md.kuertee_professions.GMMissionEnd" param="table[
				$profRepu = md.kuertee_professions.kProfs.$prof_Shipwright,
				$activityId = if @namespace.$kProfs_isSuccess then md.kuertee_professions.kProfs.$activity_full_mission_success else md.kuertee_professions.kProfs.$activity_full_mission_failure,
				$missionLib = namespace,
				$rewardCr = @namespace.$kProfs_rewardCr,
				$rewardObj = @namespace.$kProfs_rewardObj
			]" />
		</do_if>
	</add>
</diff>

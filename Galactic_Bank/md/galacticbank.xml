<?xml version="1.0" encoding="utf-8"?>
<mdscript name="GalacticBank" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="../../xsd/md.xsd">
	<cues>
		<cue name="Vault" namespace="this" version="1">
			<conditions>
				<check_any>
					<event_game_loaded />
					<event_game_started />
					<event_player_created />
					<event_cue_signalled cue="md.Setup.Start" />
				</check_any>
				<check_value value="not @player.allmodules.{player.module}.isscenario" />
			</conditions>
			<delay exact="1ms" />
			<actions>
				<set_value name="md.$FactionData.{faction.bankingclan}" exact="table[]" />
				<set_value name="$SetupComplete" exact="false" />

				<!-- settings affecting all accounts -->
				<set_value name="$Fee30" exact="0" />
				<set_value name="$Rate30" exact="0.015" />
				<set_value name="$Period30" exact="10h" />
				<set_value name="$Fee20" exact="0.0025" />
				<set_value name="$Rate20" exact="0.0125" />
				<set_value name="$Period20" exact="12h" />
				<set_value name="$Fee10" exact="0.0025" />
				<set_value name="$Rate10" exact="0.01" />
				<set_value name="$Period10" exact="15h" />
				<set_value name="$Fee0" exact="0.005" />
				<set_value name="$Rate0" exact="0.0075" />
				<set_value name="$Period0" exact="20h" />
				<set_value name="$Fee9" exact="0.005" />
				<set_value name="$Rate9" exact="0.005" />
				<set_value name="$Period9" exact="24h" />
				<!--
          Vault.$Accounts = table[
            {$faction} = table[
							$balance = (float)ct,
							$fee = float,
							$rate = float,
							$period = time,
							$interest_time = time
            ]
          ]
        -->
				<set_value name="$Accounts" exact="table[
					{faction.bankingclan} = table[],
					{faction.hapes} = table[],
					{faction.huttpirates} = table[],
					{faction.mandoraiders} = table[],
					{faction.valarian} = table[],
					{faction.blacksun} = table[],
					{faction.naboo} = table[],
					{faction.sith} = table[],
					{faction.kamino} = table[],
					{faction.rebelalliance} = table[]
				]" />
				<set_value name="$Accounts.{faction.bankingclan}" exact="table[
					$balance = 0,
					$fee = 0.0025,
					$rate = 0.0075,
					$period = 20h,
					$interest_time = null,
					$undockedFee = 0.0025,
					$inheritanceTax = 0.2,
					$closed = false
				]" />
				<set_value name="$Accounts.{faction.hapes}" exact="table[
					$balance = 0,
					$fee = 0.0025,
					$rate = 0.0075,
					$period = 20h,
					$interest_time = null,
					$undockedFee = 0.0025,
					$inheritanceTax = 0.25,
					$closed = false
				]" />
				<set_value name="$Accounts.{faction.huttpirates}" exact="table[
					$balance = 0,
					$fee = 0.0025,
					$rate = 0.0075,
					$period = 20h,
					$interest_time = null,
					$undockedFee = 0.0025,
					$inheritanceTax = 0.75,
					$closed = false
				]" />
				<set_value name="$Accounts.{faction.mandoraiders}" exact="table[
					$balance = 0,
					$fee = 0.0025,
					$rate = 0.0075,
					$period = 20h,
					$interest_time = null,
					$undockedFee = 0.0025,
					$inheritanceTax = 0.75,
					$closed = false
				]" />
				<set_value name="$Accounts.{faction.valarian}" exact="table[
					$balance = 0,
					$fee = 0.0025,
					$rate = 0.0075,
					$period = 20h,
					$interest_time = null,
					$undockedFee = 0.0025,
					$inheritanceTax = 0.75,
					$closed = false
				]" />
				<set_value name="$Accounts.{faction.blacksun}" exact="table[
					$balance = 0,
					$fee = 0.0025,
					$rate = 0.0075,
					$period = 20h,
					$interest_time = null,
					$undockedFee = 0.0025,
					$inheritanceTax = 0.75,
					$closed = false
				]" />
				<set_value name="$Accounts.{faction.naboo}" exact="table[
					$balance = 0,
					$fee = 0.0025,
					$rate = 0.0075,
					$period = 20h,
					$interest_time = null,
					$undockedFee = 0.0025,
					$inheritanceTax = 0.1,
					$closed = false
				]" />
				<set_value name="$Accounts.{faction.kamino}" exact="table[
					$balance = 0,
					$fee = 0.0025,
					$rate = 0.0075,
					$period = 20h,
					$interest_time = null,
					$undockedFee = 0.0025,
					$inheritanceTax = 0.25,
					$closed = false
				]" />
				<set_value name="$Accounts.{faction.rebelalliance}" exact="table[
					$balance = 0,
					$fee = 0.0025,
					$rate = 0.0075,
					$period = 20h,
					$interest_time = null,
					$undockedFee = 0.0025,
					$inheritanceTax = 0.25,
					$closed = false
				]" />
				<set_value name="$Accounts.{faction.sith}" exact="table[
					$balance = 0,
					$fee = 0.0025,
					$rate = 0.0075,
					$period = 20h,
					$interest_time = null,
					$undockedFee = 0.0025,
					$inheritanceTax = 0,
					$closed = false
				]" />

				<!-- factions with operational branch vaults -->
				<set_value name="$MajorFactionList" exact="table[
					{faction.galempire} = true,
					{faction.ascendancy} = true,
					{faction.newrepublic} = true,
					{faction.commerceguild} = true,
					{faction.corporate} = true,
					{faction.huttcartel} = true,
					{faction.anoat} = true,
					{faction.mandodw} = true
				]" />

				<!-- temp variables -->
				<set_value name="$Relation" exact="0" />
				<set_value name="$Interior" exact="null" />
				<set_value name="$Corridor" exact="null" />
				<set_value name="$Room" exact="null" />
				<set_value name="$Banker" exact="null" />
				<set_value name="$StationTable" exact="null" />
				<set_value name="$StationInterior" exact="null" />
			</actions>
			<cues>
				<cue name="Init">
					<conditions>
						<check_any>
							<event_game_loaded />
							<event_game_started />
							<event_player_created />
							<event_cue_signalled />
						</check_any>
						<check_value value="not @player.allmodules.{player.module}.isscenario" />
					</conditions>
					<delay exact="2s" />
					<actions>
						<do_if value="not $SetupComplete">
							<signal_cue_instantly cue="InitSetup" />
						</do_if>
						<!-- disable npc reactions bank loans -->
						<do_if value="md.kuertee_npc_reactions.NPCReactions.$userIsBankLoans?">
							<set_value name="md.kuertee_npc_reactions.NPCReactions.$userIsBankLoans" exact="false" />
						</do_if>
						<reset_cue cue="Init" />
					</actions>
					<cues>
						<cue name="InitSetup">
							<conditions>
								<event_cue_signalled />
								<check_value value="$SetupComplete == false" />
							</conditions>
							<actions>
								<!-- Clear old BNC ships and objects -->
								<find_object owner="[faction.bankingclan]" space="player.galaxy"
									name="$objects" multiple="true" />
								<do_for_each name="$object" in="$objects">
									<destroy_object object="$object" />
								</do_for_each>

								<!-- Setup Banking Clan-->
								<set_space_faction_logic_allowed space="player.galaxy" allow="true" />
								<set_faction_relation_locked faction="faction.bankingclan" locked="false" />
								<!-- set faction relations -->
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.anoat"
									value="0.2" />
								<set_faction_relation faction="faction.anoat"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.mandodw"
									value="0.2" />
								<set_faction_relation faction="faction.mandodw"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.huttcartel"
									value="0.2" />
								<set_faction_relation faction="faction.huttcartel"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.corporate"
									value="0.2" />
								<set_faction_relation faction="faction.corporate"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.commerceguild"
									value="0.2" />
								<set_faction_relation faction="faction.commerceguild"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.rebelalliance"
									value="0.2" />
								<set_faction_relation faction="faction.rebelalliance"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.newrepublic"
									value="0.2" />
								<set_faction_relation faction="faction.newrepublic"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.ascendancy"
									value="0.2" />
								<set_faction_relation faction="faction.ascendancy"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.sith"
									value="0.2" />
								<set_faction_relation faction="faction.sith"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.galempire"
									value="0.2" />
								<set_faction_relation faction="faction.galempire"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.sienar"
									value="0.2" />
								<set_faction_relation faction="faction.sienar"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.blacksun"
									value="-0.1" />
								<set_faction_relation faction="faction.blacksun"
									otherfaction="faction.bankingclan"
									value="-0.1" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.valarian"
									value="-0.1" />
								<set_faction_relation faction="faction.valarian"
									otherfaction="faction.bankingclan"
									value="-0.1" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.mandoraiders"
									value="-0.1" />
								<set_faction_relation faction="faction.mandoraiders"
									otherfaction="faction.bankingclan"
									value="-0.1" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.huttpirates"
									value="-0.1" />
								<set_faction_relation faction="faction.huttpirates"
									otherfaction="faction.bankingclan"
									value="-0.1" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.hapes"
									value="-0.1" />
								<set_faction_relation faction="faction.hapes"
									otherfaction="faction.bankingclan"
									value="-0.1" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.transgalmeg"
									value="0.2" />
								<set_faction_relation faction="faction.transgalmeg"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.rendili"
									value="0.2" />
								<set_faction_relation faction="faction.rendili"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.naboo"
									value="0.2" />
								<set_faction_relation faction="faction.naboo"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.moncal"
									value="0.2" />
								<set_faction_relation faction="faction.moncal"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.kuat"
									value="0.2" />
								<set_faction_relation faction="faction.kuat"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.kamino"
									value="0.2" />
								<set_faction_relation faction="faction.kamino"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.incom"
									value="0.2" />
								<set_faction_relation faction="faction.incom"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.tagge"
									value="0.2" />
								<set_faction_relation faction="faction.tagge"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.tradefederation"
									value="0.2" />
								<set_faction_relation faction="faction.tradefederation"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.baobab"
									value="0.2" />
								<set_faction_relation faction="faction.baobab"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.twinsuns"
									value="0.2" />
								<set_faction_relation faction="faction.twinsuns"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.indibhg"
									value="0.2" />
								<set_faction_relation faction="faction.indibhg"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.corellia"
									value="0.2" />
								<set_faction_relation faction="faction.corellia"
									otherfaction="faction.bankingclan"
									value="0.2" />
								<set_faction_relation faction="faction.bankingclan"
									otherfaction="faction.hoersh"
									value="0.2" />
								<set_faction_relation faction="faction.hoersh"
									otherfaction="faction.bankingclan"
									value="0.2" />

								<!-- Create Stations -->
								<create_position name="$Position" max="20km" />
								<set_value name="$Y_Position" min="-5km" max="5km" />
								<set_value name="$Position" exact="position.[$Position.x, $Y_Position, $Position.z]" />
								<find_sector name="$sector" macro="macro.swi_clusterscipio_sector001_macro" />
								<create_station rawname="'{20777,1001} {20777,1005} - {20777,1003} {20777,1004}'"
									state="componentstate.operational"
									encyclopedia="true"
									name="$station"
									sector="$sector"
									owner="faction.bankingclan" macro="macro.station_bankingclan_mainvault_macro"
									constructionplan="'vault_bankingclan'">
									<safepos allowyaxis="false" value="$Position" includeplotbox="true" />
								</create_station>
								<set_faction_headquarters faction="faction.bankingclan" station="$station" />
								<set_loadout_level object="$station" exact="0.9" />
								<signal_objects object="player.galaxy" param="'init station'" param2="$station"
									param3="false" />
								<set_value name="$name"
									exact="'{20777,1001} {20777,1005} - {20777,1006} {20777,1004}'" />
								<find_sector name="$sector" macro="macro.swi_clusterbastion_sector001_macro" />
								<create_station rawname="$name" state="componentstate.operational"
									encyclopedia="true"
									name="$station"
									sector="$sector"
									owner="faction.bankingclan" macro="macro.station_bankingclan_branchvault_macro"
									constructionplan="'vault_bankingclan'">
									<safepos allowyaxis="false" value="$Position" includeplotbox="true" />
								</create_station>
								<set_loadout_level object="$station" exact="0.9" />
								<signal_objects object="player.galaxy" param="'init station'" param2="$station"
									param3="false" />
								<find_sector name="$sector" macro="macro.swi_clustereriadu_sector001_macro" />
								<create_station rawname="$name" state="componentstate.operational"
									encyclopedia="false"
									name="$station"
									sector="$sector"
									owner="faction.bankingclan" macro="macro.station_bankingclan_branchvault_macro"
									constructionplan="'vault_bankingclan'">
									<safepos allowyaxis="false" value="$Position" includeplotbox="true" />
								</create_station>
								<set_loadout_level object="$station" exact="0.9" />
								<signal_objects object="player.galaxy" param="'init station'" param2="$station"
									param3="false" />
								<find_sector name="$sector" macro="macro.swi_clustercoruscant_sector001_macro" />
								<create_station rawname="$name" state="componentstate.operational"
									encyclopedia="false"
									name="$station"
									sector="$sector"
									owner="faction.bankingclan" macro="macro.station_bankingclan_branchvault_macro"
									constructionplan="'vault_bankingclan'">
									<safepos allowyaxis="false" value="$Position" includeplotbox="true" />
								</create_station>
								<set_loadout_level object="$station" exact="0.9" />
								<signal_objects object="player.galaxy" param="'init station'" param2="$station"
									param3="false" />
								<find_sector name="$sector" macro="macro.swi_clustercantonica_sector001_macro" />
								<create_station rawname="$name" state="componentstate.operational"
									encyclopedia="false"
									name="$station"
									sector="$sector"
									owner="faction.bankingclan" macro="macro.station_bankingclan_branchvault_macro"
									constructionplan="'vault_bankingclan'">
									<safepos allowyaxis="false" value="$Position" includeplotbox="true" />
								</create_station>
								<set_loadout_level object="$station" exact="0.9" />
								<signal_objects object="player.galaxy" param="'init station'" param2="$station"
									param3="false" />
								<find_sector name="$sector" macro="macro.swi_clusterhypori_sector001_macro" />
								<create_station rawname="$name" state="componentstate.operational"
									encyclopedia="false"
									name="$station"
									sector="$sector"
									owner="faction.bankingclan" macro="macro.station_bankingclan_branchvault_macro"
									constructionplan="'vault_bankingclan'">
									<safepos allowyaxis="false" value="$Position" includeplotbox="true" />
								</create_station>
								<set_loadout_level object="$station" exact="0.9" />
								<signal_objects object="player.galaxy" param="'init station'" param2="$station"
									param3="false" />
								<find_sector name="$sector" macro="macro.swi_clusternarshadda_sector001_macro" />
								<create_station rawname="$name" state="componentstate.operational"
									encyclopedia="false"
									name="$station"
									sector="$sector"
									owner="faction.bankingclan" macro="macro.station_bankingclan_branchvault_macro"
									constructionplan="'vault_bankingclan'">
									<safepos allowyaxis="false" value="$Position" includeplotbox="true" />
								</create_station>
								<set_loadout_level object="$station" exact="0.9" />
								<signal_objects object="player.galaxy" param="'init station'" param2="$station"
									param3="false" />
								<find_sector name="$sector" macro="macro.swi_clusteranpath_sector001_macro" />
								<create_station rawname="$name" state="componentstate.operational"
									encyclopedia="false"
									name="$station"
									sector="$sector"
									owner="faction.bankingclan" macro="macro.station_bankingclan_branchvault_macro"
									constructionplan="'vault_bankingclan'">
									<safepos allowyaxis="false" value="$Position" includeplotbox="true" />
								</create_station>
								<set_loadout_level object="$station" exact="0.9" />
								<signal_objects object="player.galaxy" param="'init station'" param2="$station"
									param3="false" />
								<find_sector name="$sector" macro="macro.swi_clustermandalore_sector001_macro" />
								<create_station rawname="$name" state="componentstate.operational"
									encyclopedia="false"
									name="$station"
									sector="$sector"
									owner="faction.bankingclan" macro="macro.station_bankingclan_branchvault_macro"
									constructionplan="'vault_bankingclan'">
									<safepos allowyaxis="false" value="$Position" includeplotbox="true" />
								</create_station>
								<set_loadout_level object="$station" exact="0.9" />
								<signal_objects object="player.galaxy" param="'init station'" param2="$station"
									param3="false" />
								<remove_value name="$sector" />
								<remove_value name="$station" />

								<!-- Complete -->
								<set_value name="$SetupComplete" exact="true" />
								<reset_cue cue="InitSetup" />
							</actions>
						</cue>
					</cues>
				</cue>

				<cue name="BankingClan_Relation_Change">
					<conditions>
						<event_player_relation_changed />
						<check_value value="event.object == null and event.param != null" />
						<check_value value="$Accounts.keys.list.indexof.{event.param}" />
					</conditions>
					<actions>
						<set_value name="$faction" exact="event.param" />
						<set_value name="$account" exact="Accounts.{$faction}" />
						<set_value name="$newRelation" exact="$faction.relationto.{faction.player}" />
						<set_value name="$changeAmount" exact="event.param2.{1} - event.param2.{2}" />
						<set_value name="$change" exact="false" />
						<do_if value="$newRelation ge 1 and $Relation lt 1">
							<set_value name="$account.$fee" exact="$Fee30" />
							<set_value name="$account.$rate" exact="$Rate30" />
							<set_value name="$account.$period" exact="$Period30" />
							<set_value name="$change" exact="true" />
						</do_if>
						<do_elseif
							value="($newRelation ge 0.1 and $Relation lt 0.1) or ($newRelation lt 1 and $Relation ge 1)">
							<set_value name="$account.$fee" exact="$Fee20" />
							<set_value name="$account.$rate" exact="$Rate20" />
							<set_value name="$account.$period" exact="$Period20" />
							<set_value name="$change" exact="true" />
						</do_elseif>
						<do_elseif
							value="($newRelation ge 0.01 and $Relation lt 0.01) or ($newRelation lt 0.1 and $Relation ge 0.1)">
							<set_value name="$account.$fee" exact="$Fee10" />
							<set_value name="$account.$rate" exact="$Rate10" />
							<set_value name="$account.$period" exact="$Period10" />
							<set_value name="$change" exact="true" />
						</do_elseif>
						<do_elseif
							value="($newRelation ge 0 and $Relation lt 0) or ($newRelation lt 0.01 and $Relation ge 0.01)">
							<set_value name="$account.$fee" exact="$Fee0" />
							<set_value name="$account.$rate" exact="$Rate0" />
							<set_value name="$account.$period" exact="$Period0" />
							<set_value name="$change" exact="true" />
						</do_elseif>
						<do_elseif
							value="($newRelation gt -0.01 and $Relation le -0.01) or ($newRelation lt 0 and $Relation ge 0)">
							<set_value name="$account.$fee" exact="$Fee9" />
							<set_value name="$account.$rate" exact="$Rate9" />
							<set_value name="$account.$period" exact="$Period9" />
							<set_value name="$change" exact="true" />
						</do_elseif>
						<do_elseif
							value="($newRelation le -0.01 and $Relation gt -0.01)">
							<set_value name="$account.$fee" exact="0" />
							<set_value name="$account.$rate" exact="0" />
							<set_value name="$account.$period" exact="0h" />
							<set_value name="$account.$balance" exact="0" />
							<set_value name="$change" exact="true" />
							<set_value name="$closed" exact="true" />
							<run_actions ref="md.kuertee_emergent_missions.Bounties.Bounties_RegisterPilot">
								<param name="Pilot" value="player.entity" />
							</run_actions>
						</do_elseif>
						<set_value name="$Relation" exact="$newRelation" />
						<do_if value="$change and $account.$balance gt 0">
							<set_value name="$opening"
								exact="'This is a Priority Message from the InterGalactic Banking Clan.'" />
							<do_if value="$closed">
								<set_value name="$text"
									exact="'Your account has been closed.\n\nIn accordance with your account contract:\n\nArticle 1530.69201.56882\nClause 831\n\nYou assets held by the InterGalactic Banking Clan have been permanently forfeited.\n\nWe wish you well.'" />
							</do_if>
							<do_else>
								<set_value name="$data"
									exact="'Rate: '+$account.$rate*100+'%\nPeriod: '+$account.$period/3600+'hr\n\n'+{20777, 1006}+' Withdrawal Fee: '+$account.$Fee*100+'%'" />
								<do_if value="$changeAmount gt 0">
									<do_if value="$open">
										<set_value name="$statusText"
											exact="'We are proud to announce a once in a lifetime, hurry now before it is too late, very special, just for you, opportunity to open an account with us.\n\n'" />
									</do_if>
									<do_else>
										<set_value name="$statusText" exact="'Your account status has improved!\n\n'" />
									</do_else>
									<set_value name="$text"
										exact="$opening+'\n\n!! Congratulations !!\n\n'+$statusText+$data+'\n\nWe wish you well.'" />
								</do_if>
								<do_else>
									<set_value name="$text"
										exact="$opening+'\n\n!!! WARNING !!!\n\nWe regret to inform you that based on your recent actions, your account status has been reduced.\n\n'+$data+'\n\nWe wish you well.'" />
								</do_else>
								<remove_value name="$data" />
							</do_else>
							<write_incoming_message highpriority="true"
								source="'The InterGalactic Banking Clan'"
								title="'Account Status'"
								text="$text" />
							<show_help force="true" duration="8s"
								custom="'You have received a Priority Message from the Banking Clan'" position="20" />
							<show_notification
								text="'You have received a Priority Message from the Banking Clan'"
								timeout="8s" sound="ui_mon_eve_money_up" />
							<remove_value name="$change" />
							<remove_value name="$text" />
						</do_if>
						<reset_cue cue="this" />
					</actions>
				</cue>

				<cue name="BankOffice" namespace="this">
					<cues>
						<cue name="BankOfficeAddToStation" version="2">
							<conditions>
								<event_object_signalled object="player.entity" param="'K_ArriveAndLeaveStations'" />
								<check_any>
									<check_all>
										<check_value value="@event.param2.$teleportTo.exists" />
										<check_value value="not @event.param2.$teleportTo.isplayerowned" />
									</check_all>
									<check_all>
										<check_value value="@event.param2.$dockAt.exists" />
										<check_value value="not @event.param2.$dockAt.isplayerowned" />
									</check_all>
								</check_any>
							</conditions>
							<actions>
								<set_value name="$station" exact="@event.param2.$teleportTo" />
								<do_if value="not @$station.exists">
									<set_value name="$station" exact="@event.param2.$dockAt" />
								</do_if>
								<set_value name="$Ships" exact="null" />
								<!-- add bank office if vault or faction has a vault -->
								<do_if value="$station.owner == faction.bankingclan or @$MajorFactionList.{$station.owner}">
									<set_value name="$bankStation" exact="@$bankStations.{$station}" />
									<do_if value="not $bankStation">
										<set_value name="$random" min="1" max="100" />
										<set_value name="$bankStations.{$station}" exact="table[$hasOffice = $random gt 50, $balance = 0, $interestRate = 0.02, $isSpawned = false]" />
										<set_value name="$bankStation" exact="@$bankStations.{$station}" />
									</do_if>
									<do_if value="$bankStation.$hasOffice or $debugChance">
										<do_if value="not $bankStation.$isSpawned">
											<set_value name="$bankStation.$isSpawned" exact="true" />
											<set_value name="$bankManager" exact="@$bankStation.$bankManager" />
											<do_if value="(not $bankManager) or (not $bankManager.exists)">
												<set_value name="$factions" exact="$validFactions" />
												<set_value name="$owner" exact="$station.owner" />
												<create_cue_actor name="$bankManager" cue="this">
													<select faction="$factions.random" />
													<owner exact="$owner" />
												</create_cue_actor>
												<set_entity_traits entity="$bankManager" missionactor="true" />
												<set_entity_overrides entity="$bankManager" icon="'specialist'" />
												<set_value name="$bankStation.$bankManager" exact="$bankManager" />
											</do_if>
											<set_value name="$dockArea" exact="@$bankStation.$dockArea" />
											<do_if value="not $dockArea">
												<find_object_component name="$dockArea" object="$station" class="class.walkablemodule" />
												<set_value name="$bankStation.$dockArea" exact="$dockArea" />
											</do_if>
											<do_if value="$dockArea">
												<get_room_definition macro="$corridorMacro" race="$owner.primaryrace" tags="tag.corridor" />
												<do_if value="not $corridorMacro">
													<get_room_definition macro="$corridorMacro" race="faction.argon.primaryrace" tags="tag.corridor" />
												</do_if>
												<get_room_definition macro="$roomMacro" race="$owner.primaryrace" tags="tag.office" />
												<do_if value="not $roomMacro">
													<get_room_definition macro="$roomMacro" race="faction.argon.primaryrace" tags="tag.office" />
												</do_if>
												<!-- vault office -->
												<do_if value="$owner == faction.bankingclan">
													<set_value name="$roomName" exact="'{20777, 1001} {20777, 1005} - {20777, 1004} {20777, 1007}'" />
												</do_if>
												<!-- branch office -->
												<do_else>
													<set_value name="$roomName" exact="'{20777, 1001} {20777, 1005} - {20777, 1006} {20777, 1007}'" />
												</do_else>
												<create_dynamic_interior object="$station"
													corridor="$corridorMacro" room="$roomMacro"
													name="$roomName"
													interiorname="$interior" corridorname="$corridor" roomname="$room" roomtype="roomtype.office"
													seed="$station.seed + lookup.roomtype.list.indexof.{roomtype.office}" />
												<do_if value="$interior and $corridor and $room">
													<find_npc_slot name="$roomSlot" object="$room" tags="tag.control" />
													<do_if value="$roomSlot">
														<add_actor_to_room actor="$bankManager" slot="$roomSlot" />
													</do_if>
												</do_if>
											</do_if>
										</do_if>
									</do_if>
									<do_else>
										<reset_cue cue="this" />
									</do_else>
								</do_if>
							</actions>
							<cues>
								<!-- Cleanup when the player leaves the station -->
								<cue name="BankOfficeCleanUp">
									<conditions>
										<event_object_signalled object="player.entity" param="'K_ArriveAndLeaveStations'" />
										<check_any>
											<check_value value="@event.param2.$leaveFrom == $station" />
											<check_value value="@event.param2.$undockFrom == $station" />
										</check_any>
									</conditions>
									<actions>
										<do_if value="$bankManager">
											<remove_actor_from_room actor="$bankManager" />
											<destroy_object object="$bankManager" />
										</do_if>
										<do_if value="$interior">
											<remove_dynamic_interior object="$station" interior="$interior" />
											<destroy_object object="$interior" />
										</do_if>
										<destroy_object object="$room" />
										<set_value name="$bankStations.{$station}.$isSpawned" exact="false" />
										<do_if value="not $bankStations.{$station}.$hasOffice">
											<remove_value name="$bankStations.{$station}" />
										</do_if>
										<reset_cue cue="parent" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<!-- conversation cues -->
								<cue name="BankerConversationStart">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<event_conversation_started conversation="default" />
										</check_any>
										<check_any>
											<check_value value="event.object == $bankManager?" />
											<check_all>
												<check_value value="event.object == player.container.tradenpc?" />
												<check_value value="@$Accounts.keys.list.indexof.{$owner}" />
											</check_all>
										</check_any>
									</conditions>
									<actions>
										<set_value name="$Banker" exact="if $bankManager? then $BankManager else event.object" />
										<do_if value="event.name == 'event_cue_signalled'">
											<set_value name="$convoOption_Banker_Account" exact="@event.param.$convoOption_Banker_Account" />
										</do_if>
										<do_else>
											<set_value name="$convoOption_Banker_Account" exact="true" />
										</do_else>
										<do_if value="event.name == 'event_conversation_started' and @md.ExtendedConversationMenu.Main.exists">
											<set_value name="md.ExtendedConversationMenu.Main.$convOptions.$Banker" exact="table[
												$signalCue = BankerConversationStart,
												$params = table[$convoOption_Banker_Account = @$convoOption_Banker_Account]
											]" />
										</do_if>
										<do_else>
											<do_if value="$convoOption_Banker_Account">
												<add_player_choice text="'Access Account'" section="Banker_Account" />
												<!-- todo: find docked ships with lootboxes -->
												<find_ship name="$Ships" owner="faction.player" space="player.container.zone" docked="true" multiple="true" recursive="true">
													<match_any_cargo wares="ware.bank_large_lootbox" />
												</find_ship>
												<do_if value="@player.entity.inventory.{inv_bank_lootbox}.exists or $Ships.count gt 0">
													<add_player_choice text="'Return Lootbox(s)'" section="Banker_Return" />
												</do_if>
											</do_if>
										</do_else>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="BankerConversationNext">
									<conditions>
										<event_conversation_next_section sectionprefix="Banker_" />
									</conditions>
									<actions>
										<do_if value="event.param == 'Banker_Account'">
											<signal_cue_instantly cue="Bank_Menu_Open" />
										</do_if>
										<do_if value="event.param == 'Banker_Return'">
											<set_value name="$lootboxes" exact="@player.entity.inventory.{inv_bank_lootbox}.count" />
											<set_value name="$largelootboxes" exact="0" />
											<do_for_each name="$ship" in="$Ships">
												<set_value name="$largelootboxes" operation="add" exact="@$ship.cargo.{bank_large_lootbox}.count" />
											</do_for_each>
											<set_value name="$reward" exact="$lootboxes * 1000 + $largelootboxes * 20000" />
											<add_faction_relation faction="faction.bankingclan" otherfaction="faction.player" value="$lootboxes * 0.00082 + $largelootboxes * 0.0032" reason="relationchangereason.missioncompleted" />
											<write_incoming_message source="faction.bankingclan" title="'We Greatly Appreciate You'" text="'Thank you for returning '+$lootboxes+$largelootboxes+' lootboxes. We have deposited: '+$reward+'Cr into your account.'" />
											<signal_cue_instantly cue="Transfer" param="table[$faction = faction.bankingclan, $money = ($reward)Cr]" />
										</do_if>
										<reset_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
					</cues>
				</cue>

				<!-- ui account access interaction button -->
				<cue name="Vault_AccountInteractMenu">
					<conditions>
						<event_cue_signalled cue="md.Interact_Menu_API.Get_Actions" />
						<check_value value="@event.param.$object.sector == player.sector" />
						<check_value value="@event.param.$object.isclass.{class.station}" />
						<check_value value="$Accounts.keys.list.indexof.{@event.param.$object.owner} or $MajorFactionList.{@event.param.$object.sector.owner}" />
						<check_value value="@event.param.$object.owner.relationto.{faction.player} gt -0.01" />
						<check_value value="@event.param.$object.distanceto.{player.entity} le 10km" />
					</conditions>
					<actions>
						<signal_cue_instantly cue="md.Interact_Menu_API.Add_Action" param="table[
							$id = 'Vault_AccountMenu',
							$section = 'main',
							$text = 'Access Account',
							$icon = 'menu_swi_credits',
							$callback = Bank_Menu,
							$echo = table[$faction = event.param.$object.owner]
						]" />
						<reset_cue cue="this" />
					</actions>
				</cue>

				<cue name="Bank_Menu" instantiate="true">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<delay exact="1ms" />
					<actions>
						<!-- undocked -->
						<do_if value="event.param.$echo.$faction?">
							<set_value name="$Faction" exact="event.param.$echo.$faction" />
						</do_if>
						<!-- docked -->
						<do_else>
							<set_value name="$Faction" exact="event.object.trueowner" />
						</do_else>
						<!-- determine account -->
						<do_if value="$Faction == faction.bankingclan">
							<set_value name="$Title" exact="'InterGalactic Bank Account'" />
						</do_if>
						<do_elseif value="$Accounts.keys.list.indexof.{$Faction}">
							<set_value name="$Title" exact="$Faction+': Account'" />
						</do_elseif>
						<do_else>
							<set_value name="$Faction" exact="faction.bankingclan" />
							<set_value name="$Title" exact="'InterGalactic Bank Account'" />
						</do_else>
						<set_value name="$account" exact="$Accounts.{$Faction}" />
						<!-- set cue variablse -->
						<set_value name="$Fee" exact="$account.$fee + $account.$undockedFee" />
						<set_value name="$Rate" exact="$account.$rate" />
						<set_value name="$Period" exact="$account.$period" />
						<!-- update interest -->
						<set_value name="$timeSinceInterest" exact="player.age - $account.$interest_time" />
						<do_if value="$timeSinceInterest> 1">
							<set_value name="$newBalance" exact="$account.$balance * ((1 + $Rate)^($timeSinceInterest / $Period))" />
							<set_value name="$Interest_amount" exact="$newBalance - $account.$balance" />
							<set_value name="$Accounts.{$Faction}.$balance" exact="$account.$balance + $interest_amount" />
							<set_value name="$Withdraw_amount" exact="0" />
							<set_value name="$newBalance" exact="$account.$balance" />
							<set_value name="$Accounts.{$Faction}.$interest_time" exact="player.age" />
						</do_if>
						<signal_cue cue="Bank_Menu_Open" />
					</actions>
					<cues>

						<cue name="Bank_Menu_Open" instantiate="true">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<set_value name="$account" exact="$Accounts.{$Faction}" />
								<do_if value="$account.$closed">
									<signal_cue_instantly cue="md.Simple_Menu_API.Create_Menu" param="table[
										$id = 'bank_menu',
										$columns = 1,
										$title = $Title,
										$height = 400,
										$width = 300
									]" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[$interactive=false]" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
										$col=1,
										$halign='center',
										$color='Helper.color.red',
										$text={20777, 1024}
									]" />
								</do_if>
								<do_else>
									<set_value name="$Deposit_amount" exact="0" />
									<set_value name="$Withdraw_amount" exact="0" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Create_Menu" param="table[
										$id = 'bank_menu',
										$columns = 1,
										$title = $Title,
										$height = 400,
										$width = 300
									]" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[$interactive=false]" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
										$col=1,
										$halign='center',
										$text='Status'
									]" />
									<do_if value="$Fee gt 0">
										<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[$interactive=false]" />
										<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
											$col=1,
											$halign='center',
											$color='Helper.color.red',
											$text='('+{20777, 1006}+' Fee: '+ $Fee*100 + '%)'
										]" />
									</do_if>
									<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[$interactive=false]" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col=1, $text='']" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[$interactive=false]" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
											$col=1,
											$halign='center',
											$text=$Rate * 100 + '% interest per ' + $Period / 60 / 60 + ' hours.'
										]" />
									<do_if value="$account.$balance gt 0">
										<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[$interactive=false]" />
										<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col=1, $text='']" />
										<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[$interactive=false]" />
										<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
											$col=1,
											$halign='right',
											$text='Interest earned since last update:'
										]" />
										<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[$interactive=false]" />
										<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
											$col=1,
											$halign='right',
											$text=$Interest_amount+'Cr'
										]" />
									</do_if>
									<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[$interactive=false]" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col=1, $text='']" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_Slider" param="table[
										$start = 0,
										$col = 1,
										$text = table[$text=''],
										$min = 0, $max = player.money, $step = 1, $suffix='Cr',
										$default = 0,
										$onSliderCellChanged = Bank_Menu_Deposit_Amount
									]" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_Button" param="table[
										$col = 1,
										$text = table[$text='Deposit'],
										$onClick = Bank_Menu_Deposit
									]" />
									<do_if value="$account.$balance gt 0">
										<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[$interactive=false]" />
										<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col=1, $text='']" />
										<do_if value="$Fee gt 0">
											<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[$interactive=false]" />
											<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
												$col=1,
												$halign='right',
												$text='Max withdrawal after '+{20777, 1006}+' Fee:'
											]" />
										</do_if>
										<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" />
										<signal_cue_instantly cue="md.Simple_Menu_API.Make_Slider" param="table[
											$start = 0,
											$col = 1,
											$text = table[$text=''],
											$min = 0, $max = $account.$balance / (1+$Fee), $step = 1, $suffix='Cr',
											$default = 0,
											$onSliderCellChanged = Bank_Menu_Withdraw_Amount
										]" />
										<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" />
										<signal_cue_instantly cue="md.Simple_Menu_API.Make_Button" param="table[
											$col = 1,
											$text = table[$text='Withdraw'],
											$onClick = Bank_Menu_Withdraw
										]" />
									</do_if>
								</do_else>
							</actions>
							<cues>
								<!-- sliders -->
								<cue name="Bank_Menu_Deposit_Amount" instantiate="true">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$Deposit_amount" exact="event.param.$value" />
										<cancel_cue cue="this" />
									</actions>
								</cue>
								<cue name="Bank_Menu_Withdraw_Amount" instantiate="true">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$Withdraw_amount" exact="event.param.$value" />
										<cancel_cue cue="this" />
									</actions>
								</cue>

								<!-- actions -->
								<cue name="Bank_Menu_Deposit" instantiate="true">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$account" exact="$Accounts.{$Faction}" />
										<do_if value="player.money ge $Deposit_amount">
											<do_if value="$account.$balance == 0">
												<set_value name="$Accounts.{$Faction}.$interest_time" exact="player.age" />
											</do_if>
											<do_else>
												<set_value name="$timeSinceInterest" exact="player.age - $account.$interest_time" />
												<set_value name="$Accounts.{$Faction}.$interest_time" exact="player.age" />
												<set_value name="$Interest_amount" exact="$account.$balance * ((1 + $Rate)^($timeSinceInterest / $Period) - 1)" />
											</do_else>
											<reward_player money="($Deposit_amount)Cr * -1" />
											<set_value name="$Accounts.{$Faction}.$balance" operation="add" exact="$Deposit_amount + $Interest_amount" />
											<signal_cue_instantly cue="md.Simple_Menu_API.Close_Menu" />
											<signal_cue_instantly cue="Bank_Menu_Open" />
										</do_if>
										<do_else>
											<cancel_cue cue="this" />
										</do_else>
									</actions>
								</cue>
								<cue name="Bank_Menu_Withdraw" instantiate="true">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$account" exact="$Accounts.{$Faction}" />
										<do_if value="$account.$balance ge $Withdraw_amount">
											<set_value name="$timeSinceInterest" exact="player.age - $account.$interest_time" />
											<set_value name="$Accounts.{$Faction}.$interest_time" exact="player.age" />
											<set_value name="$Interest_amount" exact="$account.$balance * ((1 + $Rate)^($timeSinceInterest / $Period) - 1)" />
											<do_if value="$account.$balance - $Withdraw_amount * (1+$Fee) lt 1">
												<reward_player money="($Withdraw_amount * 100)ct + $Interest_amount" />
												<set_value name="$Accounts.{$Faction}.$balance" exact="0" />
											</do_if>
											<do_else>
												<reward_player money="($Withdraw_amount)Cr" />
												<set_value name="$Accounts.{$Faction}.$balance" operation="add" exact="$Interest_amount - $Withdraw_amount * (1+$Fee)" />
											</do_else>
											<signal_cue_instantly cue="md.Simple_Menu_API.Close_Menu" />
											<signal_cue_instantly cue="Bank_Menu_Open" />
										</do_if>
										<do_else>
											<cancel_cue cue="this" />
										</do_else>
									</actions>
								</cue>
							</cues>
						</cue>
					</cues>
				</cue>

				<!-- api -->
				<!-- param: table[$faction = $faction, $money = $money] -->
				<!-- positive money is deposit, negative is withdrawal -->
				<cue name="Transfer">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<actions>
						<set_value name="$faction" exact="event.param.$faction" />
						<do_if value="$faction.hastag.{tag.economic}">
							<do_if value="not $Accounts.keys.list.indexof.{$faction}">
								<set_value name="$faction" exact="faction.bankingclan" />
							</do_if>
							<set_value name="$account" exact="$Accounts.{$faction}" />
							<do_if value="$account.$balance == 0">
								<set_value name="$Accounts.{$faction}.$interest_time" exact="player.age" />
							</do_if>
							<do_else>
								<set_value name="$timeSinceInterest" exact="player.age - $account.$interest_time" />
								<set_value name="$Accounts.{$faction}.$interest_time" exact="player.age" />
								<set_value name="$interest_amount" exact="$account.$balance * ((1 + $account.$rate)^($timeSinceInterest / $account.$period) - 1)" />
								<set_value name="$Accounts.{$faction}.$balance" operation="add" exact="$interest_amount" />
							</do_else>
							<set_value name="$Accounts.{$faction}.$balance" operation="add" exact="event.param.$money" />
						</do_if>
						<!-- catch all for civilian, criminal, smuggler, etc factions -->
						<do_else>
							<reward_player money="event.param.$money" />
						</do_else>
						<reset_cue cue="this" />
					</actions>
				</cue>

				<!-- ui open lootbox interaction button -->
				<cue name="Vault_LootboxInteractMenu">
					<conditions>
						<event_cue_signalled cue="md.Interact_Menu_API.Get_Actions" />
						<check_any>
							<check_value value="player.entity.inventory.{inv_bank_lootbox}.exists" />
							<check_value value="player.entity.inventory.{inv_bank_lootbox_fused}.exists" />
							<check_value value="player.ship.cargo.{bank_largecredit_lootbox}.exists" />
							<check_value value="player.ship.cargo.{bank_largecredit_lootbox_fused}.exists" />
							<check_value value="player.station.cargo.{bank_largecredit_lootbox}.exists and player.station.owner == faction.player" />
							<check_value value="player.station.cargo.{bank_largecredit_lootbox_fused}.exists and player.station.owner == faction.player" />
						</check_any>
					</conditions>
					<actions>
						<signal_cue_instantly cue="md.Interact_Menu_API.Add_Action" param="table[
							$id = 'Vault_LootboxMenu',
							$section = 'hacking_menu',
							$text = ,
							$icon = 'menu_swi_credits',
							$callback = Lootbox_Menu,
							$echo = table[$faction = event.param.$object.owner]
						]" />
						<reset_cue cue="this" />
					</actions>
				</cue>

				<cue name="Lootbox_Menu" instantiate="true">
					<conditions>
						<event_cue_signalled />
					</conditions>
					<delay exact="1ms" />
					<actions>
						<set_value name="$Bypasses" exact="0" />
						<set_value name="$Lootboxes" exact="0" />
						<set_value name="$LargeLootboxes" exact="0" />
						<set_value name="$LootboxesFused" exact="0" />
						<set_value name="$LargeLootboxesFused" exact="0" />
						<set_value name="$UseBypass" exact="true" />
						<set_value name="$inventory" exact="player.entity.inventory" />
						<do_if value="player.ship">
							<set_value name="$Ship" exact="player.ship" />
						</do_if>
						<do_elseif value="player.station and player.station.owner == faction.player">
							<set_value name="$Ship" exact="player.station" />
						</do_elseif>
						<!-- Bypasses available -->
						<do_if value="$inventory.{inv_securitybypasssystem}.exists">
							<set_value name="$Bypasses" exact="$inventory.{inv_securitybypasssystem}.count" />
						</do_if>
						<!-- Lootboxes -->
						<do_if value="$inventory.{inv_bank_lootbox}.exists">
							<set_value name="$Lootboxes" exact="$inventory.{inv_bank_lootbox}.count" />
						</do_if>
						<do_if value="$inventory.{inv_bank_lootbox_fused}.exists">
							<set_value name="$Lootboxes" exact="$inventory.{inv_bank_lootbox_fused}.count" />
						</do_if>
						<do_if value="@$Ship">
							<do_if value="$Ship.cargo.{bank_large_lootbox}.exists">
								<set_value name="$LargeLootboxes" exact="$Ship.cargo.{bank_large_lootbox}.count" />
							</do_if>
							<do_if value="$Ship.cargo.{bank_large_lootbox_fused}.exists">
								<set_value name="$LargeLootboxes" exact="$Ship.cargo.{bank_large_lootbox_fused}.count" />
							</do_if>
						</do_if>
						<signal_cue cue="Lootbox_Menu_Open" />
					</actions>
					<cues>
						<cue name="Lootbox_Menu_Open" instantiate="true">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<delay exact="1ms" />
							<actions>
								<!-- can't use bypass on fused boxes -->
								<do_if value="$Lootboxes == 0 and $LargeLootboxes == 0">
									<set_value name="$UseBypass" exact="false" />
								</do_if>
								<signal_cue_instantly cue="md.Simple_Menu_API.Create_Menu"
									param="table[
									$id = 'Lootbox_Menu',
									$columns = 2,
									$title = $Title,
									$height = 400,
									$width = 300
								]" />
								<!-- show lootbox warning label -->
								<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[$interactive=false]" />
								<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
									$colspan=2,
									$color='Helper.color.red',
									$halign='center',
									$text={20777,1010}
								]" />
								<!-- show use bypass checkbox (Use Bypass: Checkbox -->
								<do_if value="$Bypasses gt 0">
									<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[$interactive=false]" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
										$col=1,
										$halign='left',
										$text='Attempt Security Bypass?'
									]" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_CheckBox" param="table[
                    $checked = $UseBypass,
                    $col = 2,
                    $width = 20,
                    $text = table[$text=''],
                    $onClick = UseBypassCheckbox
                  ]" />
								</do_if>
								<!-- show lootboxes (NxType: OpenButton) -->
								<do_if value="$Lootboxes gt 0">
									<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
										$col=1,
										$halign='left',
										$text=$Lootboxes+'x Lootbox'
									]" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_Button" param="table[
										$id='Lootbox',
										$col = 2,
										$text = table[$text='Open One'],
										$onClick = OpenLootbox
									]" />
								</do_if>
								<do_if value="$LargeLootboxes gt 0">
									<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
										$col=1,
										$halign='left',
										$text=$LargeLootboxes+'x Large Lootbox'
									]" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_Button" param="table[
										$id='LargeLootbox',
										$col = 2,
										$text = table[$text='Open One'],
										$onClick = OpenLootbox
									]" />
								</do_if>
								<!-- fused boxes -->
								<do_if value="$LootboxesFused gt 0 or $LargeLootboxesFused gt 0">
									<!-- show fused lootbox warning -->
									<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$text='']" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" />
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
										$colspan=2,
										$color='Helper.color.red',
										$halign='center',
										$text={20777,1011}
									]" />
									<do_if value="$LootboxesFused gt 0">
										<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" />
										<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
											$col=1,
											$halign='left',
											$text=$LootboxesFused+'x Fused Lootbox'
										]" />
										<signal_cue_instantly cue="md.Simple_Menu_API.Make_Button" param="table[
											$id='Fused',
											$col = 2,
											$text = table[$text='Force Open?'],
											$onClick = OpenLootbox
										]" />
									</do_if>
									<do_if value="$LargeLootboxesFused gt 0">
										<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" />
										<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
											$col=1,
											$halign='left',
											$text=$LargeLootboxesFused+'x Fused Large Lootbox'
										]" />
										<signal_cue_instantly cue="md.Simple_Menu_API.Make_Button" param="table[
											$id='LargeFused',
											$col = 2,
											$text = table[$text='Force Open?'],
											$onClick = OpenLootbox
										]" />
									</do_if>
								</do_if>
							</actions>
							<cues>
								<!-- checkbox -->
								<cue name="UseBypassCheckbox" instantiate="true">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$UseBypass" exact="event.param.$value" />
										<cancel_cue cue="this" />
									</actions>
								</cue>

								<!-- actions -->
								<cue name="OpenLootbox" instantiate="true">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$id" exact="event.param.$id" />
										<set_value name="$bomb" exact="true" chance="5" />
										<set_value name="$roll" min="1" max="20" />
										<!-- bypass used? -->
										<do_if value="$UseBypass">
											<remove_inventory ware="ware.inv_securitybypasssystem" />
											<set_value name="$Bypasses" operation="subtract" exact="1" />
											<!-- 50% success -->
											<do_if value="$roll lt 11">
												<set_value name="$bypassFail" exact="true" />
											</do_if>
											<!-- critinal fail -->
											<do_elseif value="$roll == 1">
												<set_value name="$criticalFail" exact="true" />
												<do_if value="$id == 'Lootbox'">
													<remove_inventory ware="ware.inv_bank_lootbox" />
													<add_inventory ware="ware.inv_bank_lootbox_fused" />
													<set_value name="$Lootboxes" operation="subtract" exact="1" />
													<set_value name="$LootboxesFused" operation="add" exact="1" />
													<set_value name="$size" exact="1" />
												</do_if>
												<do_else>
													<remove_cargo object="$Ship" ware="ware.bank_large_lootbox" exact="1" />
													<add_cargo object="$Ship" ware="ware.bank_large_lootbox_fused" exact="1" />
													<set_value name="$LargeLootboxes" operation="subtract" exact="1" />
													<set_value name="$LargeLootboxesFused" operation="add" exact="1" />
													<set_value name="$size" exact="2" />
												</do_else>
											</do_elseif>
											<!-- successful bypass -->
											<do_else>
												<set_value name="$bypassed" exact="true" />
											</do_else>
										</do_if>
										<!-- Open it, unless bypass failed -->
										<!-- reward the credits -->
										<do_if value="not @$bypassFail">
											<do_if value="not @$bomb">
												<do_if value="$id == 'Lootbox' or $id == 'Fused'">
													<do_if value="$id == 'Lootbox'">
														<remove_inventory ware="ware.inv_bank_lootbox" />
														<set_value name="$Lootboxes" operation="subtract" exact="1" />
													</do_if>
													<do_else>
														<remove_inventory ware="ware.inv_bank_lootbox_fused" />
														<set_value name="$LootboxesFused" operation="subtract" exact="1" />
													</do_else>
													<do_if value="not @$bomb">
														<set_value name="$reward" exact="50000" chance="10" />
														<do_if value="not @$reward">
															<set_value name="$reward" min='1000' max='50000' />
														</do_if>
													</do_if>
													<set_value name="$size" exact="1" />
												</do_if>
												<do_else>
													<do_if value="$id == 'LargeLootbox'">
														<remove_cargo object="$ship" ware="ware.bank_large_lootbox" exact="1" />
														<set_value name="$LargeLootboxes" operation="subtract" exact="1" />
													</do_if>
													<do_else>
														<remove_cargo object="$ship" ware="ware.bank_large_lootbox_fused" exact="1" />
														<set_value name="$LargeLootboxesFused" operation="subtract" exact="1" />
													</do_else>
													<set_value name="$reward" exact="1000000" chance="10" />
													<do_if value="not @$reward">
														<set_value name="$reward" min='20000' max='1000000' />
													</do_if>
													<set_value name="$size" exact="2" />
												</do_else>
												<!-- 50% chance lootbox hacks and broadcasts player's identity to banking clan -->
												<do_if value="not $bypassed and $size == 1" chance="50">
													<add_faction_relation faction="faction.bankingclan" otherfaction="faction.player" value="-0.0032" reason="relationchangereason.hackingdiscovered" />
													<show_notification text="'{20777,2023} {20777,2022}: '+$reward+'Cr'" />
												</do_if>
												<do_elseif value="not $bypassed and $size== 2" chance="50">
													<add_faction_relation faction="faction.bankingclan" otherfaction="faction.player" value="-0.01" reason="relationchangereason.hackingdiscovered" />
													<show_notification text="'{20777,2023} {20777,2022}: '+$reward+'Cr'" />
												</do_elseif>
												<!-- Success -->
												<do_else>
													<show_notification text="'{20777,2022}: '+$reward+'Cr'" />
												</do_else>
												<reward_player money="($reward)Cr" />
											</do_if>
											<!-- bomb -->
											<do_else>
												<do_if value="$UseBypass">
													<do_if value="$id == 'Lootbox'">
														<remove_inventory ware="ware.inv_bank_lootbox" />
														<set_value name="$Lootboxes" operation="subtract" exact="1" />
														<set_value name="$bombs" exact="1" />
													</do_if>
													<do_else>
														<remove_cargo object="$Ship" ware="ware.bank_large_lootbox" exact="1" />
														<set_value name="$LargeLootboxes" operation="subtract" exact="1" />
														<set_value name="$bombs" exact="5" />
													</do_else>
													<add_inventory ware="ware.bomb_player_limpet_mine_01_mk1" exact="$bombs" />
													<show_notification text="'{20777,1018} '+$bombs+'x {20777,1019}'" />
												</do_if>
												<!-- boom -->
												<do_elseif value="not $UseBypass">
													<!-- if ATD then kill player -->
													<do_if value="@md.kuertee_atd.kATD.exists">
														<signal_cue_instantly cue="md.kuertee_atd.kATD.PlayerDeath" param="table[$ship = $Ship, $attackerFaction = $attackerFaction, $isSaveShip = true]" />
													</do_if>
													<!-- if large then destroy ship, damage station -->
													<do_if value="$id == 'LargeLootbox' or $id == 'LargeFused'">
														<do_if value="$Ship.isclass.ship">
															<destroy_object object="$Ship" explosion="true" />
														</do_if>
														<do_else>
															<find_module waretransport="waretransport.container" name="$module" functional="true" object="$Ship" />
														</do_else>
														<destroy_object object="$module" explosion="true" />
													</do_if>
													<signal_cue_instantly cue="md.Simple_Menu_API.Close_Menu" />
												</do_elseif>
											</do_else>
										</do_if>
										<do_else>
											<!-- show bypass failed message -->
											<do_if value="$criticalFail">
												<do_if value="not $bypassed and $size == 1" chance="50">
													<add_faction_relation faction="faction.bankingclan" otherfaction="faction.player" value="-0.0032" reason="relationchangereason.hackingdiscovered" />
												</do_if>
												<do_elseif value="not $bypassed and $size== 2" chance="50">
													<add_faction_relation faction="faction.bankingclan" otherfaction="faction.player" value="-0.01" reason="relationchangereason.hackingdiscovered" />
												</do_elseif>
												<show_notification text="{20777,1021}" />
											</do_if>
											<do_else>
												<show_notification text="{20777,1020}" />
											</do_else>
										</do_else>
										<signal_cue_instantly cue="md.Simple_Menu_API.Close_Menu" />
										<signal_cue_instantly cue="Lootbox_Menu_Open" />
									</actions>
								</cue>
							</cues>
						</cue>
					</cues>
				</cue>

				<!-- unused -->
				<cue name="SpawnLargeLootBox">
					<conditions>
						<check_any>
							<event_cue_signalled />
							<!--check for destroyed vault component-->
						</check_any>
					</conditions>
					<delay exact="2s" />
					<actions>
						<do_all exact="[2,4,6].random">
							<set_value name="$RandomMultiplier" exact="[1.4, 1.5, 1.6, 1.8, 1.9, 2.0, 2.1, 2.2, 2.4, 2.6].random" />
							<do_any>
								<do_all>
									<create_position name="$TargetOffset" space="event.object.sector" object="event.object" />
									<set_value name="$TargetVelocityX" exact="-200 * $RandomMultiplier" />
									<set_value name="$TargetVelocityY" exact="0" />
									<set_value name="$TargetVelocityZ" exact="0" />
								</do_all>
								<do_all>
									<create_position name="$TargetOffset" space="event.object.sector" object="event.object" />
									<set_value name="$TargetVelocityX" exact="-200 * $RandomMultiplier" />
									<set_value name="$TargetVelocityY" exact="0" />
									<set_value name="$TargetVelocityZ" exact="-200 * $RandomMultiplier" />
								</do_all>
								<do_all>
									<create_position name="$TargetOffset" space="event.object.sector" object="event.object" />
									<set_value name="$TargetVelocityX" exact="200 * $RandomMultiplier" />
									<set_value name="$TargetVelocityY" exact="0" />
									<set_value name="$TargetVelocityZ" exact="0" />
								</do_all>
							</do_any>
							<set_value name="$Pitch" min="0" max="360" />
							<set_value name="$Yaw" min="0" max="360" />
							<set_value name="$Roll" min="0" max="360" />
							<create_object name="$lootbox" sector="event.object.sector" macro="macro.bank_wares_macro">
								<position value="$TargetOffset" />
								<rotation pitch="($Pitch)deg" yaw="($Yaw)deg" roll="($Roll)deg" />
							</create_object>
							<add_object_velocity object="$lootbox">
								<linear x="$TargetVelocityX" y="$TargetVelocityY" z="$TargetVelocityZ" />
							</add_object_velocity>
							<add_cargo object="$lootbox" ware="ware.bank_large_credit_lootbox" exact="[1,2,3].random" />
						</do_all>
						<reset_cue cue="this" />
					</actions>
				</cue>

				<cue name="K_ArriveAndLeaveStations" namespace="this">
					<actions>
						<set_value name="$attentionNearbyAndNearer" exact="[attention.nearby, attention.adjacentroom, attention.inroom]" />
						<set_value name="$attentionInZoneAndNearer" exact="[attention.inzone, attention.nearby, attention.adjacentroom, attention.inroom]" />
						<set_value name="md.Notifications.Init.$kuertee_station_new" exact="null" />
						<set_value name="md.Notifications.Init.$kuertee_station_old" exact="null" />
						<set_value name="md.Notifications.Init.$kuertee_station_current" exact="null" />
						<set_value name="md.Notifications.Init.$kuertee_Cue_departOldStation" exact="null" />
						<set_value name="md.Notifications.Init.$kuertee_debugChance" exact="0" />
					</actions>
					<cues>
						<cue name="K_ArriveStation" instantiate="true">
							<conditions>
								<check_any>
									<event_cue_signalled />
									<check_all>
										<!-- Event for the specified object changing attention level (object = attention changing object, param = new attention level, param2 = previous attention level) -->
										<event_object_changed_attention group="md.NPC_Instantiation.Instantiation.$TrackedObjects" />
										<check_value value="event.object.isclass.station" />
										<check_value value="@event.object.macro != @macro.landmarks_par_monument_01_macro" />
										<check_value value="@event.object.macro != @macro.torus_maze_macro" />
									</check_all>
									<check_all>
										<!-- Event for when the player successfully teleports. (param = new room, param2 = old room, param3 = is shortcut instead of real teleport) -->
										<event_player_teleport_successful />
									</check_all>
								</check_any>
							</conditions>
							<actions>
								<set_value name="$isOk" exact="false" />
								<set_value name="$isAlreadyActive" exact="false" />
								<set_value name="$isTeleport" exact="false" />
								<do_if value="event.name == 'event_cue_signalled'">
									<set_value name="$station_this" exact="event.param.$station" />
									<set_value name="$isAlreadyActive" exact="event.param.$isAlreadyActive" />
									<set_value name="$isOk" exact="true" />
								</do_if>
								<do_elseif value="event.name == 'event_object_changed_attention'">
									<do_if value="event.object.isclass.station">
										<set_value name="$station_this" exact="event.object" />
										<set_value name="$isOk" exact="
											$attentionNearbyAndNearer.indexof.{event.param}
											and
											(not $attentionNearbyAndNearer.indexof.{event.param2})
											and
											$station_this != md.Notifications.Init.$kuertee_station_current
										" />
									</do_if>
								</do_elseif>
								<do_elseif value="event.name == 'event_player_teleport_successful'">
									<set_value name="$isTeleport" exact="true" />
									<do_if value="player.station">
										<set_value name="$station_this" exact="player.station" />
										<set_value name="$isOk" exact="
											(
												(not @md.Notifications.Init.$kuertee_station_current)
												or
												(not @param.hascontext.{@md.Notifications.Init.$kuertee_station_current})
											)
											and
											$station_this != md.Notifications.Init.$kuertee_station_current
										" />
									</do_if>
								</do_elseif>
								<do_if value="$isOk">
									<do_if value="not $isAlreadyActive">
										<do_if value="md.Notifications.Init.$kuertee_Cue_departOldStation.exists">
											<do_if value="md.Notifications.Init.$kuertee_Cue_departOldStation.state == cuestate.waiting">
												<signal_cue_instantly cue="md.Notifications.Init.$kuertee_Cue_departOldStation" />
											</do_if>
										</do_if>
										<set_value name="md.Notifications.Init.$kuertee_station_new" exact="$station_this" />
										<set_value name="md.Notifications.Init.$kuertee_station_old" exact="md.Notifications.Init.$kuertee_station_current" />
										<set_value name="md.Notifications.Init.$kuertee_station_current" exact="md.Notifications.Init.$kuertee_station_new" />
									</do_if>
									<do_else>
										<set_value name="md.Notifications.Init.$kuertee_station_new" exact="$station_this" />
										<set_value name="md.Notifications.Init.$kuertee_station_old" exact="md.Notifications.Init.$kuertee_station_current" />
										<set_value name="md.Notifications.Init.$kuertee_station_current" exact="md.Notifications.Init.$kuertee_station_new" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_ArriveStation $isAlreadyActive at: ' + @md.Notifications.Init.$kuertee_station_current.knownname" />
										<debug_text text="'K_ArriveStation $isAlreadyActive at: ' + @md.Notifications.Init.$kuertee_station_current.knownname" />
									</do_else>
								</do_if>
								<do_else>
									<cancel_cue cue="this" />
								</do_else>
							</actions>
							<cues>
								<cue name="K_DepartStation">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<event_object_changed_attention object="md.Notifications.Init.$kuertee_station_current" />
										</check_any>
									</conditions>
									<actions>
										<set_value name="$isOk" exact="false" />
										<set_value name="$isOk" exact="
											event.name == 'event_cue_signalled'
											or
											(
												(not @$attentionNearbyAndNearer.indexof.{@event.param})
												and
												@$attentionNearbyAndNearer.indexof.{@event.param2}
											)
										" />
										<do_if value="$isOk">
											<set_value name="md.Notifications.Init.$kuertee_station_new" exact="null" />
											<set_value name="md.Notifications.Init.$kuertee_station_old" exact="md.Notifications.Init.$kuertee_station_current" />
											<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$leaveFrom = md.Notifications.Init.$kuertee_station_old]" />
											<set_value name="md.Notifications.Init.$kuertee_station_current" exact="md.Notifications.Init.$kuertee_station_new" />
											<raise_lua_event name="'Chat_Window_API.Print'" param="'K_DepartStation new ' + @md.Notifications.Init.$kuertee_station_new.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<raise_lua_event name="'Chat_Window_API.Print'" param="'K_DepartStation old ' + @md.Notifications.Init.$kuertee_station_old.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<raise_lua_event name="'Chat_Window_API.Print'" param="'K_DepartStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<debug_text text="'kuertee K_DepartStation new ' + @md.Notifications.Init.$kuertee_station_new.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<debug_text text="'kuertee K_DepartStation old ' + @md.Notifications.Init.$kuertee_station_old.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<debug_text text="'kuertee K_DepartStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<cancel_cue cue="parent" />
											<reset_cue cue="this" />
										</do_if>
										<do_else>
											<reset_cue cue="this" />
										</do_else>
									</actions>
								</cue>
								<cue name="K_ArriveStation2">
									<actions>
										<set_value name="md.Notifications.Init.$kuertee_Cue_departOldStation" exact="K_DepartStation" />
										<do_if value="$isTeleport">
											<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$teleportTo = md.Notifications.Init.$kuertee_station_new, $leaveFrom = md.Notifications.Init.$kuertee_station_old]" />
										</do_if>
										<do_else>
											<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$arriveAt = md.Notifications.Init.$kuertee_station_new, $leaveFrom = md.Notifications.Init.$kuertee_station_old]" />
										</do_else>
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_ArriveStation new ' + @md.Notifications.Init.$kuertee_station_new.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_ArriveStation old ' + @md.Notifications.Init.$kuertee_station_old.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_ArriveStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_ArriveStation new ' + @md.Notifications.Init.$kuertee_station_new.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_ArriveStation old ' + @md.Notifications.Init.$kuertee_station_old.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_ArriveStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<cancel_cue cue="this" />
									</actions>
								</cue>
								<cue name="K_DockedAtStation">
									<conditions>
										<!-- Event for the specified object docking (object = docking object, param = dock object, param2 = zone) -->
										<event_object_docked group="global.$PlayerContainerGroup" />
										<check_value value="event.param.isclass.station" />
										<check_value value="@event.param.macro != @macro.landmarks_par_monument_01_macro" />
										<check_value value="@event.param.macro != @macro.torus_maze_macro" />
									</conditions>
									<actions>
										<!-- <raise_lua_event name="'Chat_Window_API.Print'" param="'K_DockedAtStation player.station ' + @$player.station.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" /> -->
										<set_value name="md.Notifications.Init.$kuertee_station_current" exact="event.param" />
										<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$dockAt = md.Notifications.Init.$kuertee_station_current]" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_DockedAtStation station_current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_DockedAtStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="K_UndockedFromStation">
									<conditions>
										<!-- Event for the specified object undocking (object = undocking object, param = dock, param2 = zone) -->
										<event_object_undocked group="global.$PlayerContainerGroup" />
										<check_value value="event.param.isclass.station" />
										<check_value value="@event.param.macro != @macro.landmarks_par_monument_01_macro" />
										<check_value value="@event.param.macro != @macro.torus_maze_macro" />
									</conditions>
									<actions>
										<set_value name="md.Notifications.Init.$kuertee_station_current" exact="event.param" />
										<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$undockFrom = md.Notifications.Init.$kuertee_station_current]" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_UndockedFromStation station_current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_UndockedFromStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<reset_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
						<cue name="K_ArriveAndLeaveStations_Debug" namespace="this">
							<conditions>
								<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
								<check_value value="event.param3.$text == 'kuertee debug K_ArriveAndLeaveStations'" />
							</conditions>
							<actions>
								<debug_text text="@event.param3" />
								<raise_lua_event name="'Chat_Window_API.Print'" param="@event.param3.$text" />
								<do_if value="@md.Notifications.Init.$kuertee_debugChance">
									<set_value name="md.Notifications.Init.$kuertee_debugChance" exact="0" />
								</do_if>
								<do_else>
									<set_value name="md.Notifications.Init.$kuertee_debugChance" exact="100" />
								</do_else>
								<reset_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="K_ArriveAndLeaveStations_Init2" namespace="this">
					<conditions>
						<check_any>
							<event_cue_signalled />
							<event_game_loaded />
						</check_any>
						<check_value value="not @player.allmodules.{player.module}.isscenario" />
					</conditions>
					<actions>
						<!-- save station current -->
						<set_value name="$station_current" exact="@md.Notifications.Init.$kuertee_station_current" />
						<do_if value="not @$station_current.exists">
							<set_value name="$station_current" exact="@K_ArriveAndLeaveStations.$kuertee_station_current" />
							<do_if value="not @$station_current.exists">
								<set_value name="$station_current" exact="@K_ArriveAndLeaveStations.$station_current" />
							</do_if>
						</do_if>
						<debug_text text="'$station_current: ' + $station_current + ' (' + @$station_current.knownname + ')'" />
						<do_if value="@md.Notifications.Init.$kuertee_ArriveAndLeaveStations.exists">
							<!-- deregister at every load -->
							<remove_value name="md.Notifications.Init.$kuertee_ArriveAndLeaveStations" />
						</do_if>
						<set_value name="$initDelay" min="0.0s" max="1.0s" />
						<debug_text text="'$initDelay: ' + $initDelay" />
						<!-- reset cue at every load -->
						<reset_cue cue="K_ArriveAndLeaveStations" />
					</actions>
					<cues>
						<cue name="K_ArriveAndLeaveStations_Init3" checktime="player.age + $initDelay">
							<actions>
								<do_if value="not @md.Notifications.Init.$kuertee_ArriveAndLeaveStations.exists">
									<!-- no K_ArriveAndLeaveStations registered -->
									<!-- register this K_ArriveAndLeaveStations -->
									<set_value name="md.Notifications.Init.$kuertee_ArriveAndLeaveStations" exact="K_ArriveAndLeaveStations" />
									<debug_text text="'$kuertee_ArriveAndLeaveStations: ' + @md.Notifications.Init.$kuertee_ArriveAndLeaveStations" />
								</do_if>
								<do_else>
									<!-- cancel this K_ArriveAndLeaveStations, so only one exists -->
									<debug_text text="'cancel_cue ' + K_ArriveAndLeaveStations" />
									<cancel_cue cue="K_ArriveAndLeaveStations" />
									<reset_cue cue="parent" />
								</do_else>
							</actions>
							<cues>
								<cue name="K_ArriveAndLeaveStations_Init4">
									<actions>
										<do_if value="not @$station_current.exists">
											<find_station name="$station" sortbydistanceto="player.entity" space="player.sector" />
											<do_if value="[attention.nearby, attention.adjacentroom, attention.inroom].indexof.{$station.attention}">
												<set_value name="$station_current" exact="$station" />
												<debug_text text="'$station_current (found nearby): ' + $station_current + ' (' + $station_current.knownname + ')'" />
											</do_if>
											<reset_cue cue="K_ArriveAndLeaveStations_Init2" />
										</do_if>
										<do_if value="@$station_current.exists">
											<!-- if there was a $station_current, prepare K_ArriveAndLeaveStations with it -->
											<!-- this is required so that K_DepartStation can continue with $station_current -->
											<!-- <debug_text text="'$kuertee_ArriveAndLeaveStations setting for $station_current: ' + $station_current + ' (' + $station_current.knownname + ')'" /> -->
											<!-- <signal_cue_instantly cue="K_ArriveStation" param="table[$station = $station_current, $isAlreadyActive = true]" /> -->
											<!-- <reset_cue cue="K_ArriveAndLeaveStations_Init2" /> -->
										</do_if>
									</actions>
									<cues>
										<cue name="K_ArriveAndLeaveStations_Init5">
											<actions>
												<debug_text text="'$kuertee_ArriveAndLeaveStations setting for $station_current: ' + $station_current + ' (' + $station_current.knownname + ')'" />
												<signal_cue_instantly cue="K_ArriveStation" param="table[$station = $station_current, $isAlreadyActive = true]" />
												<reset_cue cue="K_ArriveAndLeaveStations_Init2" />
											</actions>
										</cue>
									</cues>
								</cue>
							</cues>
						</cue>
					</cues>
				</cue>
				<cue name="K_ArriveAndLeaveStations_FirstRun2">
					<actions>
						<signal_cue cue="K_ArriveAndLeaveStations_Init2" />
					</actions>
				</cue>

			</cues>
		</cue>
		<cue name="OnLuaLoaderReady">
			<conditions>
				<event_ui_triggered screen="'Lua_Loader'" control="'Ready'" />
			</conditions>
			<actions>
				<raise_lua_event name="'Lua_Loader.Load'" param="'extensions.kuertee_ui_extensions.ui.kuertee_menu_interactmenu'" />
				<raise_lua_event name="'Interact_Menu_API.Add_Custom_Actions_Group_Id'" param="'hacking_menu'" />
				<raise_lua_event name="'Interact_Menu_API.Add_Custom_Actions_Group_Text'" param="{20777, 404404}" />
			</actions>
		</cue>

		<cue name="OnLuaLoaderReadyCompleted">
			<conditions>
				<event_cue_completed cue="OnLuaLoaderReady" />
			</conditions>
			<actions>
				<reset_cue cue="OnLuaLoaderReady" />
				<reset_cue cue="this" />
			</actions>
		</cue>
	</cues>
</mdscript>